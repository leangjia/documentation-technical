# SOME DESCRIPTIVE TITLE.
# Copyright (C) Odoo S.A.
# This file is distributed under the same license as the odoo package.
# 
# Translators:
# Jeffery Chenn <jeffery9@gmail.com>, 2015
# Jeffery Chenn <jeffery9@gmail.com>, 2015-2016
msgid ""
msgstr ""
"Project-Id-Version: odoo documentation technical\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-30 19:35+0800\n"
"PO-Revision-Date: 2016-05-31 07:03+0000\n"
"Last-Translator: Jeffery Chenn <jeffery9@gmail.com>\n"
"Language-Team: Chinese (China) (http://www.transifex.com/odoo-cn/odoo-documentation-technical/language/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../api_integration.rst:9
msgid "Web Service API"
msgstr "Web服务API"

#: ../../api_integration.rst:11
msgid ""
"Odoo is usually extended internally via modules, but many of its features "
"and all of its data are also available from the outside for external "
"analysis or integration with various tools. Part of the "
":ref:`reference/orm/model` API is easily available over XML-RPC_ and "
"accessible from a variety of languages."
msgstr "Odoo通常是内部通过模块扩展, 但它的许多功能和它的所有数据也可以从外部分析或与各种工具集成在外面。 :ref:`reference/orm/model` API是容易获得的基于XML-RPC_和可从各种语言。"

#: ../../api_integration.rst:27
msgid "Connection"
msgstr "连接"

#: ../../api_integration.rst:92
msgid "Configuration"
msgstr "配置"

#: ../../api_integration.rst:94
msgid ""
"If you already have an Odoo server installed, you can just use its "
"parameters"
msgstr "如果您已经安装了Odoo服务器, 你可以使用它的参数"

#: ../../api_integration.rst:99
msgid ""
"For Odoo Online instances (<domain>.odoo.com), users are created without a "
"*local* password (as a person you are logged in via the Odoo Online "
"authentication system, not by the instance itself). To use XML-RPC on Odoo "
"Online instances, you will need to set a password on the user account you "
"want to use:"
msgstr ""

#: ../../api_integration.rst:105
msgid "Log in your instance with an administrator account"
msgstr "使用系统管理员账号登陆你的实例"

#: ../../api_integration.rst:106
msgid "Go to :menuselection:`Settings --> Users --> Users`"
msgstr "进入 :menuselection:`设置 --> 用户 --> 用户` "

#: ../../api_integration.rst:107
msgid "Click on the user you want to use for XML-RPC access"
msgstr ""

#: ../../api_integration.rst:108
msgid "Click the :guilabel:`Change Password` button"
msgstr "点击 :guilabel:`更换密码` 按钮"

#: ../../api_integration.rst:109
msgid ""
"Set a :guilabel:`New Password` value then click :guilabel:`Change Password`."
msgstr ""

#: ../../api_integration.rst:112
msgid ""
"The *server url* is the instance's domain (e.g. "
"*https://mycompany.odoo.com*), the *database name* is the name of the "
"instance (e.g. *mycompany*). The *username* is the configured user's login "
"as shown by the *Change Password* screen."
msgstr ""

#: ../../api_integration.rst:150
msgid "demo"
msgstr "演示"

#: ../../api_integration.rst:152
msgid ""
"To make exploration simpler, you can also ask https://demo.odoo.com for a "
"test database:"
msgstr "为了探索更简单, 您也可以要求https ://demo.odoo.com的测试数据库:"

#: ../../api_integration.rst:184
msgid ""
"These examples use the `Ripcord <https://code.google.com/p/ripcord/>`_ "
"library, which provides a simple XML-RPC API. Ripcord requires that `XML-RPC"
" support be enabled <http://php.net/manual/en/xmlrpc.installation.php>`_ in "
"your PHP installation."
msgstr "这些示例使用 `撕裂绳<https ://code.google.com/p/ripcord/>` _库，它提供了一个简单的XML-RPC API。开伞需要 `XML-RPC支持启用<http: //php.net/manual/en/xmlrpc.installation.php>` _你的PHP安装。"

#: ../../api_integration.rst:190
msgid ""
"Since calls are performed over `HTTPS "
"<http://en.wikipedia.org/wiki/HTTP_Secure>`_, it also requires that the "
"`OpenSSL extension <http://php.net/manual/en/openssl.installation.php>`_ be "
"enabled."
msgstr "由于调用了 `HTTPS <http ://en.wikipedia.org/wiki/HTTP_Secure>执行` _, 这也要求 `OpenSSL的扩展<http: //php.net/manual/en/openssl.installation。 PHP>` _启用。"

#: ../../api_integration.rst:213
msgid ""
"These examples use the `Apache XML-RPC library "
"<https://ws.apache.org/xmlrpc/>`_"
msgstr "这些例子使用'Apache的XML-RPC库<https ://ws.apache.org/xmlrpc/> `_"

#: ../../api_integration.rst:216
msgid ""
"The examples do not include imports as these imports couldn't be pasted in "
"the code."
msgstr "该示例不包括进口, 因为这些进口不能在代码中粘贴。"

#: ../../api_integration.rst:220
msgid "Logging in"
msgstr "登录"

#: ../../api_integration.rst:222
msgid ""
"Odoo requires users of the API to be authenticated before they can query "
"most data."
msgstr "Odoo需要API的用户进行身份验证后, 才能查询大多数数据。"

#: ../../api_integration.rst:225
msgid ""
"The ``xmlrpc/2/common`` endpoint provides meta-calls which don't require "
"authentication, such as the authentication itself or fetching version "
"information. To verify if the connection information is correct before "
"trying to authenticate, the simplest call is to ask for the server's "
"version. The authentication itself is done through the ``authenticate`` "
"function and returns a user identifier (``uid``) used in authenticated calls"
" instead of the login."
msgstr "该 `` XMLRPC / 2 / common `` 端点提供元电话不要求身份验证，如验证自身或获取版本信息。要验证连接信息，试图验证之前正确的，最简单的调用是要求服务器的版本。认证本身是通过 `` authenticate `` 函数来完成，并返回验证的调用，而不是登录使用的用户识别符（ `` uid `` ）。"

#: ../../api_integration.rst:293
msgid "Calling methods"
msgstr "调用方法"

#: ../../api_integration.rst:295
msgid ""
"The second endpoint is ``xmlrpc/2/object``, is used to call methods of odoo "
"models via the ``execute_kw`` RPC function."
msgstr "第二端点是 ``XMLRPC / 2 / object`` , 用于通过 ``execute_kw`` RPC功能调用odoo模型的方法。"

#: ../../api_integration.rst:298
msgid "Each call to ``execute_kw`` takes the following parameters:"
msgstr "每次调用 ``execute_kw`` 采用下列参数:"

#: ../../api_integration.rst:300
msgid "the database to use, a string"
msgstr "数据库, 字符串"

#: ../../api_integration.rst:301
msgid "the user id (retrieved through ``authenticate``), an integer"
msgstr "用户ID（通过 ``authenticate`` 检索）, 整数"

#: ../../api_integration.rst:302
msgid "the user's password, a string"
msgstr "用户的密码, 字符串"

#: ../../api_integration.rst:303
msgid "the model name, a string"
msgstr "模型名称, 字符串"

#: ../../api_integration.rst:304
msgid "the method name, a string"
msgstr "方法名, 字符串"

#: ../../api_integration.rst:305
msgid "an array/list of parameters passed by position"
msgstr "参数按位置传递一个数组/列表"

#: ../../api_integration.rst:306
msgid "a mapping/dict of parameters to pass by keyword (optional)"
msgstr "参数映射/字典路过关键字（可选）"

#: ../../api_integration.rst:310
msgid ""
"For instance to see if we can read the ``res.partner`` model we can call "
"``check_access_rights`` with ``operation`` passed by position and "
"``raise_exception`` passed by keyword (in order to get a true/false result "
"rather than true/error):"
msgstr "比如，看看我们是否可以读取 `` res.partner `` 模型，我们可以称之为 `` check_access_rights `` 与 `` operation `` 经过地位和 `` raise_exception `` 经过关键字（为了获得真正的/假的结果，而不是真正的/错误）:"

#: ../../api_integration.rst:361
msgid "List records"
msgstr "列出记录"

#: ../../api_integration.rst:363
msgid ""
"Records can be listed and filtered via :meth:`~openerp.models.Model.search`."
msgstr "记录能通过 :meth:`~openerp.models.Model.search` 列出和过滤."

#: ../../api_integration.rst:365
msgid ""
":meth:`~openerp.models.Model.search` takes a mandatory :ref:`domain "
"<reference/orm/domains>` filter (possibly empty), and returns the database "
"identifiers of all records matching the filter. To list customer companies "
"for instance:"
msgstr ":meth:`~openerp.models.Model.search` 需要一个强制性的 :ref:'域<reference/ ORM /域> `过滤器（可能为空）, 并返回所有匹配的筛选记录的数据库标识符。要列出客户的公司, 例如:"

#: ../../api_integration.rst:408
msgid "Pagination"
msgstr "分页"

#: ../../api_integration.rst:410
msgid ""
"By default a search will return the ids of all records matching the "
"condition, which may be a huge number. ``offset`` and ``limit`` parameters "
"are available to only retrieve a subset of all matched records."
msgstr "在默认情况下搜索将返回所有匹配的情况下, 这可能是一个庞大的数字记录的ID。 ``offset`` 和 ``limit`` 参数可用于仅检索所有匹配的记录的一个子集。"

#: ../../api_integration.rst:456
msgid "Count records"
msgstr "计数"

#: ../../api_integration.rst:458
msgid ""
"Rather than retrieve a possibly gigantic list of records and count them, "
":meth:`~openerp.models.Model.search_count` can be used to retrieve only the "
"number of records matching the query. It takes the same :ref:`domain "
"<reference/orm/domains>` filter as :meth:`~openerp.models.Model.search` and "
"no other parameter."
msgstr "而不是获取结果可能是巨大的列表，并指望他们， :meth:`~openerp.models.Model.search_count` 可以用来检索匹配的记录的查询只的数量。它采用相同的: :ref: '域<reference/orm/domains> `过滤器 :meth:` ~openerp.models.Model.search `并没有其他的参数。"

#: ../../api_integration.rst:503
msgid ""
"calling ``search`` then ``search_count`` (or the other way around) may not "
"yield coherent results if other users are using the server: stored data "
"could have changed between the calls"
msgstr "调用 ``search`` 然后 ``search_count`` （或其他方式）, 如果其他用户正在使用的服务器可能不会产生一致的结果:存储的数据可能在调用之间改变"

#: ../../api_integration.rst:508
msgid "Read records"
msgstr "读取记录"

#: ../../api_integration.rst:510
msgid ""
"Record data is accessible via the :meth:`~openerp.models.Model.read` method,"
" which takes a list of ids (as returned by "
":meth:`~openerp.models.Model.search`) and optionally a list of fields to "
"fetch. By default, it will fetch all the fields the current user can read, "
"which tends to be a huge amount."
msgstr " :meth:`~openerp.models.Model.read` 方法，该方法ID列表（如返回 :meth:`~openerp.models.Model.search` ）和可选的名单通过记录数据访问字段获取。默认情况下，它会获取所有当前用户可以阅读字段，这往往是一个巨大的数额。"

#: ../../api_integration.rst:578
msgid "Conversedly, picking only three fields deemed interesting."
msgstr "Conversedly, 采摘只有三个字段视为有趣。"

#: ../../api_integration.rst:618
msgid "even if the ``id`` field is not requested, it is always returned"
msgstr "即使 ``id`` 字段没有请求, 它总是返回"

#: ../../api_integration.rst:621
msgid "Listing record fields"
msgstr "列出记录字段"

#: ../../api_integration.rst:623
msgid ""
":meth:`~openerp.models.Model.fields_get` can be used to inspect a model's "
"fields and check which ones seem to be of interest."
msgstr ":meth:`~openerp.models.Model.fields_get` 可以用来检验模型的字段, 并检查哪些似乎兴趣。"

#: ../../api_integration.rst:626
msgid ""
"Because it returns a large amount of meta-information (it is also used by "
"client programs) it should be filtered before printing, the most interesting"
" items for a human user are ``string`` (the field's label), ``help`` (a help"
" text if available) and ``type`` (to know which values to expect, or to send"
" when updating a record):"
msgstr "因为它返回大量的元信息（它也用于由客户端程序）它应该打印前被过滤，对一个人的用户的最有趣的项目是 `` string `` （字段的标签）， `` help `` （帮助文本如有）和 `` type `` （要知道哪些值预期，或更新记录时发送）:"

#: ../../api_integration.rst:705
msgid "Search and read"
msgstr "搜索和读取"

#: ../../api_integration.rst:707
msgid ""
"Because it is a very common task, Odoo provides a "
":meth:`~openerp.models.Model.search_read` shortcut which as its name "
"suggests is equivalent to a :meth:`~openerp.models.Model.search` followed by"
" a :meth:`~openerp.models.Model.read`, but avoids having to perform two "
"requests and keep ids around."
msgstr ""

#: ../../api_integration.rst:713
msgid ""
"Its arguments are similar to :meth:`~openerp.models.Model.search`'s, but it "
"can also take a list of ``fields`` (like :meth:`~openerp.models.Model.read`,"
" if that list is not provided it will fetch all fields of matched records):"
msgstr "它的参数是类似于 :meth:`~openerp.models.Model.search` 的，但它也可以利用 `` fields `` （如列表 :meth:`~openerp.models.Model.read` ，如果没有提供该列表将获取匹配的记录的所有字段）:"

#: ../../api_integration.rst:794
msgid "Create records"
msgstr "创建记录"

#: ../../api_integration.rst:796
msgid ""
"Records of a model are created using :meth:`~openerp.models.Model.create`. "
"The method will create a single record and return its database identifier."
msgstr "创建使用模型的记录 :meth:`~openerp.models.Model.create` 。该方法将创建一个记录, 并返回它的数据库识别符。"

#: ../../api_integration.rst:799
msgid ""
":meth:`~openerp.models.Model.create` takes a mapping of fields to values, "
"used to initialize the record. For any field which has a default value and "
"is not set through the mapping argument, the default value will be used."
msgstr ":meth:`~openerp.models.Model.create` 需要字段以值的映射, 用于初始化记录。为具有默认值, 并且不通过映射的参数设置的任何字段, 默认值将被使用。"

#: ../../api_integration.rst:839
msgid ""
"while most value types are what would be expected (integer for "
":class:`~openerp.fields.Integer`, string for :class:`~openerp.fields.Char` "
"or :class:`~openerp.fields.Text`),"
msgstr "而大多数值类型是什么可以预期（整数 :class:`~openerp.fields.Integer` , 字符串 :class:`~openerp.fields.Char` 或 :class:`~openerp.fields.Text` ） ,"

#: ../../api_integration.rst:843
msgid ""
":class:`~openerp.fields.Date`, :class:`~openerp.fields.Datetime` and "
":class:`~openerp.fields.Binary` fields use string values"
msgstr ":class:`~openerp.fields.Date` , :class:`~openerp.fields.Datetime` 和 :class:`~openerp.fields.Binary` 字段使用字符串值"

#: ../../api_integration.rst:845
msgid ""
":class:`~openerp.fields.One2many` and :class:`~openerp.fields.Many2many` use"
" a special command protocol detailed in :meth:`the documentation to the "
"write method <openerp.models.Model.write>`."
msgstr ":class:`~openerp.fields.One2many` 和 :class:`~openerp.fields.Many2many` 使用中详细描述一个特殊的命令协议 :meth:`文件的写入方法<openerp.models.Model.write>` 。"

#: ../../api_integration.rst:850
msgid "Update records"
msgstr "更新记录"

#: ../../api_integration.rst:852
msgid ""
"Records can be updated using :meth:`~openerp.models.Model.write`, it takes a"
" list of records to update and a mapping of updated fields to values similar"
" to :meth:`~openerp.models.Model.create`."
msgstr "记录可以使用更新 :meth:`~openerp.models.Model.write` , 它需要一个记录列表更新和更新的字段, 以类似值的映射 :meth:`~openerp.models.Model.create` 。"

#: ../../api_integration.rst:856
msgid ""
"Multiple records can be updated simultanously, but they will all get the "
"same values for the fields being set. It is not currently possible to "
"perform \"computed\" updates (where the value being set depends on an "
"existing value of a record)."
msgstr "多个记录可以simultanously更新, 但是他们都将获得被设置为字段相同的值。这是目前无法执行（这里的值被设置取决于记录的现有值）'计算'的更新。"

#: ../../api_integration.rst:911
msgid "Delete records"
msgstr "删除记录"

#: ../../api_integration.rst:913
msgid ""
"Records can be deleted in bulk by providing their ids to "
":meth:`~openerp.models.Model.unlink`."
msgstr ":meth:`~openerp.models.Model.unlink` 记录可以在散装通过提供它们的ID被删除。"

#: ../../api_integration.rst:962
msgid "Inspection and introspection"
msgstr "检查和反省"

#: ../../api_integration.rst:969
msgid ""
"While we previously used :meth:`~openerp.models.Model.fields_get` to query a"
" model and have been using an arbitrary model from the start, Odoo stores "
"most model metadata inside a few meta-models which allow both querying the "
"system and altering models and fields (with some limitations) on the fly "
"over XML-RPC."
msgstr "虽然我们以前使用的 :meth:`~openerp.models.Model.fields_get` 查询模型，并一直在使用，从一开始的任意模型，Odoo卖场最模型元数据内的几个元模型，允许两个查询系统已经和改变模型，对过XML-RPC飞场（有一些限制）。"

#: ../../api_integration.rst:978
msgid "``ir.model``"
msgstr " ``ir.model`` "

#: ../../api_integration.rst:980
msgid "Provides information about Odoo models via its various fields"
msgstr "通过它的各个字段提供有关Odoo车型信息"

#: ../../api_integration.rst:982 ../../api_integration.rst:1131
#: ../../api_integration.rst:1429
msgid "``name``"
msgstr " ``name`` "

#: ../../api_integration.rst:983
msgid "a human-readable description of the model"
msgstr "该模型的人类可读的描述"

#: ../../api_integration.rst:984 ../../api_integration.rst:1427
msgid "``model``"
msgstr " ``model`` "

#: ../../api_integration.rst:985
msgid "the name of each model in the system"
msgstr "系统中的每个模型的名称"

#: ../../api_integration.rst:987 ../../api_integration.rst:1138
msgid "``state``"
msgstr " ``state`` "

#: ../../api_integration.rst:987
msgid ""
"whether the model was generated in Python code (``base``) or by creating an "
"``ir.model`` record (``manual``)"
msgstr "无论是在Python代码生成模型（ ``base`` ）或通过创建一个 ``ir.model`` 记录（ ``manual`` ）"

#: ../../api_integration.rst:990
msgid "``field_id``"
msgstr " ``field_id`` "

#: ../../api_integration.rst:990
msgid ""
"list of the model's fields through a :class:`~openerp.fields.One2many` to "
":ref:`reference/webservice/inspection/fields`"
msgstr ":class:`~openerp.fields.One2many` 为: :ref:`reference/webservice/inspection/fields` 模型的字段, 通过列表"

#: ../../api_integration.rst:993
msgid "``view_ids``"
msgstr " ``view_ids`` "

#: ../../api_integration.rst:993
msgid ""
":class:`~openerp.fields.One2many` to the :ref:`reference/views` defined for "
"the model"
msgstr ":class:`~openerp.fields.One2many` 到: :ref:`reference/ views` 定义的模型"

#: ../../api_integration.rst:997
msgid "``access_ids``"
msgstr " ``access_ids`` "

#: ../../api_integration.rst:996
msgid ""
":class:`~openerp.fields.One2many` relation to the "
":ref:`reference/security/acl` set on the model"
msgstr ":class:`~openerp.fields.One2many` 关系到: :ref:`reference/安全/ acl` 在模型上设置"

#: ../../api_integration.rst:999
msgid "``ir.model`` can be used to"
msgstr " ``ir.model`` 可用于"

#: ../../api_integration.rst:1001
msgid ""
"query the system for installed models (as a precondition to operations on "
"the model or to explore the system's content)"
msgstr "查询（型号为前提, 以操作或探索系统的内容）, 该系统安装模式"

#: ../../api_integration.rst:1003
msgid ""
"get information about a specific model (generally by listing the fields "
"associated with it)"
msgstr "获得关于特定模型信息（通常通过列出与它相关联的字段）"

#: ../../api_integration.rst:1005
msgid "create new models dynamically over RPC"
msgstr "通过RPC动态创建新车型"

#: ../../api_integration.rst:1009
msgid "\"custom\" model names must start with ``x_``"
msgstr "'自定义'型号名称必须以 ``x_`` "

#: ../../api_integration.rst:1010
msgid ""
"the ``state`` must be provided and ``manual``, otherwise the model will not "
"be loaded"
msgstr "在 ``state`` 必须提供和 ``manual`` , 否则模型将不会被加载"

#: ../../api_integration.rst:1012
msgid "it is not possible to add new *methods* to a custom model, only fields"
msgstr "它不可能增加新 *方法* 到自定义模型, 只有字段"

#: ../../api_integration.rst:1016
msgid ""
"a custom model will initially contain only the \"built-in\" fields available"
" on all models:"
msgstr "自定义模型最初将只包含'内置'适用于所有型号的字段:"

#: ../../api_integration.rst:1123
msgid "``ir.model.fields``"
msgstr " ``ir.model.fields`` "

#: ../../api_integration.rst:1125
msgid ""
"Provides information about the fields of Odoo models and allows adding "
"custom fields without using Python code"
msgstr "提供有关Odoo车型字段的信息, 并允许在不使用Python代码添加自定义字段"

#: ../../api_integration.rst:1129
msgid "``model_id``"
msgstr " ``model_id`` "

#: ../../api_integration.rst:1129
msgid ""
":class:`~openerp.fields.Many2one` to "
":ref:`reference/webservice/inspection/models` to which the field belongs"
msgstr ":class:`~openerp.fields.Many2one` 为: :ref:`reference/ Web服务/检验/ models` 到外地所属"

#: ../../api_integration.rst:1132
msgid "the field's technical name (used in ``read`` or ``write``)"
msgstr "该字段的技术名称（ ``read`` 或使用 ``write`` ）"

#: ../../api_integration.rst:1133
msgid "``field_description``"
msgstr " ``field_description`` "

#: ../../api_integration.rst:1134
msgid "the field's user-readable label (e.g. ``string`` in ``fields_get``)"
msgstr "该字段的用户可读的标签（例如 ``string`` 在 ``fields_get`` ）"

#: ../../api_integration.rst:1135
msgid "``ttype``"
msgstr " ``ttype`` "

#: ../../api_integration.rst:1136
msgid "the :ref:`type <reference/orm/fields>` of field to create"
msgstr ":ref: :ref: 字段的 `型<reference/orm/fields>` 创建"

#: ../../api_integration.rst:1138
msgid ""
"whether the field was created via Python code (``base``) or via "
"``ir.model.fields`` (``manual``)"
msgstr "通过Python代码字段是否创建（ ``base`` ）, 或通过 ``ir.model.fields`` （ ``manual`` ）"

#: ../../api_integration.rst:1140
msgid "``required``, ``readonly``, ``translate``"
msgstr " ``required`` , ``readonly`` , ``translate`` "

#: ../../api_integration.rst:1141
msgid "enables the corresponding flag on the field"
msgstr "使相应的标志上的场"

#: ../../api_integration.rst:1143
msgid "``groups``"
msgstr " ``groups`` "

#: ../../api_integration.rst:1143
msgid ""
":ref:`field-level access control <reference/security/fields>`, a "
":class:`~openerp.fields.Many2many` to ``res.groups``"
msgstr ":ref:`字段级的访问控制<reference/安全/域>` , 答 :class:`~openerp.fields.Many2many` 到 ``res.groups`` "

#: ../../api_integration.rst:1147
msgid ""
"``selection``, ``size``, ``on_delete``, ``relation``, ``relation_field``, "
"``domain``"
msgstr " ``selection`` , ``size`` , ``on_delete`` , ``relation`` , ``relation_field`` , ``domain`` "

#: ../../api_integration.rst:1146
msgid ""
"type-specific properties and customizations, see :ref:`the fields "
"documentation <reference/orm/fields>` for details"
msgstr "键入特定的属性和自定义设置, 请参阅 :ref:`字段的文档<reference/orm/fields>` 的详细信息"

#: ../../api_integration.rst:1149
msgid ""
"Like custom models, only new fields created with ``state=\"manual\"`` are "
"activated as actual fields on the model."
msgstr "像定制机型, 只与 ``状态='手动' `创造了新的字段'被激活作为模型的实际字段。"

#: ../../api_integration.rst:1152
msgid ""
"computed fields can not be added via ``ir.model.fields``, some field meta-"
"information (defaults, onchange) can not be set either"
msgstr "计算字段无法通过 ``ir.model.fields`` 增加, 一些外地元信息（默认值, 的onchange）不能设置任何"

#: ../../api_integration.rst:1299
msgid "Workflow manipulations"
msgstr "工作流控制"

#: ../../api_integration.rst:1301
msgid ""
":ref:`reference/workflows` can be moved along by sending them *signals*. "
"Instead of using the top-level ``execute_kw``, signals are sent using "
"``exec_workflow``."
msgstr ":ref:`reference/workflows` 可以同时通过发送 *信号* 感动。代替使用顶层 ``execute_kw`` 的, 信号通过 ``exec_workflow`` 发送。"

#: ../../api_integration.rst:1305
msgid ""
"Signals are sent to a specific record, and possibly trigger a transition on "
"the workflow instance associated with the record."
msgstr "信号被发送到一个特定的记录, 并且可能引发与所述记录相关联的工作流实例的过渡。"

#: ../../api_integration.rst:1310
msgid "this example needs ``account`` module installed"
msgstr "这个例子需要 ``安装account`` 模块"

#: ../../api_integration.rst:1421
msgid "Report printing"
msgstr "报告打印"

#: ../../api_integration.rst:1423
msgid ""
"Available reports can be listed by searching the ``ir.actions.report.xml`` "
"model, fields of interest being"
msgstr "可用的报告可以列出通过搜索 ``ir.actions.report.xml`` 模式, 利益存在的字段"

#: ../../api_integration.rst:1427
msgid ""
"the model on which the report applies, can be used to look for available "
"reports on a specific model"
msgstr "在该报告采用的模型, 可用于查找在特定型号的可用报告"

#: ../../api_integration.rst:1430
msgid "human-readable report name"
msgstr "人类可读的报告名称"

#: ../../api_integration.rst:1432
msgid "``report_name``"
msgstr " ``report_name`` "

#: ../../api_integration.rst:1432
msgid "the technical name of the report, used to print it"
msgstr "打印的报告的技术名称, 使用"

#: ../../api_integration.rst:1434
msgid "Reports can be printed over RPC with the following information:"
msgstr "报告可以打印通过RPC以下信息:"

#: ../../api_integration.rst:1436
msgid "the name of the report (``report_name``)"
msgstr "该报告的名称（ ``report_name`` ）"

#: ../../api_integration.rst:1437
msgid "the ids of the records to include in the report"
msgstr "的记录的ID在报告中包括"

#: ../../api_integration.rst:1502
msgid ""
"the report is sent as PDF binary data encoded in base64_, it must be decoded"
" and may need to be saved to disk before use"
msgstr "报告的形式发送编码的base64_ PDF格式的二进制数据, 它必须被解码, 并且可能需要被保存到磁盘, 使用前"
