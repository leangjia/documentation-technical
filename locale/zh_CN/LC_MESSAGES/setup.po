#
msgid ""
msgstr ""
"Project-Id-Version: odoo master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-09-06 04:27+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../setup.rst:5
msgid "Setting Up"
msgstr ""

#: ../../setup/cdn.rst:3
msgid "Deploying with Content Delivery Networks"
msgstr ""

#: ../../setup/cdn.rst:8
msgid "Deploying with KeyCDN_"
msgstr ""

#: ../../setup/cdn.rst:12
msgid ""
"This document will guide you through the setup of a KeyCDN_ account with "
"your Odoo powered website."
msgstr ""

#: ../../setup/cdn.rst:16
msgid "Step 1: Create a pull zone in the KeyCDN dashboard"
msgstr ""

#: ../../setup/cdn.rst:21
msgid ""
"When creating the zone, enable the CORS option in the :guilabel:`advanced "
"features` submenu. (more on that later)"
msgstr ""

#: ../../setup/cdn.rst:27
msgid ""
"Once done, you'll have to wait a bit while KeyCDN_ is crawling your website."
msgstr ""

#: ../../setup/cdn.rst:32
msgid ""
"a new URL has been generated for your Zone, in this case it is "
"``http://pulltest-b49.kxcdn.com``"
msgstr ""

#: ../../setup/cdn.rst:36
msgid "Step 2: Configure the odoo instance with your zone"
msgstr ""

#: ../../setup/cdn.rst:38
msgid ""
"In the Odoo back end, go to the :guilabel:`Website Settings`: menu, then "
"activate the CDN support and copy/paste your zone URL in the :guilabel:`CDN "
"Base URL` field."
msgstr ""

#: ../../setup/cdn.rst:45
msgid ""
"Now your website is using the CDN for the resources matching the "
":guilabel:`CDN filters` regular expressions."
msgstr ""

#: ../../setup/cdn.rst:48
msgid ""
"You can have a look to the HTML of your website in order to check if the CDN"
" integration is properly working."
msgstr ""

#: ../../setup/cdn.rst:56
msgid "Why should I activate CORS?"
msgstr ""

#: ../../setup/cdn.rst:58
msgid ""
"A security restriction in some browsers (Firefox and Chrome at time of "
"writing) prevents a remotely linked CSS file to fetch relative resources on "
"this same external server."
msgstr ""

#: ../../setup/cdn.rst:62
msgid ""
"If you don't activate the CORS option in the CDN zone, the more obvious "
"resulting problem on a default Odoo website will be the lack of font-awesome"
" icons because the font file declared in the font-awesome CSS won't be "
"loaded on the remote server."
msgstr ""

#: ../../setup/cdn.rst:67
msgid "Here's what you would see on your homepage in such a case:"
msgstr ""

#: ../../setup/cdn.rst:72
msgid "A security error message will also appear in the browser's console:"
msgstr ""

#: ../../setup/cdn.rst:77
msgid "Enabling the CORS option in the CDN fixes this issue."
msgstr ""

#: ../../setup/deploy.rst:5
msgid "Deploying Odoo"
msgstr ""

#: ../../setup/deploy.rst:7
msgid ""
"This document describes basic steps to set up Odoo in production. It follows"
" :ref:`installation <setup/install>`, but should not be used for development"
" systems."
msgstr ""

#: ../../setup/deploy.rst:12
msgid "dbfilter"
msgstr ""

#: ../../setup/deploy.rst:14
msgid ""
"Odoo is a multi-tenant system: a single Odoo system may run and serve a "
"number of database instances. It is also highly customizable, with "
"customizations (starting from the modules being loaded) depending on the "
"\"current database\"."
msgstr ""

#: ../../setup/deploy.rst:18
msgid ""
"This is not an issue when working with the backend (web client) as a logged-"
"in company user: the database can be selected when logging in, and "
"customizations loaded afterwards."
msgstr ""

#: ../../setup/deploy.rst:22
msgid ""
"However it is an issue for non-logged users (portal, website) which aren't "
"bound to a database: Odoo need to know which database should be used for the"
" operations or to get the data. If multi-tenancy is not used that is not an "
"issue, there's only one database to use, but if there are multiple databases"
" accessible Odoo needs a rule to know which one it should use."
msgstr ""

#: ../../setup/deploy.rst:28
msgid ""
"That is one of the purposes of :option:`--db-filter <odoo.py --db-filter>`: "
"it specifies the default database for the Odoo system. The value is a "
"`regular expression`_, possibly including the dynamically injected hostname "
"or subdomain through which the Odoo system is accessed."
msgstr ""

#: ../../setup/deploy.rst:33
msgid ""
"If an Odoo hosts multiple databases in production, especially if ``website``"
" is used, it **must** use a dbfilter or a number of features will not work "
"correctly or not use at all."
msgstr ""

#: ../../setup/deploy.rst:38
msgid "PostgreSQL"
msgstr ""

#: ../../setup/deploy.rst:40
msgid ""
"By default, PostgreSQL only allows connection over UNIX sockets and loopback"
" connections (from \"localhost\", the same machine the PostgreSQL server is "
"installed on)."
msgstr ""

#: ../../setup/deploy.rst:44
msgid ""
"UNIX socket is fine if you want Odoo and PostgreSQL to execute on the same "
"machine, and is the default when no host is provided, but if you want Odoo "
"and PostgreSQL to execute on different machines [#different-machines]_ it "
"will need to `listen to network interfaces`_ [#remote-socket]_, either:"
msgstr ""

#: ../../setup/deploy.rst:49
msgid ""
"only accept loopback connections and `use an SSH tunnel`_ between the "
"machine on which Odoo runs and the one on which PostgreSQL runs, then "
"configure Odoo to connect to its end of the tunnel"
msgstr ""

#: ../../setup/deploy.rst:52
msgid ""
"accept connections to the machine on which Odoo is installed, possibly over "
"ssl (see `PostgreSQL connection settings`_ for details), then configure Odoo"
" to connect over the network"
msgstr ""

#: ../../setup/deploy.rst:59
msgid "Configuring Odoo"
msgstr ""

#: ../../setup/deploy.rst:61
msgid ""
"Out of the box, Odoo connects to a local postgres over UNIX socket via port "
"5432. This can be overridden using :ref:`the database options "
"<reference/cmdline/server/database>` when your Postgres deployment is not "
"local and/or does not use the installation defaults."
msgstr ""

#: ../../setup/deploy.rst:66
msgid ""
"The :ref:`packaged installers <setup/install/packaged>` will automatically "
"create a new user (``odoo``) and set it as the database user."
msgstr ""

#: ../../setup/deploy.rst:69
msgid ""
"The database management screens are protected by the ``admin_passwd`` "
"setting. This setting can only be set using configuration files, and is "
"simply checked before performing database alterations. It should be set to a"
" randomly generated value to ensure third parties can not use this "
"interface."
msgstr ""

#: ../../setup/deploy.rst:74
msgid ""
"all database operations use the :ref:`database options "
"<reference/cmdline/server/database>`, including the database management "
"screen. For the database management screen to work requires that the user "
"have ``createdb`` right."
msgstr ""

#: ../../setup/deploy.rst:78
msgid ""
"users can always drop databases they own. For the database management screen"
" to be completely non-functional, the user needs to be created with ``no-"
"createdb`` and the database must be owned by a different user."
msgstr ""

#: ../../setup/deploy.rst:82
msgid "the user *must not* be a superuser"
msgstr ""

#: ../../setup/deploy.rst:85
msgid "HTTPS"
msgstr ""

#: ../../setup/deploy.rst:87
msgid ""
"Whether it's accessed via website/web client or the webservice, Odoo "
"transmits authentication information in cleatext. This means a secure "
"deployment of Odoo must use HTTPS\\ [#switching]_. SSL termination can be "
"implemented via just about any SSL termination proxy, but requires the "
"following setup:"
msgstr ""

#: ../../setup/deploy.rst:92
msgid ""
"enable Odoo's :option:`proxy mode <odoo.py --proxy-mode>`. This should only "
"be enabled when Odoo is behind a reverse proxy"
msgstr ""

#: ../../setup/deploy.rst:94
msgid "set up the SSL termination proxy (`Nginx termination example`_)"
msgstr ""

#: ../../setup/deploy.rst:95
msgid "set up the proxying itself (`Nginx proxying example`_)"
msgstr ""

#: ../../setup/deploy.rst:96
msgid ""
"your SSL termination proxy should also automatically redirect non-secure "
"connections to the secure port"
msgstr ""

#: ../../setup/deploy.rst:100
msgid "Builtin server"
msgstr ""

#: ../../setup/deploy.rst:102
msgid ""
"Odoo includes built-in HTTP servers, using either multithreading or "
"multiprocessing."
msgstr ""

#: ../../setup/deploy.rst:105
msgid ""
"For production use, it is recommended to use the multiprocessing server as "
"it increases stability, makes somewhat better use of computing resources and"
" can be better monitored and resource-restricted."
msgstr ""

#: ../../setup/deploy.rst:109
msgid ""
"Multiprocessing is enabled by configuring :option:`a non-zero number of "
"worker processes <odoo.py --workers>`, the number of workers should be based"
" on the number of cores in the machine (possibly with some room for cron "
"workers depending on how much cron work is predicted)"
msgstr ""

#: ../../setup/deploy.rst:113
msgid ""
"Worker limits can be configured based on the hardware configuration to avoid"
" resources exhaustion"
msgstr ""

#: ../../setup/deploy.rst:116
msgid "multiprocessing mode currently isn't available on Windows"
msgstr ""

#: ../../setup/deploy.rst:119 ../../setup/deploy.rst:156
msgid "LiveChat"
msgstr ""

#: ../../setup/deploy.rst:121
msgid ""
"In multiprocessing, a dedicated LiveChat worker is automatically started and"
" listening on :option:`the longpolling port <odoo.py --longpolling-port>` "
"but the client will not connect to it."
msgstr ""

#: ../../setup/deploy.rst:125
msgid ""
"Instead you must have a proxy redirecting requests whose URL starts with "
"``/longpolling/`` to the longpolling port. Other request should be proxied "
"to the :option:`normal HTTP port <odoo.py --xmlrpc-port>`"
msgstr ""

#: ../../setup/deploy.rst:130
msgid "Odoo as a WSGI Application"
msgstr ""

#: ../../setup/deploy.rst:132
msgid ""
"It is also possible to mount Odoo as a standard WSGI_ application. Odoo "
"provides the base for a WSGI launcher script as ``openerp-wsgi.py``. That "
"script should be customized (possibly after copying it) to correctly set the"
" configuration directly in :mod:`openerp.tools.config` rather than through "
"the command-line or a configuration file."
msgstr ""

#: ../../setup/deploy.rst:138
msgid ""
"However the WSGI server will only expose the main HTTP endpoint for the web "
"client, website and webservice API. Because Odoo does not control the "
"creation of workers anymore it can not setup cron or livechat workers"
msgstr ""

#: ../../setup/deploy.rst:143
msgid "Cron Workers"
msgstr ""

#: ../../setup/deploy.rst:145
msgid "To run cron jobs for an Odoo deployment as a WSGI application requires"
msgstr ""

#: ../../setup/deploy.rst:147
msgid "a classical Odoo (run via ``odoo.py``)"
msgstr ""

#: ../../setup/deploy.rst:148
msgid ""
"connected to the database in which cron jobs have to be run (via "
":option:`odoo.py -d`)"
msgstr ""

#: ../../setup/deploy.rst:150
msgid ""
"which should not be exposed to the network. To ensure cron runners are not "
"network-accessible, it is possible to disable the built-in HTTP server "
"entirely with :option:`odoo.py --no-xmlrpc` or setting ``xmlrpc = False`` in"
" the configuration file"
msgstr ""

#: ../../setup/deploy.rst:158
msgid ""
"The second problematic subsystem for WSGI deployments is the LiveChat: where"
" most HTTP connections are relatively short and quickly free up their worker"
" process for the next request, LiveChat require a long-lived connection for "
"each client in order to implement near-real-time notifications."
msgstr ""

#: ../../setup/deploy.rst:163
msgid ""
"This is in conflict with the process-based worker model, as it will tie up "
"worker processes and prevent new users from accessing the system. However, "
"those long-lived connections do very little and mostly stay parked waiting "
"for notifications."
msgstr ""

#: ../../setup/deploy.rst:168
msgid ""
"The solutions to support livechat/motifications in a WSGI application are:"
msgstr ""

#: ../../setup/deploy.rst:170
msgid ""
"deploy a threaded version of Odoo (instread of a process-based preforking "
"one) and redirect only requests to URLs starting with ``/longpolling/`` to "
"that Odoo, this is the simplest and the longpolling URL can double up as the"
" cron instance."
msgstr ""

#: ../../setup/deploy.rst:174
msgid ""
"deploy an evented Odoo via ``openerp-gevent`` and proxy requests starting "
"with ``/longpolling/`` to :option:`the longpolling port <odoo.py "
"--longpolling-port>`."
msgstr ""

#: ../../setup/deploy.rst:179
msgid "Serving Static Files"
msgstr ""

#: ../../setup/deploy.rst:181
msgid ""
"For development convenience, Odoo directly serves all static files in its "
"modules. This may not be ideal when it comes to performances, and static "
"files should generally be served by a static HTTP server."
msgstr ""

#: ../../setup/deploy.rst:185
msgid ""
"Odoo static files live in each module's ``static/`` folder, so static files "
"can be served by intercepting all requests to "
":samp:`/{MODULE}/static/{FILE}`, and looking up the right module (and file) "
"in the various addons paths."
msgstr ""

#: ../../setup/deploy.rst:194
msgid "Security"
msgstr ""

#: ../../setup/deploy.rst:197
msgid "\"Super-admin\" password"
msgstr ""

#: ../../setup/deploy.rst:199
msgid ":ref:`setup/deploy/odoo` mentioned ``admin_passwd`` in passing."
msgstr ""

#: ../../setup/deploy.rst:201
msgid ""
"This setting is used on all database management screens (to create, delete, "
"dump or restore databases)."
msgstr ""

#: ../../setup/deploy.rst:204
msgid ""
"If the management screens must not be accessible, or must only be accessible"
" from a selected set of machines, use the proxy server's features to block "
"access to all routes starting with ``/web/database`` except (maybe) "
"``/web/database/selector`` which displays the database-selection screen."
msgstr ""

#: ../../setup/deploy.rst:209
msgid ""
"If the database-management screen should be left accessible, the "
"``admin_passwd`` setting must be changed from its ``admin`` default: this "
"password is checked before allowing database-alteration operations."
msgstr ""

#: ../../setup/deploy.rst:213
msgid "It should be stored securely, and should be generated randomly e.g."
msgstr ""

#: ../../setup/deploy.rst:219
msgid "which will generate a 32 characters pseudorandom printable string."
msgstr ""

#: ../../setup/deploy.rst:222
msgid ""
"to have multiple Odoo installations use the same PostgreSQL database, or to "
"provide more computing resources to both software."
msgstr ""

#: ../../setup/deploy.rst:225
msgid ""
"technically a tool like socat_ can be used to proxy UNIX sockets across "
"networks, but that is mostly for software which can only be used over UNIX "
"sockets"
msgstr ""

#: ../../setup/deploy.rst:229
msgid ""
"or be accessible only over an internal packet-switched network, but that "
"requires secured switches, protections against `ARP spoofing`_ and precludes"
" usage of WiFi. Even over secure packet-switched networks, deployment over "
"HTTPS is recommended, and possible costs are lowered as \"self-signed\" "
"certificates are easier to deploy on a controlled environment than over the "
"internet."
msgstr ""

#: ../../setup/install.rst:7
msgid "Installing Odoo"
msgstr ""

#: ../../setup/install.rst:9
msgid ""
"There are mutliple ways to install Odoo, or not install it at all, depending"
" on the intended use case."
msgstr ""

#: ../../setup/install.rst:12
msgid "This documents attempts to describe most of the installation options."
msgstr ""

#: ../../setup/install.rst:15
msgid ":ref:`setup/install/demo`"
msgstr ""

#: ../../setup/install.rst:15
msgid ""
"the simplest \"installation\", only suitable for getting a quick feel for "
"Odoo or trying something out"
msgstr ""

#: ../../setup/install.rst:21
msgid ":ref:`setup/install/saas`"
msgstr ""

#: ../../setup/install.rst:18
msgid ""
"trivial to start with and fully managed and migrated by Odoo S.A., can be "
"used to both test Odoo and use it for your business, but restricts the "
"flexibility of the system somewhat (check: no custom modules? what else?)."
msgstr ""

#: ../../setup/install.rst:22
msgid "Can be used for both testing Odoo and long-term \"production\" use."
msgstr ""

#: ../../setup/install.rst:28
msgid ":ref:`setup/install/packaged`"
msgstr ""

#: ../../setup/install.rst:24
msgid ""
"simple to get started, allows more flexibility in hosting and deploying the "
"system and greater control over where data is stored. The maintenance burden"
" is shifted to the user."
msgstr ""

#: ../../setup/install.rst:28
msgid ""
"Suitable for testing Odoo, developing modules and can be used for long-term "
"production use with additional deployment and maintenance work."
msgstr ""

#: ../../setup/install.rst:40
msgid ":ref:`setup/install/source`"
msgstr ""

#: ../../setup/install.rst:31
msgid ""
"harder to get started than :ref:`setup/install/packaged`, provides even "
"greater flexibility: packaged installers don't generally allow multiple "
"running Odoo versions on the same system, and don't provide easy source "
"access to Odoo itself."
msgstr ""

#: ../../setup/install.rst:36
msgid ""
"Good for developing modules, can be used as base for production deployment."
msgstr ""

#: ../../setup/install.rst:39
msgid ""
"The source code can be obtained by downloading a tarball or using git. Using"
" git makes it easier to update, switch between multiple versions (including "
"the current development version) or contribute."
msgstr ""

#: ../../setup/install.rst:45
msgid "`docker image <https://registry.hub.docker.com/_/odoo/>`_"
msgstr ""

#: ../../setup/install.rst:43
msgid ""
"if you usually use docker_ for development or deployment, an official "
"docker_ base image is available, see the image's help document for more "
"information"
msgstr ""

#: ../../setup/install.rst:50
msgid "Demo"
msgstr ""

#: ../../setup/install.rst:52
msgid ""
"To simply get a quick idea of Odoo, demo_ instances are available. They are "
"shared instances which only live for a few hours, and can be used to browse "
"around and try things out with no commitment."
msgstr ""

#: ../../setup/install.rst:56
msgid "Demo_ instances require no local installation, just a web browser."
msgstr ""

#: ../../setup/install.rst:61
msgid "SaaS"
msgstr ""

#: ../../setup/install.rst:63
msgid ""
"Odoo's SaaS_ provides private instances and starts out free. It can be used "
"to discover and test Odoo and do non-code customizations without having to "
"install it locally."
msgstr ""

#: ../../setup/install.rst:67
msgid ""
"Like demo_ instances, SaaS_ instances require no local installation, a web "
"browser is sufficient."
msgstr ""

#: ../../setup/install.rst:73
msgid "Packaged installers"
msgstr ""

#: ../../setup/install.rst:75
msgid ""
"Odoo provides packaged installers for Windows, deb-based distributions "
"(Debian, Ubuntu, …) and RPM-based distributions (Fedora, CentOS, RHEL, …)."
msgstr ""

#: ../../setup/install.rst:78
msgid ""
"These packages automatically set up all dependencies, but may be difficult "
"to keep up-to-date."
msgstr ""

#: ../../setup/install.rst:81
msgid ""
"Official packages with all relevant dependency requirements are available on"
" https://nightly.odoo.com."
msgstr ""

#: ../../setup/install.rst:85
msgid "Windows"
msgstr ""

#: ../../setup/install.rst:87
msgid "download https://nightly.odoo.com/8.0/nightly/exe/odoo_8.0.latest.exe"
msgstr ""

#: ../../setup/install.rst:88
msgid "run the downloaded file"
msgstr ""

#: ../../setup/install.rst:90
msgid ""
"on Windows 8, you may see a warning titled \"Windows protected your PC\". "
"Click :guilabel:`More Info` then :guilabel:`Run anyway`"
msgstr ""

#: ../../setup/install.rst:94
msgid "Accept the UAC_ prompt"
msgstr ""

#: ../../setup/install.rst:95
msgid "Go through the various installation steps"
msgstr ""

#: ../../setup/install.rst:97
msgid "Odoo will automatically be started at the end of the installation."
msgstr ""

#: ../../setup/install.rst:100 ../../setup/install.rst:135
#: ../../setup/install.rst:181
msgid "Configuration"
msgstr ""

#: ../../setup/install.rst:102
msgid ""
"The :ref:`configuration file <reference/cmdline/config>` can be found at "
":file:`{%PROGRAMFILES%}\\\\Odoo 8.0-{id}\\\\server\\\\openerp-server.conf`."
msgstr ""

#: ../../setup/install.rst:105
msgid ""
"The configuration file can be edited to connect to a remote Postgresql, edit"
" file locations or set a dbfilter."
msgstr ""

#: ../../setup/install.rst:108
msgid ""
"To reload the configuration file, restart the Odoo service via "
":menuselection:`Services --> odoo server`."
msgstr ""

#: ../../setup/install.rst:112
msgid "Deb"
msgstr ""

#: ../../setup/install.rst:114
msgid ""
"To install Odoo 8.0 on Debian-based distribution, execute the following "
"commands as root:"
msgstr ""

#: ../../setup/install.rst:123
msgid ""
"This will automatically install all dependencies, install Odoo itself as a "
"daemon and automatically start it."
msgstr ""

#: ../../setup/install.rst:126
msgid ""
"to print PDF reports, you must install wkhtmltopdf_ yourself: the version of"
" wkhtmltopdf_ available in debian repositories does not support headers and "
"footers so it can not be installed automatically. The recommended version is"
" 0.12.1 and is available on `the wkhtmltopdf download page`_, in the archive"
" section. As there is no official release for Debian Jessie, you can find "
"ours on http://nightly.odoo.com/extra/."
msgstr ""

#: ../../setup/install.rst:137 ../../setup/install.rst:183
msgid ""
"The :ref:`configuration file <reference/cmdline/config>` can be found at "
":file:`/etc/odoo/openerp-server.conf`"
msgstr ""

#: ../../setup/install.rst:140
msgid ""
"When the configuration file is edited, Odoo must be restarted using "
"``service``:"
msgstr ""

#: ../../setup/install.rst:149
msgid "RPM"
msgstr ""

#: ../../setup/install.rst:153
msgid ""
"with RHEL-based distributions (RHEL, CenOS, Scientific Linux), EPEL_ must be"
" added to the distribution's repositories for all of Odoo's dependencies to "
"be available. For CenOS:"
msgstr ""

#: ../../setup/install.rst:161
msgid "For other RHEL-based distribution, see the EPEL_ documentation."
msgstr ""

#: ../../setup/install.rst:174
msgid ""
"to print PDF reports, you must install wkhtmltopdf_ yourself: the version of"
" wkhtmltopdf_ available in Fedora/CentOS repositories does not support "
"headers and footers so it can not be installed automatically. Use the "
"version available on `the wkhtmltopdf download page`_."
msgstr ""

#: ../../setup/install.rst:186
msgid ""
"When the configuration file is edited, Odoo must be restarted via SystemD:"
msgstr ""

#: ../../setup/install.rst:196
msgid "Source Install"
msgstr ""

#: ../../setup/install.rst:198
msgid ""
"The source \"installation\" really is about not installing Odoo, and running"
" it directly from source instead."
msgstr ""

#: ../../setup/install.rst:201
msgid ""
"This can be more convenient for module developers as the Odoo source is more"
" easily accessible than using packaged installation (for information or to "
"build this documentation and have it available offline)."
msgstr ""

#: ../../setup/install.rst:205
msgid ""
"It also makes starting and stopping Odoo more flexible and explicit than the"
" services set up by the packaged installations, and allows overriding "
"settings using :ref:`command-line parameters <reference/cmdline>` without "
"needing to edit a configuration file."
msgstr ""

#: ../../setup/install.rst:210
msgid ""
"Finally it provides greater control over the system's set up, and allows "
"more easily keeping (and running) multiple versions of Odoo side-by-side."
msgstr ""

#: ../../setup/install.rst:213
msgid "There are two way to get the odoo source source zip or git."
msgstr ""

#: ../../setup/install.rst:215
msgid ""
"Odoo zip can be downloaded from "
"https://nightly.odoo.com/8.0/nightly/src/odoo_8.0.latest.zip, the zip file "
"then needs to be uncompressed to use its content"
msgstr ""

#: ../../setup/install.rst:219
msgid ""
"git allows simpler update and easier switching between differents versions "
"of Odoo. It also simplifies maintaining non-module patches and "
"contributions.  The primary drawback of git is that it is significantly "
"larger than a tarball as it contains the entire history of the Odoo project."
msgstr ""

#: ../../setup/install.rst:224
msgid "The git repository is https://github.com/odoo/odoo.git."
msgstr ""

#: ../../setup/install.rst:226
msgid ""
"Downloading it requires a `git client <http://git-scm.com/download/>`_ "
"(which may be available via your distribution on linux) and can be performed"
" using the following command:"
msgstr ""

#: ../../setup/install.rst:235
msgid "Installing dependencies"
msgstr ""

#: ../../setup/install.rst:237
msgid "Source installation requires manually installing dependencies:"
msgstr ""

#: ../../setup/install.rst:239
msgid "Python 2.7."
msgstr ""

#: ../../setup/install.rst:241
msgid "on Linux and OS X, included by default"
msgstr ""

#: ../../setup/install.rst:242
msgid ""
"on Windows, use `the official Python 2.7.9 installer "
"<https://www.python.org/downloads/windows/>`_."
msgstr ""

#: ../../setup/install.rst:245
msgid ""
"select \"add python.exe to Path\" during installation, and reboot afterwards"
" to ensure the :envvar:`PATH` is updated"
msgstr ""

#: ../../setup/install.rst:248
msgid ""
"if Python is already installed, make sure it is 2.7.9, previous versions are"
" less convenient and 3.x versions are not compatible with Odoo"
msgstr ""

#: ../../setup/install.rst:252
msgid "PostgreSQL, to use a local database"
msgstr ""

#: ../../setup/install.rst:254
msgid ""
"After installation you will need to create a postgres user: by default the "
"only user is ``postgres``, and Odoo forbids connecting as ``postgres``."
msgstr ""

#: ../../setup/install.rst:257
msgid ""
"on Linux, use your distribution's package, then create a postgres user named"
" like your login:"
msgstr ""

#: ../../setup/install.rst:264
msgid ""
"Because the role login is the same as your unix login unix sockets can be "
"use without a password."
msgstr ""

#: ../../setup/install.rst:267
msgid ""
"on OS X, `postgres.app <http://postgresapp.com>`_ is the simplest way to get"
" started, then create a postgres user as on Linux"
msgstr ""

#: ../../setup/install.rst:270
msgid "on Windows, use `PostgreSQL for windows`_ then"
msgstr ""

#: ../../setup/install.rst:272
msgid ""
"add PostgreSQL's ``bin`` directory (default: ``C:\\Program "
"Files\\PostgreSQL\\9.4\\bin``) to your :envvar:`PATH`"
msgstr ""

#: ../../setup/install.rst:274
msgid ""
"create a postgres user with a password using the pg admin gui: open "
"pgAdminIII, double-click the server to create a connection, select "
":menuselection:`Edit --> New Object --> New Login Role`, enter the usename "
"in the :guilabel:`Role Name` field (e.g. ``odoo``), then open the "
":guilabel:`Definition` tab and enter the password (e.g. ``odoo``), then "
"click :guilabel:`OK`."
msgstr ""

#: ../../setup/install.rst:281
msgid ""
"The user and password must be passed to Odoo using either the :option:`-w "
"<odoo.py -w>` and :option:`-r <odoo.py -r>` options or :ref:`the "
"configuration file <reference/cmdline/config>`"
msgstr ""

#: ../../setup/install.rst:285
msgid "Python dependencies listed in the :file:`requirements.txt` file."
msgstr ""

#: ../../setup/install.rst:287
msgid ""
"on Linux, python dependencies may be installable with the system's package "
"manager or using pip."
msgstr ""

#: ../../setup/install.rst:290
msgid ""
"For libraries using native code (Pillow, lxml, greenlet, gevent, psycopg2, "
"ldap) it may be necessary to install development tools and native "
"dependencies before pip is able to install the dependencies themselves. "
"These are available in ``-dev`` or ``-devel`` packages for Python, Postgres,"
" libxml2, libxslt, libevent, libsasl2 and libldap2. Then the Python "
"dependecies can themselves be installed:"
msgstr ""

#: ../../setup/install.rst:301
msgid ""
"on OS X, you will need to install the Command Line Tools (``xcode-select "
"--install``) then download and install a package manager of your choice "
"(homebrew_, macports_) to install non-Python dependencies. pip can then be "
"used to install the Python dependencies as on Linux:"
msgstr ""

#: ../../setup/install.rst:310
msgid ""
"on Windows you need to install some of the dependencies manually, tweak the "
"requirements.txt file, then run pip to install the remaning ones."
msgstr ""

#: ../../setup/install.rst:313
msgid ""
"Install ``psycopg`` using the installer here "
"http://www.stickpeople.com/projects/python/win-psycopg/"
msgstr ""

#: ../../setup/install.rst:316
msgid "Then edit the requirements.txt file:"
msgstr ""

#: ../../setup/install.rst:318
msgid "remove ``psycopg2`` as you already have it."
msgstr ""

#: ../../setup/install.rst:319
msgid ""
"remove the optional ``python-ldap``, ``gevent`` and ``psutil`` because they "
"require compilation."
msgstr ""

#: ../../setup/install.rst:321
msgid "add ``pypiwin32`` because it's needed under windows."
msgstr ""

#: ../../setup/install.rst:323
msgid ""
"Then use pip to install the dependencies using the following command from a "
"cmd.exe prompt (replace ``\\YourOdooPath`` by the actual path where you "
"downloaded Odoo):"
msgstr ""

#: ../../setup/install.rst:332
msgid "*Less CSS* via nodejs"
msgstr ""

#: ../../setup/install.rst:334
msgid ""
"on Linux, use your distribution's package manager to install nodejs and npm."
msgstr ""

#: ../../setup/install.rst:339
msgid ""
"In debian wheezy and Ubuntu 13.10 and before you need to install nodejs "
"manually:"
msgstr ""

#: ../../setup/install.rst:347
msgid ""
"In later debian (>jessie) and ubuntu (>14.04) you may need to add a symlink "
"as npm packages call ``node`` but debian calls the binary ``nodejs``"
msgstr ""

#: ../../setup/install.rst:356
msgid ""
"Once npm is installed, use it to install less and less-plugin-clean-css:"
msgstr ""

#: ../../setup/install.rst:362
msgid ""
"on OS X, install nodejs via your preferred package manager (homebrew_, "
"macports_) then install less and less-plugin-clean-css:"
msgstr ""

#: ../../setup/install.rst:369
msgid ""
"on Windows, `install nodejs <http://nodejs.org/download/>`_, reboot (to "
"update the :envvar:`PATH`) and install less and less-plugin-clean-css:"
msgstr ""

#: ../../setup/install.rst:377
msgid "Running Odoo"
msgstr ""

#: ../../setup/install.rst:379
msgid ""
"Once all dependencies are set up, Odoo can be launched by running "
"``odoo.py``."
msgstr ""

#: ../../setup/install.rst:381
msgid ""
":ref:`Configuration <reference/cmdline>` can be provided either through :ref"
":`command-line arguments <reference/cmdline>` or through a "
":ref:`configuration file <reference/cmdline/config>`."
msgstr ""

#: ../../setup/install.rst:385
msgid "Common necessary configurations are:"
msgstr ""

#: ../../setup/install.rst:387
msgid "PostgreSQL host, port, user and password."
msgstr ""

#: ../../setup/install.rst:389
msgid ""
"Odoo has no defaults beyond `psycopg2's defaults "
"<http://initd.org/psycopg/docs/module.html>`_: connects over a UNIX socket "
"on port 5432 with the current user and no password. By default this should "
"work on Linux and OS X, but it *will not work* on windows as it does not "
"support UNIX sockets."
msgstr ""

#: ../../setup/install.rst:395
msgid "Custom addons path beyond the defaults, to load your own modules"
msgstr ""

#: ../../setup/install.rst:397
msgid "Under Windows a typical way to execute odoo would be:"
msgstr ""

#: ../../setup/install.rst:403
msgid ""
"Where ``odoo``, ``odoo`` are the postgresql login and password, "
"``../mymodules`` a directory with additional addons and ``mydb`` the default"
" db to serve on localhost:8069"
msgstr ""

#: ../../setup/install.rst:407
msgid "Under Unix a typical way to execute odoo would be:"
msgstr ""

#: ../../setup/install.rst:413
msgid ""
"Where ``../mymodules`` is a directory with additional addons and ``mydb`` "
"the default db to serve on localhost:8069"
msgstr ""
