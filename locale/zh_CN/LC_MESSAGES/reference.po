#
msgid ""
msgstr ""
"Project-Id-Version: odoo master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-09-06 04:27+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../reference.rst:3
msgid "Reference"
msgstr ""

#: ../../reference/actions.rst:7
msgid "Actions"
msgstr ""

#: ../../reference/actions.rst:9
msgid ""
"Actions define the behavior of the system in response to user actions: "
"login, action button, selection of an invoice, ..."
msgstr ""

#: ../../reference/actions.rst:12
msgid ""
"Actions can be stored in the database or returned directly as dictionaries "
"in e.g. button methods. All actions share two mandatory attributes:"
msgstr ""

#: ../../reference/actions.rst:16 ../../reference/actions.rst:273
#: ../../reference/data.rst:116 ../../reference/views.rst:214
#: ../../reference/views.rst:749 ../../reference/views.rst:773
msgid "``type``"
msgstr ""

#: ../../reference/actions.rst:16
msgid ""
"the category of the current action, determines which fields may be used and "
"how the action is interpreted"
msgstr ""

#: ../../reference/actions.rst:20 ../../reference/views.rst:216
#: ../../reference/views.rst:249 ../../reference/views.rst:1098
#: ../../reference/views.rst:1158
msgid "``name``"
msgstr ""

#: ../../reference/actions.rst:19
msgid ""
"short user-readable description of the action, may be displayed in the "
"client's interface"
msgstr ""

#: ../../reference/actions.rst:22
msgid "A client can get actions in 4 forms:"
msgstr ""

#: ../../reference/actions.rst:24
msgid "``False``"
msgstr ""

#: ../../reference/actions.rst:25
msgid "if any action dialog is currently open, close it"
msgstr ""

#: ../../reference/actions.rst:27
msgid "A string"
msgstr ""

#: ../../reference/actions.rst:27
msgid ""
"if a :ref:`client action <reference/actions/client>` matches, interpret as a"
" client action's tag, otherwise treat as a number"
msgstr ""

#: ../../reference/actions.rst:30
msgid "A number"
msgstr ""

#: ../../reference/actions.rst:30
msgid ""
"read the corresponding action record from the database, may be a database "
"identifier or an :term:`external id`"
msgstr ""

#: ../../reference/actions.rst:33
msgid "A dictionary"
msgstr ""

#: ../../reference/actions.rst:33
msgid "treat as a client action descriptor and execute"
msgstr ""

#: ../../reference/actions.rst:38
msgid "Window Actions (``ir.actions.act_window``)"
msgstr ""

#: ../../reference/actions.rst:40
msgid ""
"The most common action type, used to present visualisations of a model "
"through :ref:`views <reference/views>`: a window action defines a set of "
"view types (and possibly specific views) for a model (and possibly specific "
"record of the model)."
msgstr ""

#: ../../reference/actions.rst:45
msgid "Its fields are:"
msgstr ""

#: ../../reference/actions.rst:47
msgid "``res_model``"
msgstr ""

#: ../../reference/actions.rst:48
msgid "model to present views for"
msgstr ""

#: ../../reference/actions.rst:56
msgid "``views``"
msgstr ""

#: ../../reference/actions.rst:50
msgid ""
"a list of ``(view_id, view_type)`` pairs. The second element of each pair is"
" the category of the view (tree, form, graph, ...) and the first is an "
"optional database id (or ``False``). If no id is provided, the client should"
" fetch the default view of the specified type for the requested model (this "
"is automatically done by :meth:`~openerp.models.Model.fields_view_get`). The"
" first type of the list is the default view type and will be open by default"
" when the action is executed. Each view type should be present at most once "
"in the list"
msgstr ""

#: ../../reference/actions.rst:59
msgid "``res_id`` (optional)"
msgstr ""

#: ../../reference/actions.rst:59
msgid ""
"if the default view is ``form``, specifies the record to load (otherwise a "
"new record should be created)"
msgstr ""

#: ../../reference/actions.rst:63
msgid "``search_view_id`` (optional)"
msgstr ""

#: ../../reference/actions.rst:62
msgid ""
"``(id, name)`` pair, ``id`` is the database identifier of a specific search "
"view to load for the action. Defaults to fetching the default search view "
"for the model"
msgstr ""

#: ../../reference/actions.rst:66
msgid "``target`` (optional)"
msgstr ""

#: ../../reference/actions.rst:66
msgid ""
"whether the views should be open in the main content area (``current``) or "
"in a dialog/popup (``new``). Defaults to ``current``."
msgstr ""

#: ../../reference/actions.rst:68 ../../reference/actions.rst:178
msgid "``context`` (optional)"
msgstr ""

#: ../../reference/actions.rst:69
msgid "additional context data to pass to the views"
msgstr ""

#: ../../reference/actions.rst:70
msgid "``domain`` (optional)"
msgstr ""

#: ../../reference/actions.rst:71
msgid "filtering domain to implicitly add to all view search queries"
msgstr ""

#: ../../reference/actions.rst:73
msgid "``limit`` (optional)"
msgstr ""

#: ../../reference/actions.rst:73
msgid ""
"number of records to display in lists by default. Defaults to 80 in the web "
"client"
msgstr ""

#: ../../reference/actions.rst:77
msgid "``auto_search`` (optional)"
msgstr ""

#: ../../reference/actions.rst:76
msgid ""
"whether a search should be performed immediately after loading the default "
"view. Defaults to ``True``"
msgstr ""

#: ../../reference/actions.rst:79
msgid ""
"For instance, to open customers (partner with the ``customer`` flag set) "
"with list and form views::"
msgstr ""

#: ../../reference/actions.rst:89
msgid ""
"Or to open the form view of a specific product (obtained separately) in a "
"new dialog::"
msgstr ""

#: ../../reference/actions.rst:100
msgid ""
"In-database window actions have a few different fields which should be "
"ignored by clients, mostly to use in composing the ``views`` list:"
msgstr ""

#: ../../reference/actions.rst:104
msgid "``view_mode``"
msgstr ""

#: ../../reference/actions.rst:104
msgid ""
"comma-separated list of view types as a string. All of these types will be "
"present in the generated ``views`` list (with at least a ``False`` view_id)"
msgstr ""

#: ../../reference/actions.rst:107
msgid "``view_ids``"
msgstr ""

#: ../../reference/actions.rst:107
msgid ""
"M2M\\ [#notquitem2m]_ to view objects, defines the initial content of "
"``views``"
msgstr ""

#: ../../reference/actions.rst:112
msgid "``view_id``"
msgstr ""

#: ../../reference/actions.rst:110
msgid ""
"specific view added to the ``views`` list in case its type is part of the "
"``view_mode`` list and not already filled by one of the views in "
"``view_ids``"
msgstr ""

#: ../../reference/actions.rst:114
msgid ""
"These are mostly used when defining actions from :ref:`reference/data`:"
msgstr ""

#: ../../reference/actions.rst:125
msgid ""
"will use the \"my_specific_view\" view even if that's not the default view "
"for the model."
msgstr ""

#: ../../reference/actions.rst:128
msgid ""
"The server-side composition of the ``views`` sequence is the following:"
msgstr ""

#: ../../reference/actions.rst:130
msgid "get each ``(id, type)`` from ``view_ids`` (ordered by ``sequence``)"
msgstr ""

#: ../../reference/actions.rst:131
msgid ""
"if ``view_id`` is defined and its type isn't already filled, append its "
"``(id, type)``"
msgstr ""

#: ../../reference/actions.rst:133
msgid "for each unfilled type in ``view_mode``, append ``(False, type)``"
msgstr ""

#: ../../reference/actions.rst:146
msgid "URL Actions (``ir.actions.act_url``)"
msgstr ""

#: ../../reference/actions.rst:148
msgid ""
"Allow opening a URL (website/web page) via an Odoo action. Can be customized"
" via two fields:"
msgstr ""

#: ../../reference/actions.rst:151
msgid "``url``"
msgstr ""

#: ../../reference/actions.rst:152
msgid "the address to open when activating the action"
msgstr ""

#: ../../reference/actions.rst:155
msgid "``target``"
msgstr ""

#: ../../reference/actions.rst:154
msgid ""
"opens the address in a new window/page if ``new``, replaces the current "
"content with the page if ``self``. Defaults to ``new``"
msgstr ""

#: ../../reference/actions.rst:165
msgid "will replace the current content section by the Odoo home page."
msgstr ""

#: ../../reference/actions.rst:170
msgid "Server Actions (``ir.actions.server``)"
msgstr ""

#: ../../reference/actions.rst:172
msgid ""
"Allow triggering complex server code from any valid action location. Only "
"two fields are relevant to clients:"
msgstr ""

#: ../../reference/actions.rst:175 ../../reference/data.rst:51
#: ../../reference/data.rst:136 ../../reference/data.rst:200
#: ../../reference/data.rst:210 ../../reference/reports.rst:34
msgid "``id``"
msgstr ""

#: ../../reference/actions.rst:176
msgid "the in-database identifier of the server action to run"
msgstr ""

#: ../../reference/actions.rst:178
msgid "context data to use when running the server action"
msgstr ""

#: ../../reference/actions.rst:180
msgid ""
"In-database records are significantly richer and can perform a number of "
"specific or generic actions based on their ``state``. Some fields (and "
"corresponding behaviors) are shared between states:"
msgstr ""

#: ../../reference/actions.rst:185
msgid "``model_id``"
msgstr ""

#: ../../reference/actions.rst:185
msgid ""
"Odoo model linked to the action, made available in :ref:`evaluation contexts"
" <reference/actions/server/context>`"
msgstr ""

#: ../../reference/actions.rst:190
msgid "``condition`` (optional)"
msgstr ""

#: ../../reference/actions.rst:188
msgid ""
"evaluated as Python code using the server action's :ref:`evaluation context "
"<reference/actions/server/context>`. If ``False``, prevents the action from "
"running. Default: ``True``"
msgstr ""

#: ../../reference/actions.rst:192
msgid ""
"Valid action types (``state`` field) are extensible, the default types are:"
msgstr ""

#: ../../reference/actions.rst:195 ../../reference/actions.rst:203
msgid "``code``"
msgstr ""

#: ../../reference/actions.rst:197
msgid ""
"The default and most flexible server action type, executes arbitrary Python "
"code with the action's :ref:`evaluation context "
"<reference/actions/server/context>`. Only uses one specific type-specific "
"field:"
msgstr ""

#: ../../reference/actions.rst:203
msgid "a piece of Python code to execute when the action is called"
msgstr ""

#: ../../reference/actions.rst:217
msgid ""
"The code segment can define a variable called ``action``, which will be "
"returned to the client as the next action to execute:"
msgstr ""

#: ../../reference/actions.rst:236
msgid ""
"will ask the client to open a form for the record if it fullfils some "
"condition"
msgstr ""

#: ../../reference/actions.rst:239
msgid ""
"This tends to be the only action type created from :ref:`data files "
"<reference/data>`, other types aside from "
":ref:`reference/actions/server/multi` are simpler than Python code to define"
" from the UI, but not from :ref:`data files <reference/data>`."
msgstr ""

#: ../../reference/actions.rst:247
msgid "``object_create``"
msgstr ""

#: ../../reference/actions.rst:249
msgid ""
"Creates a new record, from scratch (via "
":meth:`~openerp.models.Model.create`) or by copying an existing record (via "
":meth:`~openerp.models.Model.copy`)"
msgstr ""

#: ../../reference/actions.rst:261
msgid "``use_create``"
msgstr ""

#: ../../reference/actions.rst:253
msgid "the creation policy, one of:"
msgstr ""

#: ../../reference/actions.rst:255
msgid "``new``"
msgstr ""

#: ../../reference/actions.rst:256
msgid "creates a record in the model specified by ``model_id``"
msgstr ""

#: ../../reference/actions.rst:257
msgid "``new_other``"
msgstr ""

#: ../../reference/actions.rst:258
msgid "creates a record in the model specified by ``crud_model_id``"
msgstr ""

#: ../../reference/actions.rst:259
msgid "``copy_current``"
msgstr ""

#: ../../reference/actions.rst:260
msgid "copies the record on which the action was invoked"
msgstr ""

#: ../../reference/actions.rst:261
msgid "``copy_other``"
msgstr ""

#: ../../reference/actions.rst:262
msgid "copies an other record, obtained via ``ref_object``"
msgstr ""

#: ../../reference/actions.rst:273 ../../reference/actions.rst:309
msgid "``fields_lines``"
msgstr ""

#: ../../reference/actions.rst:264
msgid ""
"fields to override when creating or copying the record. "
":class:`~openerp.fields.One2many` with the fields:"
msgstr ""

#: ../../reference/actions.rst:267
msgid "``col1``"
msgstr ""

#: ../../reference/actions.rst:268
msgid "``ir.model.fields`` to set in the model implied by ``use_create``"
msgstr ""

#: ../../reference/actions.rst:269 ../../reference/javascript.rst:648
#: ../../reference/orm.rst:1000
msgid "``value``"
msgstr ""

#: ../../reference/actions.rst:270
msgid "value for the field, interpreted via ``type``"
msgstr ""

#: ../../reference/actions.rst:272
msgid ""
"If ``value``, the ``value`` field is interpreted as a literal value "
"(possibly converted), if ``equation`` the ``value`` field is interpreted as "
"a Python expression and evaluated"
msgstr ""

#: ../../reference/actions.rst:276 ../../reference/actions.rst:311
msgid "``crud_model_id``"
msgstr ""

#: ../../reference/actions.rst:276
msgid ""
"model in which to create a new record, if ``use_create`` is set to "
"``new_other``"
msgstr ""

#: ../../reference/actions.rst:279 ../../reference/actions.rst:314
msgid "``ref_object``"
msgstr ""

#: ../../reference/actions.rst:279
msgid ""
":class:`~openerp.fields.Reference` to an arbitrary record to copy, used if "
"``use_create`` is set to ``copy_other``"
msgstr ""

#: ../../reference/actions.rst:282
msgid "``link_new_record``"
msgstr ""

#: ../../reference/actions.rst:282
msgid ""
"boolean flag linking the newly created record to the current one via a "
"many2one field specified through ``link_field_id``, defaults to ``False``"
msgstr ""

#: ../../reference/actions.rst:286
msgid "``link_field_id``"
msgstr ""

#: ../../reference/actions.rst:285
msgid ""
"many2one to ``ir.model.fields``, specifies the current record's m2o field on"
" which the newly created record should be set (models should match)"
msgstr ""

#: ../../reference/actions.rst:289
msgid "``object_write``"
msgstr ""

#: ../../reference/actions.rst:291
msgid ""
"Similar to :ref:`reference/actions/server/object_create` but alters an "
"existing records instead of creating one"
msgstr ""

#: ../../reference/actions.rst:303
msgid "``use_write``"
msgstr ""

#: ../../reference/actions.rst:295
msgid "write policy, one of:"
msgstr ""

#: ../../reference/actions.rst:297
msgid "``current``"
msgstr ""

#: ../../reference/actions.rst:298
msgid "write to the current record"
msgstr ""

#: ../../reference/actions.rst:300
msgid "``other``"
msgstr ""

#: ../../reference/actions.rst:300
msgid ""
"write to an other record selected via ``crud_model_id`` and ``ref_object``"
msgstr ""

#: ../../reference/actions.rst:303
msgid "``expression``"
msgstr ""

#: ../../reference/actions.rst:303
msgid ""
"write to an other record whose model is selected via ``crud_model_id`` and "
"whose id is selected by evaluating ``write_expression``"
msgstr ""

#: ../../reference/actions.rst:307
msgid "``write_expression``"
msgstr ""

#: ../../reference/actions.rst:306
msgid ""
"Python expression returning a record or an object id, used when "
"``use_write`` is set to ``expression`` in order to decide which record "
"should be modified"
msgstr ""

#: ../../reference/actions.rst:310 ../../reference/actions.rst:312
#: ../../reference/actions.rst:314
msgid "see :ref:`reference/actions/server/object_create`"
msgstr ""

#: ../../reference/actions.rst:319
msgid "``multi``"
msgstr ""

#: ../../reference/actions.rst:321
msgid ""
"Executes multiple actions one after the other. Actions to execute are "
"defined via the ``child_ids`` m2m. If sub-actions themselves return actions,"
" the last one will be returned to the client as the multi's own next action"
msgstr ""

#: ../../reference/actions.rst:326
msgid "``trigger``"
msgstr ""

#: ../../reference/actions.rst:328
msgid "Sends a signal to a workflow."
msgstr ""

#: ../../reference/actions.rst:330
msgid "``wkf_transition_id``"
msgstr ""

#: ../../reference/actions.rst:331
msgid ""
":class:`~openerp.fields.Many2one` to a ``workflow.transition`` to trigger"
msgstr ""

#: ../../reference/actions.rst:335
msgid "``use_relational_model``"
msgstr ""

#: ../../reference/actions.rst:333
msgid ""
"if ``base`` (the default), trigger the signal on behalf of the current "
"record. If ``relational``, trigger the signal on behalf of a field of the "
"current record selected through ``wkf_model_id`` and ``wkf_field_id``"
msgstr ""

#: ../../reference/actions.rst:338
msgid "``client_action``"
msgstr ""

#: ../../reference/actions.rst:340
msgid ""
"Indirection for directly returning an other action defined using "
"``action_id``. Simply returns that action to the client for execution."
msgstr ""

#: ../../reference/actions.rst:346
msgid "Evaluation context"
msgstr ""

#: ../../reference/actions.rst:348
msgid ""
"A number of keys are available in the evaluation context of or surrounding "
"server actions:"
msgstr ""

#: ../../reference/actions.rst:351
msgid "``self``"
msgstr ""

#: ../../reference/actions.rst:352
msgid "the model object linked to the action via ``model_id``"
msgstr ""

#: ../../reference/actions.rst:354
msgid "``object``, ``obj``"
msgstr ""

#: ../../reference/actions.rst:354
msgid ""
"only available if ``active_model`` and ``active_id`` are provided (via "
"context) otherwise ``None``. The actual record selected by ``active_id``"
msgstr ""

#: ../../reference/actions.rst:356
msgid "``pool``"
msgstr ""

#: ../../reference/actions.rst:357
msgid "the current database registry"
msgstr ""

#: ../../reference/actions.rst:358
msgid "``datetime``, ``dateutil``, ``time``"
msgstr ""

#: ../../reference/actions.rst:359
msgid "corresponding Python modules"
msgstr ""

#: ../../reference/actions.rst:360
msgid "``cr``"
msgstr ""

#: ../../reference/actions.rst:361
msgid "the current cursor"
msgstr ""

#: ../../reference/actions.rst:362 ../../reference/reports.rst:122
msgid "``user``"
msgstr ""

#: ../../reference/actions.rst:363
msgid "the current user record"
msgstr ""

#: ../../reference/actions.rst:364 ../../reference/data.rst:53
#: ../../reference/views.rst:236 ../../reference/views.rst:399
#: ../../reference/views.rst:1127 ../../reference/views.rst:1154
msgid "``context``"
msgstr ""

#: ../../reference/actions.rst:365
msgid "execution context"
msgstr ""

#: ../../reference/actions.rst:367
msgid "``Warning``"
msgstr ""

#: ../../reference/actions.rst:367
msgid "constructor for the ``Warning`` exception"
msgstr ""

#: ../../reference/actions.rst:375
msgid "Report Actions (``ir.actions.report.xml``)"
msgstr ""

#: ../../reference/actions.rst:377
msgid "Triggers the printing of a report"
msgstr ""

#: ../../reference/actions.rst:380 ../../reference/reports.rst:37
#: ../../reference/reports.rst:242 ../../reference/views.rst:19
#: ../../reference/views.rst:354
msgid "``name`` (mandatory)"
msgstr ""

#: ../../reference/actions.rst:380 ../../reference/reports.rst:37
#: ../../reference/reports.rst:242
msgid ""
"only useful as a mnemonic/description of the report when looking for one in "
"a list of some sort"
msgstr ""

#: ../../reference/actions.rst:382 ../../reference/reports.rst:39
msgid "``model`` (mandatory)"
msgstr ""

#: ../../reference/actions.rst:383 ../../reference/reports.rst:40
msgid "the model your report will be about"
msgstr ""

#: ../../reference/actions.rst:384 ../../reference/reports.rst:41
msgid "``report_type`` (mandatory)"
msgstr ""

#: ../../reference/actions.rst:385 ../../reference/reports.rst:42
msgid "either ``qweb-pdf`` for PDF reports or ``qweb-html`` for HTML"
msgstr ""

#: ../../reference/actions.rst:386 ../../reference/reports.rst:43
msgid "``report_name``"
msgstr ""

#: ../../reference/actions.rst:387 ../../reference/reports.rst:44
msgid "the name of your report (which will be the name of the PDF output)"
msgstr ""

#: ../../reference/actions.rst:389 ../../reference/views.rst:34
msgid "``groups_id``"
msgstr ""

#: ../../reference/actions.rst:389 ../../reference/reports.rst:46
msgid ""
":class:`~openerp.fields.Many2many` field to the groups allowed to view/use "
"the current report"
msgstr ""

#: ../../reference/actions.rst:392
msgid "``paperformat_id``"
msgstr ""

#: ../../reference/actions.rst:392
msgid ""
":class:`~openerp.fields.Many2one` field to the paper format you wish to use "
"for this report (if not specified, the company format will be used)"
msgstr ""

#: ../../reference/actions.rst:399 ../../reference/reports.rst:51
msgid "``attachment_use``"
msgstr ""

#: ../../reference/actions.rst:395
msgid ""
"if set to ``True``, the report is only generated once the first time it is "
"requested, and re-printed from the stored report afterwards instead of being"
" re-generated every time."
msgstr ""

#: ../../reference/actions.rst:399
msgid ""
"Can be used for reports which must only be generated once (e.g. for legal "
"reasons)"
msgstr ""

#: ../../reference/actions.rst:403 ../../reference/reports.rst:55
msgid "``attachment``"
msgstr ""

#: ../../reference/actions.rst:402
msgid ""
"python expression that defines the name of the report; the record is "
"accessible as the variable ``object``"
msgstr ""

#: ../../reference/actions.rst:408
msgid "Client Actions (``ir.actions.client``)"
msgstr ""

#: ../../reference/actions.rst:410
msgid "Triggers an action implemented entirely in the client."
msgstr ""

#: ../../reference/actions.rst:413
msgid "``tag``"
msgstr ""

#: ../../reference/actions.rst:413
msgid ""
"the client-side identifier of the action, an arbitrary string which the "
"client should know how to react to"
msgstr ""

#: ../../reference/actions.rst:417
msgid "``params`` (optional)"
msgstr ""

#: ../../reference/actions.rst:416
msgid ""
"a Python dictionary of additional data to send to the client, alongside the "
"client action tag"
msgstr ""

#: ../../reference/actions.rst:426
msgid ""
"tells the client to start the Point of Sale interface, the server has no "
"idea how the POS interface works."
msgstr ""

#: ../../reference/actions.rst:429
msgid ""
"technically not an M2M: adds a sequence field and may be composed of just a "
"view type, without a view id."
msgstr ""

#: ../../reference/async.rst:6
msgid "Asynchronous Operations"
msgstr ""

#: ../../reference/async.rst:8
msgid ""
"As a language (and runtime), javascript is fundamentally single-threaded. "
"This means any blocking request or computation will block the whole page "
"(and, in older browsers, the software itself even preventing users from "
"switching to another tab): a javascript environment can be seen as an event-"
"based runloop where application developers have no control over the runloop "
"itself."
msgstr ""

#: ../../reference/async.rst:15
msgid ""
"As a result, performing long-running synchronous network requests or other "
"types of complex and expensive accesses is frowned upon and asynchronous "
"APIs are used instead."
msgstr ""

#: ../../reference/async.rst:19
msgid ""
"The goal of this guide is to provide some tools to deal with asynchronous "
"systems, and warn against systemic issues or dangers."
msgstr ""

#: ../../reference/async.rst:23
msgid "Deferreds"
msgstr ""

#: ../../reference/async.rst:25
msgid ""
"Deferreds are a form of `promises`_. OpenERP Web currently uses `jQuery's "
"deferred`_."
msgstr ""

#: ../../reference/async.rst:28
msgid ""
"The core idea of deferreds is that potentially asynchronous methods will "
"return a :js:class:`Deferred` object instead of an arbitrary value or (most "
"commonly) nothing."
msgstr ""

#: ../../reference/async.rst:32
msgid ""
"This object can then be used to track the end of the asynchronous operation "
"by adding callbacks onto it, either success callbacks or error callbacks."
msgstr ""

#: ../../reference/async.rst:36
msgid ""
"A great advantage of deferreds over simply passing callback functions "
"directly to asynchronous methods is the ability to :ref:`compose them "
"<reference/async/composition>`."
msgstr ""

#: ../../reference/async.rst:41
msgid "Using deferreds"
msgstr ""

#: ../../reference/async.rst:43
msgid ""
"Deferreds's most important method is :js:func:`Deferred.then`. It is used to"
" attach new callbacks to the deferred object."
msgstr ""

#: ../../reference/async.rst:46
msgid ""
"the first parameter attaches a success callback, called when the deferred "
"object is successfully resolved and provided with the resolved value(s) for "
"the asynchronous operation."
msgstr ""

#: ../../reference/async.rst:50
msgid ""
"the second parameter attaches a failure callback, called when the deferred "
"object is rejected and provided with rejection values (often some sort of "
"error message)."
msgstr ""

#: ../../reference/async.rst:54
msgid ""
"Callbacks attached to deferreds are never \"lost\": if a callback is "
"attached to an already resolved or rejected deferred, the callback will be "
"called (or ignored) immediately. A deferred is also only ever resolved or "
"rejected once, and is either resolved or rejected: a given deferred can not "
"call a single success callback twice, or call both a success and a failure "
"callbacks."
msgstr ""

#: ../../reference/async.rst:61
msgid ""
":js:func:`~Deferred.then` should be the method you'll use most often when "
"interacting with deferred objects (and thus asynchronous APIs)."
msgstr ""

#: ../../reference/async.rst:65
msgid "Building deferreds"
msgstr ""

#: ../../reference/async.rst:67
msgid ""
"After using asynchronous APIs may come the time to build them: for mocks_, "
"to compose deferreds from multiple source in a complex manner, in order to "
"let the current operations repaint the screen or give other events the time "
"to unfold, ..."
msgstr ""

#: ../../reference/async.rst:72
msgid "This is easy using jQuery's deferred objects."
msgstr ""

#: ../../reference/async.rst:74
msgid ""
"this section is an implementation detail of jQuery Deferred objects, the "
"creation of promises is not part of any standard (even tentative) that I "
"know of. If you are using deferred objects which are not jQuery's, their API"
" may (and often will) be completely different."
msgstr ""

#: ../../reference/async.rst:80
msgid ""
"Deferreds are created by invoking their constructor [#]_ without any "
"argument. This creates a :js:class:`Deferred` instance object with the "
"following methods:"
msgstr ""

#: ../../reference/async.rst:84
msgid ":js:func:`Deferred.resolve`"
msgstr ""

#: ../../reference/async.rst:86
msgid ""
"As its name indicates, this method moves the deferred to the \"Resolved\" "
"state. It can be provided as many arguments as necessary, these arguments "
"will be provided to any pending success callback."
msgstr ""

#: ../../reference/async.rst:91
msgid ":js:func:`Deferred.reject`"
msgstr ""

#: ../../reference/async.rst:93
msgid ""
"Similar to :js:func:`~Deferred.resolve`, but moves the deferred to the "
"\"Rejected\" state and calls pending failure handlers."
msgstr ""

#: ../../reference/async.rst:96
msgid ":js:func:`Deferred.promise`"
msgstr ""

#: ../../reference/async.rst:98
msgid ""
"Creates a readonly view of the deferred object. It is generally a good idea "
"to return a promise view of the deferred to prevent callers from resolving "
"or rejecting the deferred in your stead."
msgstr ""

#: ../../reference/async.rst:102
msgid ""
":js:func:`~Deferred.reject` and :js:func:`~Deferred.resolve` are used to "
"inform callers that the asynchronous operation has failed (or succeeded). "
"These methods should simply be called when the asynchronous operation has "
"ended, to notify anybody interested in its result(s)."
msgstr ""

#: ../../reference/async.rst:111
msgid "Composing deferreds"
msgstr ""

#: ../../reference/async.rst:113
msgid ""
"What we've seen so far is pretty nice, but mostly doable by passing "
"functions to other functions (well adding functions post-facto would "
"probably be a chore... still, doable)."
msgstr ""

#: ../../reference/async.rst:117
msgid ""
"Deferreds truly shine when code needs to compose asynchronous operations in "
"some way or other, as they can be used as a basis for such composition."
msgstr ""

#: ../../reference/async.rst:121
msgid ""
"There are two main forms of compositions over deferred: multiplexing and "
"piping/cascading."
msgstr ""

#: ../../reference/async.rst:125
msgid "Deferred multiplexing"
msgstr ""

#: ../../reference/async.rst:127
msgid ""
"The most common reason for multiplexing deferred is simply performing "
"multiple asynchronous operations and wanting to wait until all of them are "
"done before moving on (and executing more stuff)."
msgstr ""

#: ../../reference/async.rst:131
msgid "The jQuery multiplexing function for promises is :js:func:`when`."
msgstr ""

#: ../../reference/async.rst:133
msgid ""
"the multiplexing behavior of jQuery's :js:func:`when` is an (incompatible, "
"mostly) extension of the behavior defined in `CommonJS Promises/B`_."
msgstr ""

#: ../../reference/async.rst:137
msgid ""
"This function can take any number of promises [#]_ and will return a "
"promise."
msgstr ""

#: ../../reference/async.rst:140
msgid ""
"The returned promise will be resolved when *all* multiplexed promises are "
"resolved, and will be rejected as soon as one of the multiplexed promises is"
" rejected (it behaves like Python's ``all()``, but with promise objects "
"instead of boolean-ish)."
msgstr ""

#: ../../reference/async.rst:145
msgid ""
"The resolved values of the various promises multiplexed via :js:func:`when` "
"are mapped to the arguments of :js:func:`when`'s success callback, if they "
"are needed. The resolved values of a promise are at the same index in the "
"callback's arguments as the promise in the :js:func:`when` call so you will "
"have:"
msgstr ""

#: ../../reference/async.rst:160
msgid ""
"in a normal mapping, each parameter to the callback would be an array: each "
"promise is conceptually resolved with an array of 0..n values and these "
"values are passed to :js:func:`when`'s callback. But jQuery treats deferreds"
" resolving a single value specially, and \"unwraps\" that value."
msgstr ""

#: ../../reference/async.rst:166
msgid ""
"For instance, in the code block above if the index of each promise is the "
"number of values it resolves (0 to 3), ``results0`` is an empty array, "
"``results2`` is an array of 2 elements (a pair) but ``results1`` is the "
"actual value resolved by ``p1``, not an array."
msgstr ""

#: ../../reference/async.rst:172
msgid "Deferred chaining"
msgstr ""

#: ../../reference/async.rst:174
msgid ""
"A second useful composition is starting an asynchronous operation as the "
"result of an other asynchronous operation, and wanting the result of both: "
"with the tools described so far, handling e.g. OpenERP's search/read "
"sequence with this would require something along the lines of:"
msgstr ""

#: ../../reference/async.rst:190
msgid ""
"While it doesn't look too bad for trivial code, this quickly gets unwieldy."
msgstr ""

#: ../../reference/async.rst:193
msgid ""
"But :js:func:`~Deferred.then` also allows handling this kind of chains: it "
"returns a new promise object, not the one it was called with, and the return"
" values of the callbacks is important to this behavior: whichever callback "
"is called,"
msgstr ""

#: ../../reference/async.rst:198
msgid ""
"If the callback is not set (not provided or left to null), the resolution or"
" rejection value(s) is simply forwarded to :js:func:`~Deferred.then`'s "
"promise (it's essentially a noop)"
msgstr ""

#: ../../reference/async.rst:202
msgid ""
"If the callback is set and does not return an observable object (a deferred "
"or a promise), the value it returns (``undefined`` if it does not return "
"anything) will replace the value it was given, e.g."
msgstr ""

#: ../../reference/async.rst:212
msgid "will resolve with the sole value ``undefined``."
msgstr ""

#: ../../reference/async.rst:214
msgid ""
"If the callback is set and returns an observable object, that object will be"
" the actual resolution (and result) of the pipe. This means a resolved "
"promise from the failure callback will resolve the pipe, and a failure "
"promise from the success callback will reject the pipe."
msgstr ""

#: ../../reference/async.rst:220
msgid ""
"This provides an easy way to chain operation successes, and the previous "
"piece of code can now be rewritten:"
msgstr ""

#: ../../reference/async.rst:229
msgid ""
"the result of the whole expression will encode failure if either ``search`` "
"or ``read`` fails (with the right rejection values), and will be resolved "
"with ``read``'s resolution values if the chain executes correctly."
msgstr ""

#: ../../reference/async.rst:234
msgid ""
":js:func:`~Deferred.then` is also useful to adapt third-party promise-based "
"APIs, in order to filter their resolution value counts for instance (to take"
" advantage of :js:func:`when` 's special treatment of single-value "
"promises)."
msgstr ""

#: ../../reference/async.rst:240
msgid "jQuery.Deferred API"
msgstr ""

#: ../../reference/async.rst:244
msgid "deferred objects to multiplex"
msgstr ""

#: ../../reference/async.rst:245
msgid "a multiplexed deferred"
msgstr ""

#: ../../reference/async.rst:246 ../../reference/async.rst:268
#: ../../reference/async.rst:285 ../../reference/async.rst:300
msgid ":js:class:`Deferred`"
msgstr ""

#: ../../reference/async.rst:252
msgid ""
"Attaches new callbacks to the resolution or rejection of the deferred "
"object. Callbacks are executed in the order they are attached to the "
"deferred."
msgstr ""

#: ../../reference/async.rst:256
msgid ""
"To provide only a failure callback, pass ``null`` as the ``doneCallback``, "
"to provide only a success callback the second argument can just be ignored "
"(and not passed at all)."
msgstr ""

#: ../../reference/async.rst:260
msgid ""
"Returns a new deferred which resolves to the result of the corresponding "
"callback, if a callback returns a deferred itself that new deferred will be "
"used as the resolution of the chain."
msgstr ""

#: ../../reference/async.rst:265 ../../reference/async.rst:282
msgid "function called when the deferred is resolved"
msgstr ""

#: ../../reference/async.rst:266 ../../reference/async.rst:297
msgid "function called when the deferred is rejected"
msgstr ""

#: ../../reference/async.rst:267 ../../reference/async.rst:284
#: ../../reference/async.rst:299
msgid "the deferred object on which it was called"
msgstr ""

#: ../../reference/async.rst:272
msgid ""
"Attaches a new success callback to the deferred, shortcut for "
"``deferred.then(doneCallback)``."
msgstr ""

#: ../../reference/async.rst:275
msgid ""
"a difference is the result of :js:func:`Deferred.done`'s is ignored rather "
"than forwarded through the chain"
msgstr ""

#: ../../reference/async.rst:278
msgid ""
"This is a jQuery extension to `CommonJS Promises/A`_ providing little value "
"over calling :js:func:`~Deferred.then` directly, it should be avoided."
msgstr ""

#: ../../reference/async.rst:289
msgid ""
"Attaches a new failure callback to the deferred, shortcut for "
"``deferred.then(null, failCallback)``."
msgstr ""

#: ../../reference/async.rst:292
msgid ""
"A second jQuery extension to `Promises/A <CommonJS Promises/A>`_. Although "
"it provides more value than :js:func:`~Deferred.done`, it still is not much "
"and should be avoided as well."
msgstr ""

#: ../../reference/async.rst:304
msgid ""
"Returns a read-only view of the deferred object, with all mutators (resolve "
"and reject) methods removed."
msgstr ""

#: ../../reference/async.rst:309
msgid ""
"Called to resolve a deferred, any value provided will be passed onto the "
"success handlers of the deferred object."
msgstr ""

#: ../../reference/async.rst:312
msgid ""
"Resolving a deferred which has already been resolved or rejected has no "
"effect."
msgstr ""

#: ../../reference/async.rst:317
msgid ""
"Called to reject (fail) a deferred, any value provided will be passed onto "
"the failure handler of the deferred object."
msgstr ""

#: ../../reference/async.rst:320
msgid ""
"Rejecting a deferred which has already been resolved or rejected has no "
"effect."
msgstr ""

#: ../../reference/async.rst:323
msgid ""
"or simply calling :js:class:`Deferred` as a function, the result is the same"
msgstr ""

#: ../../reference/async.rst:326
msgid ""
"or not-promises, the `CommonJS Promises/B`_ role of :js:func:`when` is to be"
" able to treat values and promises uniformly: :js:func:`when` will pass "
"promises through directly, but non-promise values and objects will be "
"transformed into a resolved promise (resolving themselves with the value "
"itself)."
msgstr ""

#: ../../reference/async.rst:332
msgid ""
"jQuery's :js:func:`when` keeps this behavior making deferreds easy to build "
"from \"static\" values, or allowing defensive code where expected promises "
"are wrapped in :js:func:`when` just in case."
msgstr ""

#: ../../reference/cmdline.rst:7
msgid "Command-line interface: odoo.py"
msgstr ""

#: ../../reference/cmdline.rst:12
msgid "Running the server"
msgstr ""

#: ../../reference/cmdline.rst:18
msgid "database used when installing or updating modules."
msgstr ""

#: ../../reference/cmdline.rst:22
msgid ""
"comma-separated list of modules to install before running the server "
"(requires :option:`-d`)."
msgstr ""

#: ../../reference/cmdline.rst:27
msgid ""
"comma-separated list of modules to update before running the server "
"(requires :option:`-d`)."
msgstr ""

#: ../../reference/cmdline.rst:32
msgid ""
"comma-separated list of directories in which modules are stored. These "
"directories are scanned for modules (nb: when and why?)"
msgstr ""

#: ../../reference/cmdline.rst:37
msgid ""
"if ``count`` is not 0 (the default), enables multiprocessing and sets up the"
" specified number of HTTP workers (sub-processes processing HTTP and RPC "
"requests)."
msgstr ""

#: ../../reference/cmdline.rst:41
msgid "multiprocessing mode is only available on Unix-based systems"
msgstr ""

#: ../../reference/cmdline.rst:43
msgid "A number of options allow limiting and recyling workers:"
msgstr ""

#: ../../reference/cmdline.rst:47
msgid ""
"Number of requests a worker will process before being recycled and "
"restarted."
msgstr ""

#: ../../reference/cmdline.rst:50
msgid "Defaults to 8196."
msgstr ""

#: ../../reference/cmdline.rst:54
msgid ""
"Maximum allowed virtual memory per worker. If the limit is exceeded, the "
"worker is killed and recycled at the end of the current request."
msgstr ""

#: ../../reference/cmdline.rst:57
msgid "Defaults to 640MB."
msgstr ""

#: ../../reference/cmdline.rst:61
msgid ""
"Hard limit on virtual memory, any worker exceeding the limit will be "
"immediately killed without waiting for the end of the current request "
"processing."
msgstr ""

#: ../../reference/cmdline.rst:65
msgid "Defaults to 768MB."
msgstr ""

#: ../../reference/cmdline.rst:69
msgid ""
"Prevents the worker from using more than <limit> CPU seconds for each "
"request. If the limit is exceeded, the worker is killed."
msgstr ""

#: ../../reference/cmdline.rst:72
msgid "Defaults to 60."
msgstr ""

#: ../../reference/cmdline.rst:76
msgid ""
"Prevents the worker from taking longer than <limit> seconds to process a "
"request. If the limit is exceeded, the worker is killed."
msgstr ""

#: ../../reference/cmdline.rst:79
msgid ""
"Differs from :option:`--limit-time-cpu` in that this is a \"wall time\" "
"limit including e.g. SQL queries."
msgstr ""

#: ../../reference/cmdline.rst:82
msgid "Defaults to 120."
msgstr ""

#: ../../reference/cmdline.rst:86
msgid ""
"number of workers dedicated to cron jobs. Defaults to 2. The workers are "
"threads in multithreading mode and processes in multiprocessing mode."
msgstr ""

#: ../../reference/cmdline.rst:89
msgid ""
"For multiprocessing mode, this is in addition to the HTTP worker processes."
msgstr ""

#: ../../reference/cmdline.rst:94
msgid "provide an alternate configuration file"
msgstr ""

#: ../../reference/cmdline.rst:98
msgid ""
"saves the server configuration to the current configuration file "
"(:file:`{$HOME}/.openerp_serverrc` by default, overridable using "
":option:`-c`)"
msgstr ""

#: ../../reference/cmdline.rst:104
msgid ""
"enables the use of ``X-Forwarded-*`` headers through `Werkzeug's proxy "
"support`_."
msgstr ""

#: ../../reference/cmdline.rst:107
msgid "proxy mode *must not* be enabled outside of a reverse proxy scenario"
msgstr ""

#: ../../reference/cmdline.rst:112
msgid "runs tests after installing modules"
msgstr ""

#: ../../reference/cmdline.rst:116
msgid ""
"when an unexpected error is raised (not a warning or an access error), "
"automatically starts :mod:`python:pdb` before logging and returning the "
"error"
msgstr ""

#: ../../reference/cmdline.rst:123
msgid "database"
msgstr ""

#: ../../reference/cmdline.rst:127
msgid "database username, used to connect to PostgreSQL."
msgstr ""

#: ../../reference/cmdline.rst:131
msgid "database password, if using `password authentication`_."
msgstr ""

#: ../../reference/cmdline.rst:135
msgid "host for the database server"
msgstr ""

#: ../../reference/cmdline.rst:137
msgid "``localhost`` on Windows"
msgstr ""

#: ../../reference/cmdline.rst:138
msgid "UNIX socket otherwise"
msgstr ""

#: ../../reference/cmdline.rst:142
msgid "port the database listens on, defaults to 5432"
msgstr ""

#: ../../reference/cmdline.rst:146
msgid ""
"hides databases that do not match ``<filter>``. The filter is a `regular "
"expression`_, with the additions that:"
msgstr ""

#: ../../reference/cmdline.rst:149
msgid "``%h`` is replaced by the whole hostname the request is made on."
msgstr ""

#: ../../reference/cmdline.rst:150
msgid ""
"``%d`` is replaced by the subdomain the request is made on, with the "
"exception of ``www`` (so domain ``odoo.com`` and ``www.odoo.com`` both match"
" the database ``odoo``)"
msgstr ""

#: ../../reference/cmdline.rst:156
msgid ""
"when creating new databases from the database-management screens, use the "
"specified `template database`_. Defaults to ``template1``."
msgstr ""

#: ../../reference/cmdline.rst:160
msgid "built-in HTTP"
msgstr ""

#: ../../reference/cmdline.rst:164
msgid ""
"do not start the HTTP or long-polling workers (may still start cron workers)"
msgstr ""

#: ../../reference/cmdline.rst:167
msgid ""
"has no effect if :option:`--test-enable` is set, as tests require an "
"accessible HTTP server"
msgstr ""

#: ../../reference/cmdline.rst:172
msgid ""
"TCP/IP address on which the HTTP server listens, defaults to ``0.0.0.0`` "
"(all addresses)"
msgstr ""

#: ../../reference/cmdline.rst:177
msgid "Port on which the HTTP server listens, defaults to 8069."
msgstr ""

#: ../../reference/cmdline.rst:181
msgid ""
"TCP port for long-polling connections in multiprocessing or gevent mode, "
"defaults to 8072. Not used in default (threaded) mode."
msgstr ""

#: ../../reference/cmdline.rst:185
msgid "logging"
msgstr ""

#: ../../reference/cmdline.rst:187
msgid ""
"By default, Odoo displays all logging of level_ ``info`` except for workflow"
" logging (``warning`` only), and log output is sent to ``stdout``. Various "
"options are available to redirect logging to other destinations and to "
"customize the amout of logging output"
msgstr ""

#: ../../reference/cmdline.rst:194
msgid ""
"sends logging output to the specified file instead of stdout. On Unix, the "
"file `can be managed by external log rotation programs "
"<https://docs.python.org/2/library/logging.handlers.html#watchedfilehandler>`_"
" and will automatically be reopened when replaced"
msgstr ""

#: ../../reference/cmdline.rst:201
msgid ""
"enables `log rotation "
"<https://docs.python.org/2/library/logging.handlers.html#timedrotatingfilehandler>`_"
" daily, keeping 30 backups. Log rotation frequency and number of backups is "
"not configurable."
msgstr ""

#: ../../reference/cmdline.rst:207
msgid ""
"logs to the system's event logger: `syslog on unices "
"<https://docs.python.org/2/library/logging.handlers.html#sysloghandler>`_ "
"and `the Event Log on Windows "
"<https://docs.python.org/2/library/logging.handlers.html#nteventloghandler>`_."
msgstr ""

#: ../../reference/cmdline.rst:210
msgid "Neither is configurable"
msgstr ""

#: ../../reference/cmdline.rst:214
msgid ""
"logs to the ``ir.logging`` model (``ir_logging`` table) of the specified "
"database. The database can be the name of a database in the \"current\" "
"PostgreSQL, or `a PostgreSQL URI`_ for e.g. log aggregation"
msgstr ""

#: ../../reference/cmdline.rst:220
msgid ""
":samp:`{LOGGER}:{LEVEL}`, enables ``LOGGER`` at the provided ``LEVEL`` e.g. "
"``openerp.models:DEBUG`` will enable all logging messages at or above "
"``DEBUG`` level in the models."
msgstr ""

#: ../../reference/cmdline.rst:224
msgid "The colon ``:`` is mandatory"
msgstr ""

#: ../../reference/cmdline.rst:225
msgid "The logger can be omitted to configure the root (default) handler"
msgstr ""

#: ../../reference/cmdline.rst:226
msgid "If the level is omitted, the logger is set to ``INFO``"
msgstr ""

#: ../../reference/cmdline.rst:228
msgid "The option can be repeated to configure multiple loggers e.g."
msgstr ""

#: ../../reference/cmdline.rst:236
msgid ""
"enable DEBUG logging for RPC requests, equivalent to ``--log-"
"handler=openerp.http.rpc.request:DEBUG``"
msgstr ""

#: ../../reference/cmdline.rst:241
msgid ""
"enable DEBUG logging for RPC responses, equivalent to ``--log-"
"handler=openerp.http.rpc.response:DEBUG``"
msgstr ""

#: ../../reference/cmdline.rst:246
msgid ""
"enables DEBUG logging of HTTP requests and responses, equivalent to ``--log-"
"handler=openerp.http:DEBUG``"
msgstr ""

#: ../../reference/cmdline.rst:251
msgid ""
"enables DEBUG logging of SQL querying, equivalent to ``--log-"
"handler=openerp.sql_db:DEBUG``"
msgstr ""

#: ../../reference/cmdline.rst:256
msgid ""
"Shortcut to more easily set predefined levels on specific loggers. \"real\" "
"levels (``critical``, ``error``, ``warn``, ``debug``) are set on the "
"``openerp`` and ``werkzeug`` loggers (except for ``debug`` which is only set"
" on ``openerp``)."
msgstr ""

#: ../../reference/cmdline.rst:261
msgid ""
"Odoo also provides debugging pseudo-levels which apply to different sets of "
"loggers:"
msgstr ""

#: ../../reference/cmdline.rst:266
msgid "``debug_sql``"
msgstr ""

#: ../../reference/cmdline.rst:265
msgid "sets the SQL logger to ``debug``"
msgstr ""

#: ../../reference/cmdline.rst:267
msgid "equivalent to ``--log-sql``"
msgstr ""

#: ../../reference/cmdline.rst:270
msgid "``debug_rpc``"
msgstr ""

#: ../../reference/cmdline.rst:269
msgid "sets the ``openerp`` and HTTP request loggers to ``debug``"
msgstr ""

#: ../../reference/cmdline.rst:271
msgid "equivalent to ``--log-level debug --log-request``"
msgstr ""

#: ../../reference/cmdline.rst:276
msgid "``debug_rpc_answer``"
msgstr ""

#: ../../reference/cmdline.rst:273
msgid ""
"sets the ``openerp`` and HTTP request and response loggers to ``debug``"
msgstr ""

#: ../../reference/cmdline.rst:276
msgid "equivalent to ``--log-level debug --log-request --log-response``"
msgstr ""

#: ../../reference/cmdline.rst:280
msgid ""
"In case of conflict between :option:`--log-level` and :option:`--log-"
"handler`, the latter is used"
msgstr ""

#: ../../reference/cmdline.rst:284
msgid "Advanced options"
msgstr ""

#: ../../reference/cmdline.rst:288
msgid ""
"enable auto-reloading of python files and xml files without having to "
"restart the server. Requires pyinotify_."
msgstr ""

#: ../../reference/cmdline.rst:294
msgid "Scaffolding"
msgstr ""

#: ../../reference/cmdline.rst:298
msgid ""
"Scaffolding is the automated creation of a skeleton structure to simplify "
"bootstrapping (of new modules, in the case of Odoo). While not necessary it "
"avoids the tedium of setting up basic structures and looking up what all "
"starting requirements are."
msgstr ""

#: ../../reference/cmdline.rst:303
msgid ""
"Scaffolding is available via the :command:`odoo.py scaffold` subcommand."
msgstr ""

#: ../../reference/cmdline.rst:307
msgid ""
"a template directory, files are passed through jinja2_ then copied to the "
"``destination`` directory"
msgstr ""

#: ../../reference/cmdline.rst:312
msgid ""
"the name of the module to create, may munged in various manners to generate "
"programmatic names (e.g. module directory name, model names, …)"
msgstr ""

#: ../../reference/cmdline.rst:317
msgid ""
"directory in which to create the new module, defaults to the current "
"directory"
msgstr ""

#: ../../reference/cmdline.rst:323
msgid "Configuration file"
msgstr ""

#: ../../reference/cmdline.rst:325
msgid ""
"Most of the command-line options can also be specified via a configuration "
"file. Most of the time, they use similar names with the prefix ``-`` removed"
" and other ``-`` are replaced by ``_`` e.g. :option:`--db-template` becomes "
"``db_template``."
msgstr ""

#: ../../reference/cmdline.rst:330
msgid "Some conversions don't match the pattern:"
msgstr ""

#: ../../reference/cmdline.rst:332
msgid ":option:`--db-filter` becomes ``dbfilter``"
msgstr ""

#: ../../reference/cmdline.rst:333
msgid ":option:`--no-xmlrpc` corresponds to the ``xmlrpc`` boolean"
msgstr ""

#: ../../reference/cmdline.rst:334
msgid ""
"logging presets (all options starting with ``--log-`` except for :option"
":`--log-handler` and :option:`--log-db`) just add content to "
"``log_handler``, use that directly in the configuration file"
msgstr ""

#: ../../reference/cmdline.rst:337
msgid ":option:`--smtp` is stored as ``smtp_server``"
msgstr ""

#: ../../reference/cmdline.rst:338
msgid ":option:`--database` is stored as ``dbname``"
msgstr ""

#: ../../reference/cmdline.rst:339
msgid ":option:`--debug` is stored as ``debug_mode`` (a boolean)"
msgstr ""

#: ../../reference/cmdline.rst:340
msgid ""
":option:`--i18n-import` and :option:`--i18n-export` aren't available at all "
"from configuration files"
msgstr ""

#: ../../reference/cmdline.rst:343
msgid ""
"The default configuration file is :file:`{$HOME}/.openerp_serverrc` which "
"can be overridden using :option:`--config <odoo.py -c>`. Specifying "
":option:`--save <odoo.py -s>` will save the current configuration state back"
" to that file."
msgstr ""

#: ../../reference/data.rst:7
msgid "Data Files"
msgstr ""

#: ../../reference/data.rst:9
msgid ""
"Odoo is greatly data-driven, and a big part of modules definition is thus "
"the definition of the various records it manages: UI (menus and views), "
"security (access rights and access rules), reports and plain data are all "
"defined via records."
msgstr ""

#: ../../reference/data.rst:15
msgid "Structure"
msgstr ""

#: ../../reference/data.rst:17
msgid ""
"The main way to define data in Odoo is via XML data files: The broad "
"structure of an XML data file is the following:"
msgstr ""

#: ../../reference/data.rst:20
msgid "Any number of operation elements within the root element ``odoo``"
msgstr ""

#: ../../reference/data.rst:30
msgid ""
"Data files are executed sequentially, operations can only refer to the "
"result of operations defined previously"
msgstr ""

#: ../../reference/data.rst:34
msgid "Core operations"
msgstr ""

#: ../../reference/data.rst:39 ../../reference/views.rst:863
msgid "``record``"
msgstr ""

#: ../../reference/data.rst:41
msgid ""
"``record`` appropriately defines or updates a database record, it has the "
"following attributes:"
msgstr ""

#: ../../reference/data.rst:44 ../../reference/data.rst:134
msgid "``model`` (required)"
msgstr ""

#: ../../reference/data.rst:45
msgid "name of the model to create (or update)"
msgstr ""

#: ../../reference/data.rst:47
msgid ""
"the :term:`external identifier` for this record. It is strongly recommended "
"to provide one"
msgstr ""

#: ../../reference/data.rst:50
msgid ""
"for record creation, allows subsequent definitions to either modify or refer"
" to this record"
msgstr ""

#: ../../reference/data.rst:52
msgid "for record modification, the record to modify"
msgstr ""

#: ../../reference/data.rst:54
msgid "context to use when creating the record"
msgstr ""

#: ../../reference/data.rst:58
msgid "``forcecreate``"
msgstr ""

#: ../../reference/data.rst:56
msgid ""
"in update mode whether the record should be created if it doesn't exist"
msgstr ""

#: ../../reference/data.rst:58
msgid "Requires an :term:`external id`, defaults to ``True``."
msgstr ""

#: ../../reference/data.rst:61 ../../reference/views.rst:284
#: ../../reference/views.rst:425 ../../reference/views.rst:841
#: ../../reference/views.rst:1138
msgid "``field``"
msgstr ""

#: ../../reference/data.rst:63
msgid ""
"Each record can be composed of ``field`` tags, defining values to set when "
"creating the record. A ``record`` with no ``field`` will use all default "
"values (creation) or do nothing (update)."
msgstr ""

#: ../../reference/data.rst:67
msgid ""
"A ``field`` has a mandatory ``name`` attribute, the name of the field to "
"set, and various methods to define the value itself:"
msgstr ""

#: ../../reference/data.rst:72
msgid "Nothing"
msgstr ""

#: ../../reference/data.rst:71
msgid ""
"if no value is provided for the field, an implicit ``False`` will be set on "
"the field. Can be used to clear a field, or avoid using a default value for "
"the field."
msgstr ""

#: ../../reference/data.rst:79 ../../reference/data.rst:140
msgid "``search``"
msgstr ""

#: ../../reference/data.rst:75
msgid ""
"for :ref:`relational fields <reference/orm/fields/relational>`, should be a "
":ref:`domain <reference/orm/domains>` on the field's model."
msgstr ""

#: ../../reference/data.rst:78
msgid ""
"Will evaluate the domain, search the field's model using it and set the "
"search's result as the field's value. Will only use the first result if the "
"field is a :class:`~openerp.fields.Many2one`"
msgstr ""

#: ../../reference/data.rst:85
msgid "``ref``"
msgstr ""

#: ../../reference/data.rst:82
msgid ""
"if a ``ref`` attribute is provided, its value must be a valid "
":term:`external id`, which will be looked up and set as the field's value."
msgstr ""

#: ../../reference/data.rst:85
msgid ""
"Mostly for :class:`~openerp.fields.Many2one` and "
":class:`~openerp.fields.Reference` fields"
msgstr ""

#: ../../reference/data.rst:88
msgid ""
"if a ``type`` attribute is provided, it is used to interpret and convert the"
" field's content. The field's content can be provided through an external "
"file using the ``file`` attribute, or through the node's body."
msgstr ""

#: ../../reference/data.rst:92
msgid "Available types are:"
msgstr ""

#: ../../reference/data.rst:96
msgid "``xml``, ``html``"
msgstr ""

#: ../../reference/data.rst:95
msgid ""
"extracts the ``field``'s children as a single document, evaluates any "
":term:`external id` specified with the form ``%(external_id)s``. ``%%`` can "
"be used to output actual *%* signs."
msgstr ""

#: ../../reference/data.rst:99
msgid "``file``"
msgstr ""

#: ../../reference/data.rst:99
msgid ""
"ensures that the field content is a valid file path in the current model, "
"saves the pair :samp:`{module},{path}` as the field value"
msgstr ""

#: ../../reference/data.rst:102
msgid "``char``"
msgstr ""

#: ../../reference/data.rst:102
msgid ""
"sets the field content directly as the field's value without alterations"
msgstr ""

#: ../../reference/data.rst:105
msgid "``base64``"
msgstr ""

#: ../../reference/data.rst:105
msgid ""
"base64_-encodes the field's content, useful combined with the ``file`` "
"*attribute* to load e.g. image data into attachments"
msgstr ""

#: ../../reference/data.rst:108
msgid "``int``"
msgstr ""

#: ../../reference/data.rst:108
msgid ""
"converts the field's content to an integer and sets it as the field's value"
msgstr ""

#: ../../reference/data.rst:111
msgid "``float``"
msgstr ""

#: ../../reference/data.rst:111
msgid ""
"converts the field's content to a float and sets it as the field's value"
msgstr ""

#: ../../reference/data.rst:116
msgid "``list``, ``tuple``"
msgstr ""

#: ../../reference/data.rst:114
msgid ""
"should contain any number of ``value`` elements with the same properties as "
"``field``, each element resolves to an item of a generated tuple or list, "
"and the generated collection is set as the field's value"
msgstr ""

#: ../../reference/data.rst:126
msgid "``eval``"
msgstr ""

#: ../../reference/data.rst:119
msgid ""
"for cases where the previous methods are unsuitable, the ``eval`` attributes"
" simply evaluates whatever Python expression it is provided and sets the "
"result as the field's value."
msgstr ""

#: ../../reference/data.rst:123
msgid ""
"The evaluation context contains various modules (``time``, ``datetime``, "
"``timedelta``, ``relativedelta``), a function to resolve :term:`external "
"identifiers` (``ref``) and the model object for the current field if "
"applicable (``obj``)"
msgstr ""

#: ../../reference/data.rst:129 ../../reference/views.rst:891
msgid "``delete``"
msgstr ""

#: ../../reference/data.rst:131
msgid ""
"The ``delete`` tag can remove any number of records previously defined. It "
"has the following attributes:"
msgstr ""

#: ../../reference/data.rst:135
msgid "the model in which a specified record should be deleted"
msgstr ""

#: ../../reference/data.rst:137
msgid "the :term:`external id` of a record to remove"
msgstr ""

#: ../../reference/data.rst:139
msgid ""
"a :ref:`domain <reference/orm/domains>` to find records of the model to "
"remove"
msgstr ""

#: ../../reference/data.rst:142
msgid "``id`` and ``search`` are exclusive"
msgstr ""

#: ../../reference/data.rst:145
msgid "``function``"
msgstr ""

#: ../../reference/data.rst:147
msgid ""
"The ``function`` tag calls a method on a model, with provided parameters. It"
" has two mandatory parameters ``model`` and ``name`` specifying respectively"
" the model and the name of the method to call."
msgstr ""

#: ../../reference/data.rst:151
msgid ""
"Parameters can be provided using ``eval`` (should evaluate to a sequence of "
"parameters to call the method with) or ``value`` elements (see ``list`` "
"values)."
msgstr ""

#: ../../reference/data.rst:156
msgid "``workflow``"
msgstr ""

#: ../../reference/data.rst:158
msgid ""
"The ``workflow`` tag sends a signal to an existing workflow. The workflow "
"can be specified via a ``ref`` attribute (the :term:`external id` of an "
"existing workflow) or a ``value`` tag returning the id of a workflow."
msgstr ""

#: ../../reference/data.rst:162
msgid ""
"The tag also has two mandatory attributes ``model`` (the model linked to the"
" workflow) and ``action`` (the name of the signal to send to the workflow)."
msgstr ""

#: ../../reference/data.rst:168
msgid "Shortcuts"
msgstr ""

#: ../../reference/data.rst:170
msgid ""
"Because some important structural models of Odoo are complex and involved, "
"data files provide shorter alternatives to defining them using :ref:`record "
"tags <reference/data/record>`:"
msgstr ""

#: ../../reference/data.rst:175
msgid "``menuitem``"
msgstr ""

#: ../../reference/data.rst:177
msgid ""
"Defines an ``ir.ui.menu`` record with a number of defaults and fallbacks:"
msgstr ""

#: ../../reference/data.rst:186
msgid "Parent menu"
msgstr ""

#: ../../reference/data.rst:180
msgid ""
"If a ``parent`` attribute is set, it should be the :term:`external id` of an"
" other menu item, used as the new item's parent"
msgstr ""

#: ../../reference/data.rst:182
msgid ""
"If no ``parent`` is provided, tries to interpret the ``name`` attribute as a"
" ``/``-separated sequence of menu names and find a place in the menu "
"hierarchy. In that interpretation, intermediate menus are automatically "
"created"
msgstr ""

#: ../../reference/data.rst:186
msgid ""
"Otherwise the menu is defined as a \"top-level\" menu item (*not* a menu "
"with no parent)"
msgstr ""

#: ../../reference/data.rst:189
msgid "Menu name"
msgstr ""

#: ../../reference/data.rst:189
msgid ""
"If no ``name`` attribute is specified, tries to get the menu name from a "
"linked action if any. Otherwise uses the record's ``id``"
msgstr ""

#: ../../reference/data.rst:194
msgid "Groups"
msgstr ""

#: ../../reference/data.rst:192
msgid ""
"A ``groups`` attribute is interpreted as a comma-separated sequence of "
":term:`external identifiers` for ``res.groups`` models. If an "
":term:`external identifier` is prefixed with a minus (``-``), the group is "
"*removed* from the menu's groups"
msgstr ""

#: ../../reference/data.rst:197 ../../reference/views.rst:214
msgid "``action``"
msgstr ""

#: ../../reference/data.rst:197
msgid ""
"if specified, the ``action`` attribute should be the :term:`external id` of "
"an action to execute when the menu is open"
msgstr ""

#: ../../reference/data.rst:200
msgid "the menu item's :term:`external id`"
msgstr ""

#: ../../reference/data.rst:205
msgid "``template``"
msgstr ""

#: ../../reference/data.rst:207
msgid ""
"Creates a :ref:`QWeb view <reference/views/qweb>` requiring only the "
"``arch`` section of the view, and allowing a few *optional* attributes:"
msgstr ""

#: ../../reference/data.rst:211
msgid "the view's :term:`external identifier`"
msgstr ""

#: ../../reference/data.rst:213
msgid "``name``, ``inherit_id``, ``priority``"
msgstr ""

#: ../../reference/data.rst:213
msgid ""
"same as the corresponding field on ``ir.ui.view`` (nb: ``inherit_id`` should"
" be an :term:`external identifier`)"
msgstr ""

#: ../../reference/data.rst:216
msgid "``primary``"
msgstr ""

#: ../../reference/data.rst:216
msgid ""
"if set to ``True`` and combined with a ``inherit_id``, defines the view as a"
" primary"
msgstr ""

#: ../../reference/data.rst:218 ../../reference/reports.rst:46
#: ../../reference/views.rst:258 ../../reference/views.rst:384
#: ../../reference/views.rst:1129 ../../reference/views.rst:1164
msgid "``groups``"
msgstr ""

#: ../../reference/data.rst:219
msgid "comma-separated list of group :term:`external identifiers`"
msgstr ""

#: ../../reference/data.rst:221
msgid "``page``"
msgstr ""

#: ../../reference/data.rst:221
msgid ""
"if set to ``\"True\"``, the template is a website page (linkable to, "
"deletable)"
msgstr ""

#: ../../reference/data.rst:226
msgid "``optional``"
msgstr ""

#: ../../reference/data.rst:224
msgid ""
"``enabled`` or ``disabled``, whether the view can be disabled (in the "
"website interface) and its default status. If unset, the view is always "
"enabled."
msgstr ""

#: ../../reference/data.rst:229
msgid "``report``"
msgstr ""

#: ../../reference/data.rst:231
msgid "Creates a ``ir.actions.report.xml`` record with a few default values."
msgstr ""

#: ../../reference/data.rst:233
msgid ""
"Mostly just proxies attributes to the corresponding fields on "
"``ir.actions.report.xml``, but also automatically creates the item in the "
":guilabel:`More` menu of the report's ``model``."
msgstr ""

#: ../../reference/data.rst:240
msgid "CSV data files"
msgstr ""

#: ../../reference/data.rst:242
msgid ""
"XML data files are flexible and self-descriptive, but very verbose when "
"creating a number of simple records of the same model in bulk."
msgstr ""

#: ../../reference/data.rst:245
msgid ""
"For this case, data files can also use csv_, this is often the case for "
":ref:`access rights <reference/security/acl>`:"
msgstr ""

#: ../../reference/data.rst:248
msgid "the file name is :file:`{model_name}.csv`"
msgstr ""

#: ../../reference/data.rst:249
msgid ""
"the first row lists the fields to write, with the special field ``id`` for "
":term:`external identifiers` (used for creation or update)"
msgstr ""

#: ../../reference/data.rst:251
msgid "each row thereafter creates a new record"
msgstr ""

#: ../../reference/data.rst:253
msgid ""
"Here's the first lines of the data file defining US states "
"``res.country.state.csv``"
msgstr ""

#: ../../reference/data.rst:260
msgid "rendered in a more readable format:"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "id"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "country_id:id"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "name"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "code"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_au_1"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "au"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Australian Capital Territory"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "ACT"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_au_2"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "New South Wales"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "NSW"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_au_3"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Northern Territory"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "NT"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_au_4"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Queensland"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "QLD"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_au_5"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "South Australia"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "SA"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_au_6"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Tasmania"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "TAS"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_au_7"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Victoria"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "VIC"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_au_8"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Western Australia"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "WA"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_1"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "us"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Alabama"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "AL"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_2"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Alaska"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "AK"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_3"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Arizona"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "AZ"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_4"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Arkansas"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "AR"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_5"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "California"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "CA"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_6"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Colorado"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "CO"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_7"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Connecticut"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "CT"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_8"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Delaware"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "DE"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_9"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "District of Columbia"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "DC"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_10"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Florida"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "FL"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_11"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Georgia"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "GA"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_12"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Hawaii"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "HI"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_13"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Idaho"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "ID"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_14"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Illinois"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "IL"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_15"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Indiana"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "IN"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_16"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Iowa"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "IA"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_17"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Kansas"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "KS"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_18"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Kentucky"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "KY"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_19"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Louisiana"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "LA"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_20"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Maine"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "ME"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_21"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Montana"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "MT"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_22"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Nebraska"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "NE"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_23"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Nevada"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "NV"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_24"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "New Hampshire"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "NH"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_25"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "New Jersey"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "NJ"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_26"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "New Mexico"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "NM"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_27"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "New York"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "NY"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_28"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "North Carolina"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "NC"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_29"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "North Dakota"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "ND"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_30"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Ohio"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "OH"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_31"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Oklahoma"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "OK"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_32"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Oregon"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "OR"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_33"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Maryland"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "MD"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_34"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Massachusetts"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "MA"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_35"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Michigan"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "MI"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_36"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Minnesota"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "MN"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_37"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Mississippi"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "MS"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_38"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Missouri"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "MO"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_39"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Pennsylvania"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "PA"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_40"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Rhode Island"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "RI"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_41"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "South Carolina"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "SC"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_42"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "South Dakota"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "SD"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_43"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Tennessee"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "TN"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_44"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Texas"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "TX"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_45"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Utah"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "UT"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_46"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Vermont"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "VT"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_47"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Virginia"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "VA"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_48"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Washington"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_49"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "West Virginia"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "WV"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_50"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Wisconsin"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "WI"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "state_us_51"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "Wyoming"
msgstr ""

#: ../../../openerp/addons/base/res/res.country.state.csv:1
msgid "WY"
msgstr ""

#: ../../reference/data.rst:267
msgid "For each row (record):"
msgstr ""

#: ../../reference/data.rst:269
msgid ""
"the first column is the :term:`external id` of the record to create or "
"update"
msgstr ""

#: ../../reference/data.rst:271
msgid ""
"the second column is the :term:`external id` of the country object to link "
"to (country objects must have been defined beforehand)"
msgstr ""

#: ../../reference/data.rst:273
msgid "the third column is the ``name`` field for ``res.country.state``"
msgstr ""

#: ../../reference/data.rst:274
msgid "the fourth column is the ``code`` field for ``res.country.state``"
msgstr ""

#: ../../reference/guidelines.rst:7
msgid "Odoo Guidelines"
msgstr ""

#: ../../reference/guidelines.rst:9
msgid ""
"This page introduce the new Odoo Coding Guidelines. These guidelines aim to "
"improve the quality of the code (better readability of source, ...) and  "
"Odoo Apps. Indeed, proper code ought ease maintenance, aid debugging, lower "
"complexity and promote reliability."
msgstr ""

#: ../../reference/guidelines.rst:15
msgid "Module structure"
msgstr ""

#: ../../reference/guidelines.rst:18
msgid "Directories"
msgstr ""

#: ../../reference/guidelines.rst:19
msgid "A module is organised in a few directory :"
msgstr ""

#: ../../reference/guidelines.rst:21
msgid "*data/* : demo and data xml"
msgstr ""

#: ../../reference/guidelines.rst:22
msgid "*models/* : models definition"
msgstr ""

#: ../../reference/guidelines.rst:23
msgid "*controllers/* : contains controllers (http routes)."
msgstr ""

#: ../../reference/guidelines.rst:24
msgid "*views/* : contains the views and templates"
msgstr ""

#: ../../reference/guidelines.rst:25
msgid ""
"*static/* : contains the web assets, separated into *css/, js/, img/, lib/, "
"...*"
msgstr ""

#: ../../reference/guidelines.rst:28
msgid "File naming"
msgstr ""

#: ../../reference/guidelines.rst:29
msgid ""
"For *views* declarations, split backend views from (frontend) templates in 2"
" differents files."
msgstr ""

#: ../../reference/guidelines.rst:32
msgid ""
"For *models*, split the business logic by sets of models, in each set select"
" a main model, this model gives its name to the set. If there is only one "
"model, its name is the same as the module name. For each set named "
"<main_model> the following files may be created:"
msgstr ""

#: ../../reference/guidelines.rst:37
msgid ":file:`models/{<main_model>}.py`"
msgstr ""

#: ../../reference/guidelines.rst:38
msgid ":file:`models/{<inherited_main_model>}.py`"
msgstr ""

#: ../../reference/guidelines.rst:39
msgid ":file:`views/{<main_model>}_templates.xml`"
msgstr ""

#: ../../reference/guidelines.rst:40
msgid ":file:`views/{<main_model>}_views.xml`"
msgstr ""

#: ../../reference/guidelines.rst:42
msgid ""
"For instance, *sale* module introduces ``sale_order`` and "
"``sale_order_line`` where ``sale_order`` is dominant. So the "
"``<main_model>`` files will be named :file:`models/sale_order.py` and "
":file:`views/sale_order_views.py`."
msgstr ""

#: ../../reference/guidelines.rst:48
msgid ""
"For *data*, split them by purpose : demo or data. The filename will be the "
"main_model name, suffixed by *_demo.xml* or *_data.xml*."
msgstr ""

#: ../../reference/guidelines.rst:51
msgid "For *controller*, the only file should be named *main.py*."
msgstr ""

#: ../../reference/guidelines.rst:53
msgid ""
"For *static files*, the name pattern is *<module_name>.ext* (i.e. : "
"static/js/im_chat.js, static/css/im_chat.css, static/xml/im_chat.xml, ...). "
"Don't link data (image, libraries) outside Odoo : don't use an url to an "
"image but copy it in our codebase instead."
msgstr ""

#: ../../reference/guidelines.rst:58
msgid "The complete tree should look like"
msgstr ""

#: ../../reference/guidelines.rst:100
msgid ""
"File names should only contain ``[a-z0-9_]`` (lowercase alphanumerics and "
"``_``)"
msgstr ""

#: ../../reference/guidelines.rst:103
msgid "Use correct file permissions : folder 755 and file 644."
msgstr ""

#: ../../reference/guidelines.rst:106
msgid "XML files"
msgstr ""

#: ../../reference/guidelines.rst:109
msgid "Format"
msgstr ""

#: ../../reference/guidelines.rst:110
msgid "When declaring a record in XML,"
msgstr ""

#: ../../reference/guidelines.rst:112
msgid "Place ``id`` attribute before ``model``"
msgstr ""

#: ../../reference/guidelines.rst:113
msgid ""
"For field declaration, ``name`` attribute is first. Then place the *value* "
"either in the ``field`` tag, either in the ``eval`` attribute, and finally "
"other attributes (widget, options, ...) ordered by importance."
msgstr ""

#: ../../reference/guidelines.rst:118
msgid ""
"Try to group the record by model. In case of dependencies between "
"action/menu/views, the convention may not be applicable."
msgstr ""

#: ../../reference/guidelines.rst:120
msgid "Use naming convention defined at the next point"
msgstr ""

#: ../../reference/guidelines.rst:121
msgid ""
"The tag *<data>* is only used to set not-updatable data with ``noupdate=1``"
msgstr ""

#: ../../reference/guidelines.rst:139
msgid "Naming xml_id"
msgstr ""

#: ../../reference/guidelines.rst:142
msgid "Security, View and Action"
msgstr ""

#: ../../reference/guidelines.rst:144
msgid "Use the following pattern :"
msgstr ""

#: ../../reference/guidelines.rst:146
msgid "For a menu: :samp:`{<model_name>}_menu`"
msgstr ""

#: ../../reference/guidelines.rst:147
msgid ""
"For a view: :samp:`{<model_name>}_view_{<view_type>}`, where *view_type* is "
"``kanban``, ``form``, ``tree``, ``search``, ..."
msgstr ""

#: ../../reference/guidelines.rst:149
msgid ""
"For an action: the main action respects :samp:`{<model_name>}_action`. "
"Others are suffixed with :samp:`_{<detail>}`, where *detail* is a lowercase "
"string briefly explaining the action. This is used only if multiple actions "
"are declared for the model."
msgstr ""

#: ../../reference/guidelines.rst:154
msgid ""
"For a group: :samp:`{<model_name>}_group_{<group_name>}` where *group_name* "
"is the name of the group, generally 'user', 'manager', ..."
msgstr ""

#: ../../reference/guidelines.rst:156
msgid ""
"For a rule: :samp:`{<model_name>}_rule_{<concerned_group>}` where "
"*concerned_group* is the short name of the concerned group ('user' for the "
"'model_name_group_user', 'public' for public user, 'company' for multi-"
"company rules, ...)."
msgstr ""

#: ../../reference/guidelines.rst:200
msgid ""
"View names use dot notation ``my.model.view_type`` or "
"``my.model.view_type.inherit`` instead of *\"This is the form view of My "
"Model\"*."
msgstr ""

#: ../../reference/guidelines.rst:206
msgid "Inherited XML"
msgstr ""

#: ../../reference/guidelines.rst:208
msgid ""
"The naming pattern of inherited view is "
":samp:`{<base_view>}_inherit_{<current_module_name>}`. A module may only "
"extend a view once.  Suffix the orginal name with "
":samp:`_inherit_{<current_module_name>}` where *current_module_name* is the "
"technical name of the module extending the view."
msgstr ""

#: ../../reference/guidelines.rst:223 ../../reference/qweb.rst:319
msgid "Python"
msgstr ""

#: ../../reference/guidelines.rst:226
msgid "PEP8 options"
msgstr ""

#: ../../reference/guidelines.rst:228
msgid ""
"Using a linter can help show syntax and semantic warnings or errors. Odoo "
"source code tries to respect Python standard, but some of them can be "
"ignored."
msgstr ""

#: ../../reference/guidelines.rst:231
msgid "E501: line too long"
msgstr ""

#: ../../reference/guidelines.rst:232
msgid "E301: expected 1 blank line, found 0"
msgstr ""

#: ../../reference/guidelines.rst:233
msgid "E302: expected 2 blank lines, found 1"
msgstr ""

#: ../../reference/guidelines.rst:234
msgid "E126: continuation line over-indented for hanging indent"
msgstr ""

#: ../../reference/guidelines.rst:235
msgid ""
"E123: closing bracket does not match indentation of opening bracket's line"
msgstr ""

#: ../../reference/guidelines.rst:236
msgid "E127: continuation line over-indented for visual indent"
msgstr ""

#: ../../reference/guidelines.rst:237
msgid "E128: continuation line under-indented for visual indent"
msgstr ""

#: ../../reference/guidelines.rst:238
msgid "E265: block comment should start with '# '"
msgstr ""

#: ../../reference/guidelines.rst:241
msgid "Imports"
msgstr ""

#: ../../reference/guidelines.rst:242
msgid "The imports are ordered as"
msgstr ""

#: ../../reference/guidelines.rst:244
msgid "External libraries (one per line sorted and split in python stdlib)"
msgstr ""

#: ../../reference/guidelines.rst:245
msgid "Imports of ``openerp``"
msgstr ""

#: ../../reference/guidelines.rst:246
msgid "Imports from Odoo modules (rarely, and only if necessary)"
msgstr ""

#: ../../reference/guidelines.rst:248
msgid "Inside these 3 groups, the imported lines are alphabetically sorted."
msgstr ""

#: ../../reference/guidelines.rst:267
msgid "Idioms"
msgstr ""

#: ../../reference/guidelines.rst:269
msgid ""
"Prefer ``%`` over ``.format()``, prefer ``%(varname)`` instead of position "
"(This is better for translation)"
msgstr ""

#: ../../reference/guidelines.rst:270
msgid "Try to avoid generators and decorators"
msgstr ""

#: ../../reference/guidelines.rst:271
msgid ""
"Always favor *Readability* over *conciseness* or using the language features"
" or idioms."
msgstr ""

#: ../../reference/guidelines.rst:272
msgid ""
"Use list comprehension, dict comprehension, and basic manipulation using "
"``map``, ``filter``, ``sum``, ... They make the code easier to read."
msgstr ""

#: ../../reference/guidelines.rst:273
msgid ""
"The same applies for recordset methods : use ``filtered``, ``mapped``, "
"``sorted``, ..."
msgstr ""

#: ../../reference/guidelines.rst:274
msgid "Each python file should have ``# -*- coding: utf-8 -*-`` as first line"
msgstr ""

#: ../../reference/guidelines.rst:275
msgid ""
"Use the ``UserError`` defined in ``openerp.exceptions`` instead of "
"overriding ``Warning``, or find a more appropriate exception in "
"*exceptions.py*"
msgstr ""

#: ../../reference/guidelines.rst:276
msgid ""
"Document your code (docstring on methods, simple comments for the tricky "
"part of the code)"
msgstr ""

#: ../../reference/guidelines.rst:277
msgid "Use meaningful variable/class/method names"
msgstr ""

#: ../../reference/guidelines.rst:282
msgid "Symbols"
msgstr ""

#: ../../reference/guidelines.rst:284
msgid ""
"Odoo Python Class : use camelcase for code in api v8, underscore lowercase "
"notation for old api."
msgstr ""

#: ../../reference/guidelines.rst:297
msgid "Variable name :"
msgstr ""

#: ../../reference/guidelines.rst:295
msgid "use camelcase for model variable"
msgstr ""

#: ../../reference/guidelines.rst:296
msgid "use underscore lowercase notation for common variable."
msgstr ""

#: ../../reference/guidelines.rst:297
msgid ""
"since new API works with record or recordset instead of id list, don't "
"suffix variable name with *_id* or *_ids* if they not contain id or list of "
"id."
msgstr ""

#: ../../reference/guidelines.rst:305
msgid ""
"``One2Many`` and ``Many2Many`` fields should always have *_ids* as suffix "
"(example: sale_order_line_ids)"
msgstr ""

#: ../../reference/guidelines.rst:306
msgid ""
"``Many2One`` fields should have *_id* as suffix (example : partner_id, "
"user_id, ...)"
msgstr ""

#: ../../reference/guidelines.rst:313
msgid "Method conventions"
msgstr ""

#: ../../reference/guidelines.rst:308
msgid "Compute Field : the compute method pattern is *_compute_<field_name>*"
msgstr ""

#: ../../reference/guidelines.rst:309
msgid "Search method : the search method pattern is *_search_<field_name>*"
msgstr ""

#: ../../reference/guidelines.rst:310
msgid "Default method : the default method pattern is *_default_<field_name>*"
msgstr ""

#: ../../reference/guidelines.rst:311
msgid ""
"Onchange method : the onchange method pattern is *_onchange_<field_name>*"
msgstr ""

#: ../../reference/guidelines.rst:312
msgid ""
"Constraint method : the constraint method pattern is "
"*_check_<constraint_name>*"
msgstr ""

#: ../../reference/guidelines.rst:313
msgid ""
"Action method : an object action method is prefix with *action_*. Its "
"decorator is ``@api.multi``, but since it use only one record, add "
"``self.ensure_one()`` at the beginning of the method."
msgstr ""

#: ../../reference/guidelines.rst:323
msgid "In a Model attribute order should be"
msgstr ""

#: ../../reference/guidelines.rst:316
msgid "Private attributes (``_name``, ``_description``, ``_inherit``, ...)"
msgstr ""

#: ../../reference/guidelines.rst:317
msgid "Default method and ``_default_get``"
msgstr ""

#: ../../reference/guidelines.rst:318
msgid "Field declarations"
msgstr ""

#: ../../reference/guidelines.rst:319
msgid "Compute and search methods in the same order as field declaration"
msgstr ""

#: ../../reference/guidelines.rst:320
msgid ""
"Constrains methods (``@api.constrains``) and onchange methods "
"(``@api.onchange``)"
msgstr ""

#: ../../reference/guidelines.rst:321
msgid "CRUD methods (ORM overrides)"
msgstr ""

#: ../../reference/guidelines.rst:322
msgid "Action methods"
msgstr ""

#: ../../reference/guidelines.rst:323
msgid "And finally, other business methods."
msgstr ""

#: ../../reference/guidelines.rst:375
msgid "Javascript and CSS"
msgstr ""

#: ../../reference/guidelines.rst:376
msgid "**For javascript :**"
msgstr ""

#: ../../reference/guidelines.rst:378
msgid "``use strict;`` is recommended for all javascript files"
msgstr ""

#: ../../reference/guidelines.rst:379
msgid "Use a linter (jshint, ...)"
msgstr ""

#: ../../reference/guidelines.rst:380
msgid "Never add minified Javascript Libraries"
msgstr ""

#: ../../reference/guidelines.rst:381
msgid "Use camelcase for class declaration"
msgstr ""

#: ../../reference/guidelines.rst:383
msgid "**For CSS :**"
msgstr ""

#: ../../reference/guidelines.rst:385
msgid ""
"Prefix all your class with *o_<module_name>* where *module_name* is the "
"technical name of the module ('sale', 'im_chat', ...) or the main route "
"reserved by the module (for website module mainly, i.e. : 'o_forum' for "
"website_forum module). The only exception for this rule is the webclient : "
"it simply use *o_* prefix."
msgstr ""

#: ../../reference/guidelines.rst:386
msgid "Avoid using id"
msgstr ""

#: ../../reference/guidelines.rst:387
msgid "Use bootstrap native class"
msgstr ""

#: ../../reference/guidelines.rst:388
msgid "Use underscore lowercase notation to name class"
msgstr ""

#: ../../reference/guidelines.rst:391
msgid "Git"
msgstr ""

#: ../../reference/guidelines.rst:394
msgid "Commit message"
msgstr ""

#: ../../reference/guidelines.rst:396
msgid "Prefix your commit with"
msgstr ""

#: ../../reference/guidelines.rst:398
msgid "**[IMP]** for improvements"
msgstr ""

#: ../../reference/guidelines.rst:399
msgid "**[FIX]** for bug fixes"
msgstr ""

#: ../../reference/guidelines.rst:400
msgid "**[REF]** for refactoring"
msgstr ""

#: ../../reference/guidelines.rst:401
msgid "**[ADD]** for adding new resources"
msgstr ""

#: ../../reference/guidelines.rst:402
msgid "**[REM]** for removing of resources"
msgstr ""

#: ../../reference/guidelines.rst:403
msgid "**[MERGE]** for merge commits (only for forward/back-port)"
msgstr ""

#: ../../reference/guidelines.rst:404
msgid "**[CLA]** for signing the Odoo Individual Contributor License"
msgstr ""

#: ../../reference/guidelines.rst:406
msgid ""
"Then, in the message itself, specify the part of the code impacted by your "
"changes (module name, lib, transversal object, ...) and a description of the"
" changes."
msgstr ""

#: ../../reference/guidelines.rst:408
msgid ""
"Always include a meaningful commit message: it should be self explanatory "
"(long enough) including the name of the module that has been changed and the"
" reason behind the change. Do not use single words like \"bugfix\" or "
"\"improvements\"."
msgstr ""

#: ../../reference/guidelines.rst:412
msgid ""
"Avoid commits which simultaneously impact multiple modules. Try to split "
"into different commits where impacted modules are different (It will be "
"helpful if we need to revert a module separately)."
msgstr ""

#: ../../reference/guidelines.rst:433
msgid ""
"Use the long description to explain the *why* not the *what*, the *what* can"
" be seen in the diff"
msgstr ""

#: ../../reference/http.rst:5
msgid "Web Controllers"
msgstr ""

#: ../../reference/http.rst:10
msgid "Routing"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.route:1
msgid ""
"Decorator marking the decorated method as being a handler for requests. The "
"method must be part of a subclass of ``Controller``."
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.route:4
msgid ""
"string or array. The route part that will determine which http requests will"
" match the decorated method. Can be a single string or an array of strings. "
"See werkzeug's routing documentation for the format of route expression ( "
"http://werkzeug.pocoo.org/docs/routing/ )."
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.route:9
msgid "The type of request, can be ``'http'`` or ``'json'``."
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.route:10
msgid ""
"The type of authentication method, can on of the following:  * ``user``: The"
" user must be authenticated and the current request   will perform using the"
" rights of the user. * ``admin``: The user may not be authenticated and the "
"current request   will perform using the admin user. * ``none``: The method "
"is always active, even if there is no   database. Mainly used by the "
"framework and authentication   modules. There request code will not have any"
" facilities to access   the database nor have any configuration indicating "
"the current   database nor the current user."
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.route:10
msgid "The type of authentication method, can on of the following:"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.route:12
msgid ""
"``user``: The user must be authenticated and the current request will "
"perform using the rights of the user."
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.route:14
msgid ""
"``admin``: The user may not be authenticated and the current request will "
"perform using the admin user."
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.route:16
msgid ""
"``none``: The method is always active, even if there is no database. Mainly "
"used by the framework and authentication modules. There request code will "
"not have any facilities to access the database nor have any configuration "
"indicating the current database nor the current user."
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.route:21
msgid ""
"A sequence of http methods this route applies to. If not specified, all "
"methods are allowed."
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.route:23
msgid "The Access-Control-Allow-Origin cors directive value."
msgstr ""

#: ../../reference/http.rst:17
msgid "Request"
msgstr ""

#: ../../reference/http.rst:19
msgid ""
"The request object is automatically set on :data:`openerp.http.request` at "
"the start of the request"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.WebRequest:1
msgid ""
"Parent class for all Odoo Web request types, mostly deals with "
"initialization and setup of the request object (the dispatching itself has "
"to be handled by the subclasses)"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.WebRequest:5
msgid "a wrapped werkzeug Request object"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.WebRequest:10
msgid ""
"the original :class:`werkzeug.wrappers.Request` object provided to the "
"request"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.WebRequest:15
msgid ""
":class:`~collections.Mapping` of request parameters, not generally useful as"
" they're provided directly to the handler method as keyword arguments"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.WebRequest.env:1
msgid ""
"The :class:`~openerp.api.Environment` bound to current request. Raises a "
":class:`RuntimeError` if the current requests is not bound to a database."
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.WebRequest.context:1
msgid ""
":class:`~collections.Mapping` of context values for the current request"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.WebRequest.session:1
msgid ""
"a :class:`OpenERPSession` holding the HTTP session data for the current http"
" session"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.WebRequest.cr:1
msgid ""
":class:`~openerp.sql_db.Cursor` initialized for the current method call."
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.WebRequest.cr:4
msgid ""
"Accessing the cursor when the current request uses the ``none`` "
"authentication will raise an exception."
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.WebRequest.debug:1
msgid "Indicates whether the current request is in \"debug\" mode"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.WebRequest.session_id:1
msgid ""
"opaque identifier for the :class:`OpenERPSession` instance of the current "
"request"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.WebRequest.session_id:6
msgid "Use the ``sid`` attribute on :attr:`.session`"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.WebRequest.registry:1
msgid ""
"The registry to the database linked to this request. Can be ``None`` if the "
"current request uses the ``none`` authentication."
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.WebRequest.registry:6
msgid "use :attr:`.env`"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.WebRequest.db:1
msgid ""
"The database linked to this request. Can be ``None`` if the current request "
"uses the ``none`` authentication."
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.WebRequest.httpsession:1
msgid "HTTP session data"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.WebRequest.httpsession:5
msgid "Use :attr:`.session` instead."
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.HttpRequest:1
msgid "Handler for the ``http`` request type."
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.HttpRequest:3
msgid ""
"matched routing parameters, query string parameters, form_ parameters and "
"files are passed to the handler method as keyword arguments."
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.HttpRequest:6
msgid "In case of name conflict, routing parameters have priority."
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.HttpRequest:8
msgid "The handler method's result can be:"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.HttpRequest:10
msgid ""
"a falsy value, in which case the HTTP response will be an `HTTP 204`_ (No "
"Content)"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.HttpRequest:12
msgid "a werkzeug Response object, which is returned as-is"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.HttpRequest:13
msgid ""
"a ``str`` or ``unicode``, will be wrapped in a Response object and "
"interpreted as HTML"
msgstr ""

#: ../../../openerp/http.pydocstring of
#: openerp.http.HttpRequest.make_response:1
msgid ""
"Helper for non-HTML responses, or HTML responses with custom response "
"headers or cookies."
msgstr ""

#: ../../../openerp/http.pydocstring of
#: openerp.http.HttpRequest.make_response:4
msgid ""
"While handlers can just return the HTML markup of a page they want to send "
"as a string if non-HTML data is returned they need to create a complete "
"response object, or the returned data will not be correctly interpreted by "
"the clients."
msgstr ""

#: ../../../openerp/http.pydocstring of
#: openerp.http.HttpRequest.make_response:9
msgid "response body"
msgstr ""

#: ../../../openerp/http.pydocstring of
#: openerp.http.HttpRequest.make_response:10
msgid "HTTP headers to set on the response"
msgstr ""

#: ../../../openerp/http.pydocstring of
#: openerp.http.HttpRequest.make_response:12
msgid "cookies to set on the client"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.HttpRequest.not_found:1
msgid ""
"Shortcut for a `HTTP 404 "
"<http://tools.ietf.org/html/rfc7231#section-6.5.4>`_ (Not Found) response"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.HttpRequest.render:1
msgid "Lazy render of a QWeb template."
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.HttpRequest.render:3
msgid ""
"The actual rendering of the given template will occur at then end of the "
"dispatching. Meanwhile, the template and/or qcontext can be altered or even "
"replaced by a static response."
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.HttpRequest.render:7
#: ../../../openerp/http.pydocstring of openerp.http.Response:7
msgid "template to render"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.HttpRequest.render:8
#: ../../../openerp/http.pydocstring of openerp.http.Response:8
msgid "Rendering context to use"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.HttpRequest.render:9
msgid ""
"whether the template rendering should be deferred until the last possible "
"moment"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.HttpRequest.render:11
msgid "forwarded to werkzeug's Response object"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.JsonRequest:1
msgid ""
"Request handler for `JSON-RPC 2 <http://www.jsonrpc.org/specification>`_ "
"over HTTP"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.JsonRequest:4
msgid "``method`` is ignored"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.JsonRequest:5
msgid ""
"``params`` must be a JSON object (not an array) and is passed as keyword "
"arguments to the handler method"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.JsonRequest:7
msgid ""
"the handler method's result is returned as JSON-RPC ``result`` and wrapped "
"in the `JSON-RPC Response "
"<http://www.jsonrpc.org/specification#response_object>`_"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.JsonRequest:11
msgid "Sucessful request::"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.JsonRequest:23
msgid "Request producing a error::"
msgstr ""

#: ../../reference/http.rst:31
msgid "Response"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.Response:1
msgid "Response object passed through controller route chain."
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.Response:3
msgid ""
"In addition to the :class:`werkzeug.wrappers.Response` parameters, this "
"class's constructor can take the following additional parameters for QWeb "
"Lazy Rendering."
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.Response:9
msgid ""
"User id to use for the ir.ui.view render call, ``None`` to use the request's"
" user (the default)"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.Response:12
msgid ""
"these attributes are available as parameters on the Response object and can "
"be altered at any time before rendering"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.Response:15
msgid ""
"Also exposes all the attributes and methods of "
":class:`werkzeug.wrappers.Response`."
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.Response.render:1
msgid "Renders the Response's template, returns the result"
msgstr ""

#: ../../../openerp/http.pydocstring of openerp.http.Response.flatten:1
msgid ""
"Forces the rendering of the response's template, sets the result as response"
" body and unsets :attr:`.template`"
msgstr ""

#: ../../reference/http.rst:44
msgid "Controllers"
msgstr ""

#: ../../reference/http.rst:46
msgid ""
"Controllers need to provide extensibility, much like "
":class:`~openerp.models.Model`, but can't use the same mechanism as the pre-"
"requisites (a database with loaded modules) may not be available yet (e.g. "
"no database created, or no database selected)."
msgstr ""

#: ../../reference/http.rst:51
msgid ""
"Controllers thus provide their own extension mechanism, separate from that "
"of models:"
msgstr ""

#: ../../reference/http.rst:54
msgid ""
"Controllers are created by :ref:`inheriting <python:tut-inheritance>` from"
msgstr ""

#: ../../reference/http.rst:58
msgid "and defining methods decorated with :func:`~openerp.http.route`::"
msgstr ""

#: ../../reference/http.rst:65
msgid ""
"To *override* a controller, :ref:`inherit <python:tut-inheritance>` from its"
" class and override relevant methods, re-exposing them if necessary::"
msgstr ""

#: ../../reference/http.rst:74
msgid ""
"decorating with :func:`~openerp.http.route` is necessary to keep the method "
"(and route) visible: if the method is redefined without decorating, it will "
"be \"unpublished\""
msgstr ""

#: ../../reference/http.rst:77
msgid ""
"the decorators of all methods are combined, if the overriding method's "
"decorator has no argument all previous ones will be kept, any provided "
"argument will override previously defined ones e.g.::"
msgstr ""

#: ../../reference/http.rst:86
msgid ""
"will change ``/some_url`` from public authentication to user (requiring a "
"log-in)"
msgstr ""

#: ../../reference/javascript.rst:9 ../../reference/qweb.rst:418
msgid "Javascript"
msgstr ""

#: ../../reference/javascript.rst:12
msgid "Widgets"
msgstr ""

#: ../../reference/javascript.rst:16
msgid ""
"Exported in ``web.Widget``, the base class for all visual components. It "
"corresponds to an MVC view, and provides a number of service to simplify "
"handling of a section of a page:"
msgstr ""

#: ../../reference/javascript.rst:20
msgid "Handles parent/child relationships between widgets"
msgstr ""

#: ../../reference/javascript.rst:21
msgid ""
"Provides extensive lifecycle management with safety features (e.g. "
"automatically destroying children widgets during the destruction of a "
"parent)"
msgstr ""

#: ../../reference/javascript.rst:24
msgid "Automatic rendering with :ref:`qweb <reference/qweb>`"
msgstr ""

#: ../../reference/javascript.rst:25
msgid "Backbone-compatible shortcuts"
msgstr ""

#: ../../reference/javascript.rst:28
msgid "DOM Root"
msgstr ""

#: ../../reference/javascript.rst:30
msgid ""
"A :class:`~Widget` is responsible for a section of the page materialized by "
"the DOM root of the widget."
msgstr ""

#: ../../reference/javascript.rst:33
msgid "A widget's DOM root is available via two attributes:"
msgstr ""

#: ../../reference/javascript.rst:37
msgid "raw DOM element set as root to the widget"
msgstr ""

#: ../../reference/javascript.rst:41
msgid "jQuery wrapper around :attr:`~Widget.el`"
msgstr ""

#: ../../reference/javascript.rst:43
msgid "There are two main ways to define and generate this DOM root:"
msgstr ""

#: ../../reference/javascript.rst:47
msgid ""
"Should be set to the name of a :ref:`QWeb template <reference/qweb>`. If "
"set, the template will be rendered after the widget has been initialized but"
" before it has been started. The root element generated by the template will"
" be set as the DOM root of the widget."
msgstr ""

#: ../../reference/javascript.rst:54
msgid ""
"Used if the widget has no template defined. Defaults to ``div``, will be "
"used as the tag name to create the DOM element to set as the widget's DOM "
"root. It is possible to further customize this generated DOM root with the "
"following attributes:"
msgstr ""

#: ../../reference/javascript.rst:61
msgid "Used to generate an ``id`` attribute on the generated DOM root."
msgstr ""

#: ../../reference/javascript.rst:66
msgid "Used to generate a ``class`` attribute on the generated DOM root."
msgstr ""

#: ../../reference/javascript.rst:70
msgid ""
"Mapping (object literal) of attribute names to attribute values. Each of "
"these k:v pairs will be set as a DOM attribute on the generated DOM root."
msgstr ""

#: ../../reference/javascript.rst:74
msgid "None of these is used in case a template is specified on the widget."
msgstr ""

#: ../../reference/javascript.rst:76
msgid "The DOM root can also be defined programmatically by overridding"
msgstr ""

#: ../../reference/javascript.rst:80
msgid ""
"Renders the widget's DOM root and sets it. The default implementation will "
"render a set template or generate an element as described above, and will "
"call :func:`~Widget.setElement` on the result."
msgstr ""

#: ../../reference/javascript.rst:85
msgid ""
"Any override to :func:`~Widget.renderElement` which does not call its "
"``_super`` **must** call :func:`~Widget.setElement` with whatever it "
"generated or the widget's behavior is undefined."
msgstr ""

#: ../../reference/javascript.rst:92
msgid ""
"The default :func:`~Widget.renderElement` can be called repeatedly, it will "
"*replace* the previous DOM root (using ``replaceWith``). However, this "
"requires that the widget correctly sets and unsets its events (and children "
"widgets). Generally, :func:`~Widget.renderElement` should not be called "
"repeatedly unless the widget advertizes this feature."
msgstr ""

#: ../../reference/javascript.rst:100
msgid "Using a widget"
msgstr ""

#: ../../reference/javascript.rst:102
msgid "A widget's lifecycle has 3 main phases:"
msgstr ""

#: ../../reference/javascript.rst:104
msgid "creation and initialization of the widget instance"
msgstr ""

#: ../../reference/javascript.rst:108
msgid ""
"initialization method of widgets, synchronous, can be overridden to take "
"more parameters from the widget's creator/parent"
msgstr ""

#: ../../reference/javascript.rst:111
msgid ""
"the new widget's parent, used to handle automatic destruction and event "
"propagation. Can be ``null`` for the widget to have no parent."
msgstr ""

#: ../../reference/javascript.rst:116
msgid "DOM injection and startup, this is done by calling one of:"
msgstr ""

#: ../../reference/javascript.rst:120
msgid ""
"Renders the widget and inserts it as the last child of the target, uses "
"`.appendTo()`_"
msgstr ""

#: ../../reference/javascript.rst:125
msgid ""
"Renders the widget and inserts it as the first child of the target, uses "
"`.prependTo()`_"
msgstr ""

#: ../../reference/javascript.rst:130
msgid ""
"Renders the widget and inserts it as the preceding sibling of the target, "
"uses `.insertAfter()`_"
msgstr ""

#: ../../reference/javascript.rst:135
msgid ""
"Renders the widget and inserts it as the following sibling of the target, "
"uses `.insertBefore()`_"
msgstr ""

#: ../../reference/javascript.rst:138
msgid ""
"All of these methods accept whatever the corresponding jQuery method accepts"
" (CSS selectors, DOM nodes or jQuery objects). They all return a deferred_ "
"and are charged with three tasks:"
msgstr ""

#: ../../reference/javascript.rst:142
msgid "rendering the widget's root element via :func:`~Widget.renderElement`"
msgstr ""

#: ../../reference/javascript.rst:144
msgid ""
"inserting the widget's root element in the DOM using whichever jQuery method"
" they match"
msgstr ""

#: ../../reference/javascript.rst:146
msgid "starting the widget, and returning the result of starting it"
msgstr ""

#: ../../reference/javascript.rst:150
msgid ""
"asynchronous startup of the widget once it's been injected in the DOM, "
"generally used to perform asynchronous RPC calls to fetch whatever remote "
"data is necessary for the widget to do its work."
msgstr ""

#: ../../reference/javascript.rst:154
msgid "Must return a deferred_ to indicate when its work is done."
msgstr ""

#: ../../reference/javascript.rst:156
msgid ""
"A widget is *not guaranteed* to work correctly until its "
":func:`~Widget.start` method has finished executing. The widget's "
"parent/creator must wait for a widget to be fully started before interacting"
" with it"
msgstr ""

#: ../../reference/javascript.rst:161 ../../reference/javascript.rst:202
msgid "deferred_ object"
msgstr ""

#: ../../reference/javascript.rst:163
msgid "widget destruction and cleanup"
msgstr ""

#: ../../reference/javascript.rst:167
msgid ""
"destroys the widget's children, unbinds its events and removes its root from"
" the DOM. Automatically called when the widget's parent is destroyed, must "
"be called explicitly if the widget has no parents or if it is removed but "
"its parent remains."
msgstr ""

#: ../../reference/javascript.rst:172
msgid "A widget being destroyed is automatically unlinked from its parent."
msgstr ""

#: ../../reference/javascript.rst:174
msgid "Related to widget destruction is an important utility method:"
msgstr ""

#: ../../reference/javascript.rst:178
msgid ""
"A significant issue with RPC and destruction is that an RPC call may take a "
"long time to execute and return while a widget is being destroyed or after "
"it has been destroyed, trying to execute its operations on a widget in a "
"broken/invalid state."
msgstr ""

#: ../../reference/javascript.rst:183
msgid "This is a frequent source of errors or strange behaviors."
msgstr ""

#: ../../reference/javascript.rst:185
msgid ""
":func:`~Widget.alive` can be used to wrap an RPC call, ensuring that "
"whatever operations should be executed when the call ends are only executed "
"if the widget is still alive::"
msgstr ""

#: ../../reference/javascript.rst:197
msgid "a deferred_ object to wrap"
msgstr ""

#: ../../reference/javascript.rst:198
msgid ""
"by default, if the RPC call returns after the widget has been destroyed the "
"returned deferred_ is left in limbo (neither resolved nor rejected). If "
"``reject`` is set to ``true``, the deferred_ will be rejected instead."
msgstr ""

#: ../../reference/javascript.rst:206
msgid ""
"``true`` if the widget is being or has been destroyed, ``false`` otherwise"
msgstr ""

#: ../../reference/javascript.rst:210
msgid "Accessing DOM content"
msgstr ""

#: ../../reference/javascript.rst:213
msgid ""
"Because a widget is only responsible for the content below its DOM root, "
"there"
msgstr ""

#: ../../reference/javascript.rst:213
msgid "is a shortcut for selecting sub-sections of a widget's DOM:"
msgstr ""

#: ../../reference/javascript.rst:217
msgid ""
"Applies the CSS selector specified as parameter to the widget's DOM root::"
msgstr ""

#: ../../reference/javascript.rst:222
msgid "is functionally identical to::"
msgstr ""

#: ../../reference/javascript.rst:226
msgid "CSS selector"
msgstr ""

#: ../../reference/javascript.rst:227
msgid "jQuery object"
msgstr ""

#: ../../reference/javascript.rst:229
msgid "this helper method is similar to ``Backbone.View.$``"
msgstr ""

#: ../../reference/javascript.rst:232
msgid "Resetting the DOM root"
msgstr ""

#: ../../reference/javascript.rst:236
msgid ""
"Re-sets the widget's DOM root to the provided element, also handles re-"
"setting the various aliases of the DOM root as well as unsetting and re-"
"setting delegated events."
msgstr ""

#: ../../reference/javascript.rst:240
msgid "a DOM element or jQuery object to set as the widget's DOM root"
msgstr ""

#: ../../reference/javascript.rst:243
msgid "should be mostly compatible with `Backbone's setElement`_"
msgstr ""

#: ../../reference/javascript.rst:247
msgid "DOM events handling"
msgstr ""

#: ../../reference/javascript.rst:249
msgid ""
"A widget will generally need to respond to user action within its section of"
" the page. This entails binding events to DOM elements."
msgstr ""

#: ../../reference/javascript.rst:252
msgid "To this end, :class:`~Widget` provides a shortcut:"
msgstr ""

#: ../../reference/javascript.rst:256
msgid ""
"Events are a mapping of an event selector (an event name and an optional CSS"
" selector separated by a space) to a callback. The callback can be the name "
"of a widget's method or a function object. In either case, the ``this`` will"
" be set to the widget::"
msgstr ""

#: ../../reference/javascript.rst:268
msgid ""
"The selector is used for jQuery's `event delegation`_, the callback will "
"only be triggered for descendants of the DOM root matching the selector\\ "
"[#eventsdelegation]_. If the selector is left out (only an event name is "
"specified), the event will be set directly on the widget's DOM root."
msgstr ""

#: ../../reference/javascript.rst:276
msgid ""
"This method is in charge of binding :attr:`~Widget.events` to the DOM. It is"
" automatically called after setting the widget's DOM root."
msgstr ""

#: ../../reference/javascript.rst:279
msgid ""
"It can be overridden to set up more complex events than the "
":attr:`~Widget.events` map allows, but the parent should always be called "
"(or :attr:`~Widget.events` won't be handled correctly)."
msgstr ""

#: ../../reference/javascript.rst:285
msgid ""
"This method is in charge of unbinding :attr:`~Widget.events` from the DOM "
"root when the widget is destroyed or the DOM root is reset, in order to "
"avoid leaving \"phantom\" events."
msgstr ""

#: ../../reference/javascript.rst:289
msgid ""
"It should be overridden to un-set any event set in an override of "
":func:`~Widget.delegateEvents`."
msgstr ""

#: ../../reference/javascript.rst:292
msgid ""
"this behavior should be compatible with `Backbone's delegateEvents`_, apart "
"from not accepting any argument."
msgstr ""

#: ../../reference/javascript.rst:296
msgid "Subclassing Widget"
msgstr ""

#: ../../reference/javascript.rst:298
msgid ""
":class:`~Widget` is subclassed in the standard manner (via the "
":func:`~Class.extend` method), and provides a number of abstract properties "
"and concrete methods (which you may or may not want to override). Creating a"
" subclass looks like this::"
msgstr ""

#: ../../reference/javascript.rst:329
msgid "The new class can then be used in the following manner::"
msgstr ""

#: ../../reference/javascript.rst:336
msgid ""
"After these two lines have executed (and any promise returned by "
":func:`~Widget.appendTo` has been resolved if needed), the widget is ready "
"to be used."
msgstr ""

#: ../../reference/javascript.rst:340
msgid ""
"the insertion methods will start the widget themselves, and will return the "
"result of :func:`~Widget.start()`."
msgstr ""

#: ../../reference/javascript.rst:343
msgid ""
"If for some reason you do not want to call these methods, you will have to "
"first call :func:`~Widget.render()` on the widget, then insert it into your "
"DOM and start it."
msgstr ""

#: ../../reference/javascript.rst:347
msgid ""
"If the widget is not needed anymore (because it's transient), simply "
"terminate it::"
msgstr ""

#: ../../reference/javascript.rst:352
msgid ""
"will unbind all DOM events, remove the widget's content from the DOM and "
"destroy all widget data."
msgstr ""

#: ../../reference/javascript.rst:356
msgid "Development Guidelines"
msgstr ""

#: ../../reference/javascript.rst:358
msgid ""
"Identifiers (``id`` attribute) should be avoided. In generic applications "
"and modules, ``id`` limits the re-usability of components and tends to make "
"code more brittle. Most of the time, they can be replaced with nothing, "
"classes or keeping a reference to a DOM node or jQuery element."
msgstr ""

#: ../../reference/javascript.rst:363
msgid ""
"If an ``id`` is absolutely necessary (because a third-party library requires"
" one), the id should be partially generated using ``_.uniqueId()`` e.g.::"
msgstr ""

#: ../../reference/javascript.rst:367
msgid ""
"Avoid predictable/common CSS class names. Class names such as \"content\" or"
" \"navigation\" might match the desired meaning/semantics, but it is likely "
"an other developer will have the same need, creating a naming conflict and "
"unintended behavior. Generic class names should be prefixed with e.g. the "
"name of the component they belong to (creating \"informal\" namespaces, much"
" as in C or Objective-C)."
msgstr ""

#: ../../reference/javascript.rst:373
msgid ""
"Global selectors should be avoided. Because a component may be used several "
"times in a single page (an example in Odoo is dashboards), queries should be"
" restricted to a given component's scope. Unfiltered selections such as "
"``$(selector)`` or ``document.querySelectorAll(selector)`` will generally "
"lead to unintended or incorrect behavior.  Odoo Web's :class:`~Widget` has "
"an attribute providing its DOM root (:attr:`~Widget.$el`), and a shortcut to"
" select nodes directly (:func:`~Widget.$`)."
msgstr ""

#: ../../reference/javascript.rst:381
msgid ""
"More generally, never assume your components own or controls anything beyond"
" its own personal :attr:`~Widget.$el`"
msgstr ""

#: ../../reference/javascript.rst:383
msgid "html templating/rendering should use QWeb unless absolutely trivial."
msgstr ""

#: ../../reference/javascript.rst:384
msgid ""
"All interactive components (components displaying information to the screen "
"or intercepting DOM events) must inherit from :class:`~Widget` and correctly"
" implement and use its API and life cycle."
msgstr ""

#: ../../reference/javascript.rst:412 ../../reference/javascript.rst:1142
msgid "RPC"
msgstr ""

#: ../../reference/javascript.rst:414
msgid ""
"To display and interact with data, calls to the Odoo server are necessary. "
"This is performed using :abbr:`RPC <Remote Procedure Call>`."
msgstr ""

#: ../../reference/javascript.rst:417
msgid ""
"Odoo Web provides two primary APIs to handle this: a low-level JSON-RPC "
"based API communicating with the Python section of Odoo Web (and of your "
"module, if you have a Python part) and a high-level API above that allowing "
"your code to talk directly to high-level Odoo models."
msgstr ""

#: ../../reference/javascript.rst:422
msgid ""
"All networking APIs are :ref:`asynchronous <reference/async>`. As a result, "
"all of them will return Deferred_ objects (whether they resolve those with "
"values or not). Understanding how those work before before moving on is "
"probably necessary."
msgstr ""

#: ../../reference/javascript.rst:428
msgid "High-level API: calling into Odoo models"
msgstr ""

#: ../../reference/javascript.rst:430
msgid ""
"Access to Odoo object methods (made available through XML-RPC from the "
"server) is done via :class:`Model` (exported in ``web.Model``). It maps onto"
" the Odoo server objects via two primary methods, :func:`~Model.call` and "
":func:`~Model.query`."
msgstr ""

#: ../../reference/javascript.rst:435
msgid ""
":func:`~Model.call` is a direct mapping to the corresponding method of the "
"Odoo server object. Its usage is similar to that of the Odoo Model API, with"
" three differences:"
msgstr ""

#: ../../reference/javascript.rst:439
msgid ""
"The interface is :ref:`asynchronous <reference/async>`, so instead of "
"returning results directly RPC method calls will return Deferred_ instances,"
" which will themselves resolve to the result of the matching RPC call."
msgstr ""

#: ../../reference/javascript.rst:444
msgid ""
"Because ECMAScript 3/Javascript 1.5 doesnt feature any equivalent to "
"``__getattr__`` or ``method_missing``, there needs to be an explicit method "
"to dispatch RPC methods."
msgstr ""

#: ../../reference/javascript.rst:448
msgid ""
"No notion of pooler, the model proxy is instantiated where needed, not "
"fetched from an other (somewhat global) object::"
msgstr ""

#: ../../reference/javascript.rst:458
msgid ""
":func:`~Model.query` is a shortcut for a builder-style interface to searches"
" (``search`` + ``read`` in Odoo RPC terms). It returns a "
":class:`~openerp.web.Query` object which is immutable but allows building "
"new :class:`~openerp.web.Query` instances from the first one, adding new "
"properties or modifiying the parent object's::"
msgstr ""

#: ../../reference/javascript.rst:471
msgid ""
"The query is only actually performed when calling one of the query "
"serialization methods, :func:`~openerp.web.Query.all` and "
":func:`~openerp.web.Query.first`. These methods will perform a new RPC call "
"every time they are called."
msgstr ""

#: ../../reference/javascript.rst:476
msgid ""
"For that reason, it's actually possible to keep \"intermediate\" queries "
"around and use them differently/add new specifications on them."
msgstr ""

#: ../../reference/javascript.rst:483
msgid "name of the model this object is bound to"
msgstr ""

#: ../../reference/javascript.rst:487
msgid ""
"Calls the ``method`` method of the current model, with the provided "
"positional and keyword arguments."
msgstr ""

#: ../../reference/javascript.rst:490
msgid "method to call over rpc on the :attr:`~Model.name`"
msgstr ""

#: ../../reference/javascript.rst:492
msgid "positional arguments to pass to the method, optional"
msgstr ""

#: ../../reference/javascript.rst:494
msgid "keyword arguments to pass to the method, optional"
msgstr ""

#: ../../reference/javascript.rst:496
msgid "Deferred<>"
msgstr ""

#: ../../reference/javascript.rst:500
msgid "list of fields to fetch during the search"
msgstr ""

#: ../../reference/javascript.rst:502
msgid ""
"a :class:`~openerp.web.Query` object representing the search to perform"
msgstr ""

#: ../../reference/javascript.rst:507
msgid ""
"The first set of methods is the \"fetching\" methods. They perform RPC "
"queries using the internal data of the object they're called on."
msgstr ""

#: ../../reference/javascript.rst:513
msgid ""
"Fetches the result of the current :class:`~openerp.web.Query` object's "
"search."
msgstr ""

#: ../../reference/javascript.rst:516
msgid "Deferred<Array<>>"
msgstr ""

#: ../../reference/javascript.rst:520
msgid ""
"Fetches the **first** result of the current :class:`~openerp.web.Query`, or "
"``null`` if the current :class:`~openerp.web.Query` does have any result."
msgstr ""

#: ../../reference/javascript.rst:524
msgid "Deferred<Object | null>"
msgstr ""

#: ../../reference/javascript.rst:528
msgid ""
"Fetches the number of records the current :class:`~openerp.web.Query` would "
"retrieve."
msgstr ""

#: ../../reference/javascript.rst:531
msgid "Deferred<Number>"
msgstr ""

#: ../../reference/javascript.rst:535
msgid ""
"Fetches the groups for the query, using the first specified grouping "
"parameter"
msgstr ""

#: ../../reference/javascript.rst:538
msgid ""
"Lists the levels of grouping asked of the server. Grouping can actually be "
"an array or varargs."
msgstr ""

#: ../../reference/javascript.rst:542
msgid "Deferred<Array<openerp.web.QueryGroup>> | null"
msgstr ""

#: ../../reference/javascript.rst:544
msgid ""
"The second set of methods is the \"mutator\" methods, they create a **new** "
":class:`~openerp.web.Query` object with the relevant (internal) attribute "
"either augmented or replaced."
msgstr ""

#: ../../reference/javascript.rst:550
msgid "Adds the provided ``ctx`` to the query, on top of any existing context"
msgstr ""

#: ../../reference/javascript.rst:555
msgid ""
"Adds the provided domain to the query, this domain is ``AND``-ed to the "
"existing query domain."
msgstr ""

#: ../../reference/javascript.rst:560
msgid ""
"Sets the provided offset on the query. The new offset *replaces* the old "
"one."
msgstr ""

#: ../../reference/javascript.rst:565
msgid ""
"Sets the provided limit on the query. The new limit *replaces* the old one."
msgstr ""

#: ../../reference/javascript.rst:570
msgid ""
"Overrides the model's natural order with the provided field specifications. "
"Behaves much like Django's :py:meth:`QuerySet.order_by "
"<django.db.models.query.QuerySet.order_by>`:"
msgstr ""

#: ../../reference/javascript.rst:574
msgid ""
"Takes 1..n field names, in order of most to least importance (the first "
"field is the first sorting key). Fields are provided as strings."
msgstr ""

#: ../../reference/javascript.rst:578
msgid ""
"A field specifies an ascending order, unless it is prefixed with the minus "
"sign \"``-``\" in which case the field is used in the descending order"
msgstr ""

#: ../../reference/javascript.rst:582
msgid ""
"Divergences from Django's sorting include a lack of random sort (``?`` "
"field) and the inability to \"drill down\" into relations for sorting."
msgstr ""

#: ../../reference/javascript.rst:587
msgid "Aggregation (grouping)"
msgstr ""

#: ../../reference/javascript.rst:589
msgid ""
"Odoo has powerful grouping capacities, but they are kind-of strange in that "
"they're recursive, and level n+1 relies on data provided directly by the "
"grouping at level n. As a result, while "
":py:meth:`openerp.models.Model.read_group` works it's not a very intuitive "
"API."
msgstr ""

#: ../../reference/javascript.rst:595
msgid ""
"Odoo Web eschews direct calls to :py:meth:`~openerp.models.Model.read_group`"
" in favor of calling a method of :class:`~openerp.web.Query`, :py:meth:`much"
" in the way it is one in SQLAlchemy <sqlalchemy.orm.query.Query.group_by>` "
"[#terminal]_::"
msgstr ""

#: ../../reference/javascript.rst:604
msgid ""
"This method is asynchronous when provided with 1..n fields (to group on) as "
"argument, but it can also be called without any field (empty fields "
"collection or nothing at all). In this case, instead of returning a Deferred"
" object it will return ``null``."
msgstr ""

#: ../../reference/javascript.rst:609
msgid ""
"When grouping criterion come from a third-party and may or may not list "
"fields (e.g. could be an empty list), this provides two ways to test the "
"presence of actual subgroups (versus the need to perform a regular query for"
" records):"
msgstr ""

#: ../../reference/javascript.rst:614
msgid ""
"A check on ``group_by``'s result and two completely separate code paths::"
msgstr ""

#: ../../reference/javascript.rst:625
msgid ""
"Or a more coherent code path using :func:`when`'s ability to coerce values "
"into deferreds::"
msgstr ""

#: ../../reference/javascript.rst:637
msgid ""
"The result of a (successful) :func:`~openerp.web.Query.group_by` is an array"
" of :class:`~openerp.web.QueryGroup`:"
msgstr ""

#: ../../reference/javascript.rst:644
msgid "returns the group's attribute ``key``. Known attributes are:"
msgstr ""

#: ../../reference/javascript.rst:646
msgid "``grouped_on``"
msgstr ""

#: ../../reference/javascript.rst:647
msgid "which grouping field resulted from this group"
msgstr ""

#: ../../reference/javascript.rst:649
msgid "``grouped_on``'s value for this group"
msgstr ""

#: ../../reference/javascript.rst:650
msgid "``length``"
msgstr ""

#: ../../reference/javascript.rst:651
msgid "the number of records in the group"
msgstr ""

#: ../../reference/javascript.rst:652
msgid "``aggregates``"
msgstr ""

#: ../../reference/javascript.rst:653
msgid "a {field: value} mapping of aggregations for the group"
msgstr ""

#: ../../reference/javascript.rst:657
msgid ""
"equivalent to :func:`Model.query` but pre-filtered to only include the "
"records within this group. Returns a :class:`~openerp.web.Query` which can "
"be further manipulated as usual."
msgstr ""

#: ../../reference/javascript.rst:664
msgid ""
"returns a deferred to an array of :class:`~openerp.web.QueryGroup` below "
"this one"
msgstr ""

#: ../../reference/javascript.rst:668
msgid "Low-level API: RPC calls to Python side"
msgstr ""

#: ../../reference/javascript.rst:670
msgid ""
"While the previous section is great for calling core OpenERP code (models "
"code), it does not work if you want to call the Python side of Odoo Web."
msgstr ""

#: ../../reference/javascript.rst:674
msgid ""
"For this, a lower-level API exists on on :class:`~Session` objects (the "
"class is exported in ``web.Session``, but an instance isusually available "
"through ``web.session``): the ``rpc`` method."
msgstr ""

#: ../../reference/javascript.rst:678
msgid ""
"This method simply takes an absolute path (the absolute URL of the JSON "
":ref:`route <reference/http/routing>` to call) and a mapping of attributes "
"to values (passed as keyword arguments to the Python method). This function "
"fetches the return value of the Python methods, converted to JSON."
msgstr ""

#: ../../reference/javascript.rst:683
msgid ""
"For instance, to call the ``resequence`` of the "
":class:`~web.controllers.main.DataSet` controller::"
msgstr ""

#: ../../reference/javascript.rst:699
msgid "Web Client"
msgstr ""

#: ../../reference/javascript.rst:702
msgid "Javascript module system overview"
msgstr ""

#: ../../reference/javascript.rst:704
msgid ""
"A new module system (inspired from requirejs) has now been deployed. It has "
"many advantages over the Odoo version 8 system."
msgstr ""

#: ../../reference/javascript.rst:707
msgid ""
"loading order: dependencies are guaranteed to be loaded first, even if files"
" are not loaded in the correct order in the bundle files."
msgstr ""

#: ../../reference/javascript.rst:709
msgid "easier to split a file into smaller logical units."
msgstr ""

#: ../../reference/javascript.rst:710
msgid "no global variables: easier to reason."
msgstr ""

#: ../../reference/javascript.rst:711
msgid ""
"it is possible to examine every dependencies and dependants.  This makes "
"refactoring much simpler, and less risky."
msgstr ""

#: ../../reference/javascript.rst:714
msgid "It has also some disadvantages:"
msgstr ""

#: ../../reference/javascript.rst:716
msgid ""
"files are required to use the module system if they want to interact with "
"odoo, since the various objects are only available in the module system, and"
" not in global variables"
msgstr ""

#: ../../reference/javascript.rst:719
msgid ""
"circular dependencies are not supported.  It makes sense, but it means that "
"one needs to be careful."
msgstr ""

#: ../../reference/javascript.rst:722
msgid ""
"This is obviously a very large change and will require everyone to adopt new"
" habits.  For example, the variable openerp does not exist anymore.  The new"
" way of doing things is to import explicitely the module you need, and "
"declaring explicitely the objects you export.  Here is a simple example::"
msgstr ""

#: ../../reference/javascript.rst:739
msgid ""
"This snippet shows a module named ``addon_name.service``.  It is defined "
"with the ``odoo.define`` function.  ``odoo.define`` takes a name and a "
"function for arguments:"
msgstr ""

#: ../../reference/javascript.rst:743
msgid ""
"The name is the concatenation of the name of the addon it is defined in and "
"a name describing its purpose."
msgstr ""

#: ../../reference/javascript.rst:745
msgid ""
"The function is the place where the javascript module is actually defined.  "
"It takes a function ``require`` as first argument, and returns something (or"
" not, depending if it needs to export something). The ``require`` function "
"is used to get a handle on the dependencies. In this case, it gives a handle"
" on two javascript modules from the ``web`` addon, namely ``web.utils`` and "
"``web.Model``."
msgstr ""

#: ../../reference/javascript.rst:752
msgid ""
"The idea is that you define what you need to import (by using the "
"``require`` function) and declare what you export (by returning something)."
"  The web client will then make sure that your code is loaded properly."
msgstr ""

#: ../../reference/javascript.rst:757
msgid ""
"Modules are contained in a file, but a file can define several modules "
"(however, it is better to keep them in separate files)."
msgstr ""

#: ../../reference/javascript.rst:760
msgid ""
"Each module can return a deferred. In that case, the module is marked as "
"loaded only when the deferred is resolved, and its value is equal to the "
"resolved value. The module can be rejected (unloaded). This will be logged "
"in the console as info."
msgstr ""

#: ../../reference/javascript.rst:764
msgid ""
"``Missing dependencies``: These modules do not appear in the page. It is "
"possible that the JavaScript file is not in the page or that the module name"
" is wrong"
msgstr ""

#: ../../reference/javascript.rst:767
msgid "``Failed modules``: A javascript error is detected"
msgstr ""

#: ../../reference/javascript.rst:769
msgid ""
"``Rejected modules``: The module returns a rejected deferred. It (and its "
"dependent modules) is not loaded."
msgstr ""

#: ../../reference/javascript.rst:772
msgid "``Rejected linked modules``: Modules who depend on a rejected module"
msgstr ""

#: ../../reference/javascript.rst:774
msgid ""
"``Non loaded modules``: Modules who depend on a missing or a failed module"
msgstr ""

#: ../../reference/javascript.rst:779
msgid "Web client structure"
msgstr ""

#: ../../reference/javascript.rst:781
msgid ""
"The web client files have been refactored into smaller and simpler files. "
"Here is a description of the current file structure:"
msgstr ""

#: ../../reference/javascript.rst:784
msgid ""
"the ``framework/`` folder contains all basic low level modules.  The modules"
" here are supposed to be generic.  Some of them are:"
msgstr ""

#: ../../reference/javascript.rst:787
msgid "``web.ajax`` implements rpc calls"
msgstr ""

#: ../../reference/javascript.rst:788
msgid ""
"``web.core`` is a generic modules.  It exports various useful objects and "
"functions, such as ``qweb``, ``_t`` or the main bus."
msgstr ""

#: ../../reference/javascript.rst:790
msgid "``web.Widget`` contains the widget class"
msgstr ""

#: ../../reference/javascript.rst:791
msgid ""
"``web.Model`` is an abstraction over ``web.ajax`` to make calls to the "
"server model methods"
msgstr ""

#: ../../reference/javascript.rst:793
msgid "``web.session`` is the former ``openerp.session``"
msgstr ""

#: ../../reference/javascript.rst:794
msgid "``web.utils`` for useful code snippets"
msgstr ""

#: ../../reference/javascript.rst:795
msgid "``web.time`` for every time-related generic functions"
msgstr ""

#: ../../reference/javascript.rst:796
msgid "the ``views/`` folder contains all view definitions"
msgstr ""

#: ../../reference/javascript.rst:797
msgid "``widgets/`` is for standalone widgets"
msgstr ""

#: ../../reference/javascript.rst:799
msgid "The ``js/`` folder also contains some important files:"
msgstr ""

#: ../../reference/javascript.rst:801
msgid "``action_manager.js`` is the ActionManager class"
msgstr ""

#: ../../reference/javascript.rst:802
msgid "``boot.js`` is the file actually implementing the module system"
msgstr ""

#: ../../reference/javascript.rst:803
msgid "``menu.js`` is the definition of the top menu"
msgstr ""

#: ../../reference/javascript.rst:804
msgid "``web_client.js`` is for the root widget WebClient"
msgstr ""

#: ../../reference/javascript.rst:805
msgid "``view_manager.js`` contains the ViewManager"
msgstr ""

#: ../../reference/javascript.rst:807
msgid ""
"The two other files are ``tour.js`` for the tours and ``compatibility.js``. "
"The latter file is a compatibility layer bridging the old system to the new "
"module system.  This is where every module names are exported to the global "
"variable ``openerp``.  In theory, our addons should work without ever using "
"the variable ``openerp``, and the compatibility module can be disabled "
"safely."
msgstr ""

#: ../../reference/javascript.rst:815
msgid "Javascript conventions"
msgstr ""

#: ../../reference/javascript.rst:817
msgid "Here are some basic conventions for the javascript code:"
msgstr ""

#: ../../reference/javascript.rst:819
msgid ""
"declare all your dependencies at the top of the module.  Also, they should "
"be sorted alphabetically by module name.  This makes it easier to understand"
" your module."
msgstr ""

#: ../../reference/javascript.rst:822
msgid "declare all exports at the end."
msgstr ""

#: ../../reference/javascript.rst:823
msgid "add the ``use strict`` statement at the beginning of every module"
msgstr ""

#: ../../reference/javascript.rst:824
msgid "always name your module properly: ``addon_name.description``."
msgstr ""

#: ../../reference/javascript.rst:825
msgid ""
"use capital letters for classes (for example, ``ActionManager`` is defined "
"in the module ``web.ActionManager``), and lowercase for everything else (for"
" example, ``ajax`` is defined in ``web.ajax``)."
msgstr ""

#: ../../reference/javascript.rst:828
msgid "declare one module per file"
msgstr ""

#: ../../reference/javascript.rst:835
msgid "Testing in Odoo Web Client"
msgstr ""

#: ../../reference/javascript.rst:838
msgid "Javascript Unit Testing"
msgstr ""

#: ../../reference/javascript.rst:840
msgid ""
"Odoo Web includes means to unit-test both the core code of Odoo Web and your"
" own javascript modules. On the javascript side, unit-testing is based on "
"QUnit_ with a number of helpers and extensions for better integration with "
"Odoo."
msgstr ""

#: ../../reference/javascript.rst:845
msgid ""
"To see what the runner looks like, find (or start) an Odoo server with the "
"web client enabled, and navigate to ``/web/tests`` This will show the runner"
" selector, which lists all modules with javascript unit tests, and allows "
"starting any of them (or all javascript tests in all modules at once)."
msgstr ""

#: ../../reference/javascript.rst:854
msgid ""
"Clicking any runner button will launch the corresponding tests in the "
"bundled QUnit_ runner:"
msgstr ""

#: ../../reference/javascript.rst:861
msgid "Writing a test case"
msgstr ""

#: ../../reference/javascript.rst:863
msgid ""
"The first step is to list the test file(s). This is done through the "
"``test`` key of the Odoo manifest, by adding javascript files to it:"
msgstr ""

#: ../../reference/javascript.rst:875
msgid "and to create the corresponding test file(s)"
msgstr ""

#: ../../reference/javascript.rst:879
msgid ""
"Test files which do not exist will be ignored, if all test files of a module"
" are ignored (can not be found), the test runner will consider that the "
"module has no javascript tests."
msgstr ""

#: ../../reference/javascript.rst:883
msgid ""
"After that, refreshing the runner selector will display the new module and "
"allow running all of its (0 so far) tests:"
msgstr ""

#: ../../reference/javascript.rst:889
msgid "The next step is to create a test case::"
msgstr ""

#: ../../reference/javascript.rst:897
msgid ""
"All testing helpers and structures live in the ``openerp.testing`` module. "
"Odoo tests live in a :func:`~openerp.testing.section`, which is itself part "
"of a module. The first argument to a section is the name of the section, the"
" second one is the section body."
msgstr ""

#: ../../reference/javascript.rst:902
msgid ""
":func:`test <openerp.testing.case>`, provided by the "
":func:`~openerp.testing.section` to the callback, is used to register a "
"given test case which will be run whenever the test runner actually does its"
" job. Odoo Web test case use standard `QUnit assertions`_ within them."
msgstr ""

#: ../../reference/javascript.rst:908
msgid ""
"Launching the test runner at this point will run the test and display the "
"corresponding assertion message, with red colors indicating the test failed:"
msgstr ""

#: ../../reference/javascript.rst:915
msgid ""
"Fixing the test (by replacing ``false`` to ``true`` in the assertion) will "
"make it pass:"
msgstr ""

#: ../../reference/javascript.rst:922
msgid "Assertions"
msgstr ""

#: ../../reference/javascript.rst:924
msgid ""
"As noted above, Odoo Web's tests use `qunit assertions`_. They are available"
" globally (so they can just be called without references to anything). The "
"following list is available:"
msgstr ""

#: ../../reference/javascript.rst:930
msgid "checks that ``state`` is truthy (in the javascript sense)"
msgstr ""

#: ../../reference/javascript.rst:934
msgid ""
"checks that the actual (produced by a method being tested) and expected "
"values are identical (roughly equivalent to ``ok(actual === expected, "
"message)``)"
msgstr ""

#: ../../reference/javascript.rst:940
msgid ""
"checks that the actual and expected values are *not* identical (roughly "
"equivalent to ``ok(actual !== expected, message)``)"
msgstr ""

#: ../../reference/javascript.rst:945
msgid ""
"deep comparison between actual and expected: recurse into containers "
"(objects and arrays) to ensure that they have the same keys/number of "
"elements, and the values match."
msgstr ""

#: ../../reference/javascript.rst:951
msgid "inverse operation to :func:`deepEqual`"
msgstr ""

#: ../../reference/javascript.rst:955
msgid ""
"checks that, when called, the ``block`` throws an error. Optionally "
"validates that error against ``expected``."
msgstr ""

#: ../../reference/javascript.rst:959
msgid ""
"if a regexp, checks that the thrown error's message matches the regular "
"expression. If an error type, checks that the thrown error is of that type."
msgstr ""

#: ../../reference/javascript.rst:967
msgid ""
"checks that ``actual`` and ``expected`` are loosely equal, using the ``==`` "
"operator and its coercion rules."
msgstr ""

#: ../../reference/javascript.rst:972
msgid "inverse operation to :func:`equal`"
msgstr ""

#: ../../reference/javascript.rst:975
msgid "Getting an Odoo instance"
msgstr ""

#: ../../reference/javascript.rst:977
msgid ""
"The Odoo instance is the base through which most Odoo Web modules behaviors "
"(functions, objects, …) are accessed. As a result, the test framework "
"automatically builds one, and loads the module being tested and all of its "
"dependencies inside it. This new instance is provided as the first "
"positional parameter to your test cases. Let's observe by adding javascript "
"code (not test code) to the test module:"
msgstr ""

#: ../../reference/javascript.rst:1009
msgid ""
"and then adding a new test case, which simply checks that the ``instance`` "
"contains all the expected stuff we created in the module::"
msgstr ""

#: ../../reference/javascript.rst:1021
msgid "DOM Scratchpad"
msgstr ""

#: ../../reference/javascript.rst:1023
msgid ""
"As in the wider client, arbitrarily accessing document content is strongly "
"discouraged during tests. But DOM access is still needed to e.g. fully "
"initialize :class:`widgets <~openerp.Widget>` before testing them."
msgstr ""

#: ../../reference/javascript.rst:1028
msgid ""
"Thus, a test case gets a DOM scratchpad as its second positional parameter, "
"in a jQuery instance. That scratchpad is fully cleaned up before each test, "
"and as long as it doesn't do anything outside the scratchpad your code can "
"do whatever it wants::"
msgstr ""

#: ../../reference/javascript.rst:1046
msgid ""
"The top-level element of the scratchpad is not cleaned up, test cases can "
"add text or DOM children but shoud not alter ``$scratchpad`` itself."
msgstr ""

#: ../../reference/javascript.rst:1051
msgid "Loading templates"
msgstr ""

#: ../../reference/javascript.rst:1053
msgid ""
"To avoid the corresponding processing costs, by default templates are not "
"loaded into QWeb. If you need to render e.g. widgets making use of QWeb "
"templates, you can request their loading through the "
":attr:`~TestOptions.templates` option to the :func:`test case function "
"<openerp.testing.case>`."
msgstr ""

#: ../../reference/javascript.rst:1059
msgid ""
"This will automatically load all relevant templates in the instance's qweb "
"before running the test case:"
msgstr ""

#: ../../reference/javascript.rst:1097
msgid "Asynchronous cases"
msgstr ""

#: ../../reference/javascript.rst:1099
msgid ""
"The test case examples so far are all synchronous, they execute from the "
"first to the last line and once the last line has executed the test is done."
" But the web client is full of :ref:`asynchronous code <reference/async>`, "
"and thus test cases need to be async-aware."
msgstr ""

#: ../../reference/javascript.rst:1104
msgid ""
"This is done by returning a :class:`deferred <Deferred>` from the case "
"callback::"
msgstr ""

#: ../../reference/javascript.rst:1119
msgid ""
"This example also uses the :class:`options parameter <TestOptions>` to "
"specify the number of assertions the case should expect, if less or more "
"assertions are specified the case will count as failed."
msgstr ""

#: ../../reference/javascript.rst:1123
msgid ""
"Asynchronous test cases *must* specify the number of assertions they will "
"run. This allows more easily catching situations where e.g. the test "
"architecture was not warned about asynchronous operations."
msgstr ""

#: ../../reference/javascript.rst:1129
msgid ""
"Asynchronous test cases also have a 2 seconds timeout: if the test does not "
"finish within 2 seconds, it will be considered failed. This pretty much "
"always means the test will not resolve. This timeout *only* applies to the "
"test itself, not to the setup and teardown processes."
msgstr ""

#: ../../reference/javascript.rst:1137
msgid ""
"If the returned deferred is rejected, the test will be failed unless "
":attr:`~TestOptions.fail_on_rejection` is set to ``false``."
msgstr ""

#: ../../reference/javascript.rst:1144
msgid ""
"An important subset of asynchronous test cases is test cases which need to "
"perform (and chain, to an extent) RPC calls."
msgstr ""

#: ../../reference/javascript.rst:1149
msgid ""
"Because they are a subset of asynchronous cases, RPC cases must also provide"
" a valid :attr:`assertions count <TestOptions.asserts>`."
msgstr ""

#: ../../reference/javascript.rst:1153
msgid ""
"To enable mock RPC, set the :attr:`rpc option <TestOptions.rpc>` to "
"``mock``. This will add a third parameter to the test case callback:"
msgstr ""

#: ../../reference/javascript.rst:1158
msgid ""
"Can be used in two different ways depending on the shape of the first "
"parameter:"
msgstr ""

#: ../../reference/javascript.rst:1161
msgid ""
"If it matches the pattern ``model:method`` (if it contains a colon, "
"essentially) the call will set up the mocking of an RPC call straight to the"
" Odoo server (through XMLRPC) as performed via e.g. "
":func:`openerp.web.Model.call`."
msgstr ""

#: ../../reference/javascript.rst:1166
msgid ""
"In that case, ``handler`` should be a function taking two arguments ``args``"
" and ``kwargs``, matching the corresponding arguments on the server side and"
" should simply return the value as if it were returned by the Python XMLRPC "
"handler::"
msgstr ""

#: ../../reference/javascript.rst:1191
msgid ""
"Otherwise, if it matches an absolute path (e.g. ``/a/b/c``) it will mock a "
"JSON-RPC call to a web client controller, such as "
"``/web/webclient/translations``. In that case, the handler takes a single "
"``params`` argument holding all of the parameters provided over JSON-RPC."
msgstr ""

#: ../../reference/javascript.rst:1197
msgid ""
"As previously, the handler should simply return the result value as if "
"returned by the original JSON-RPC handler::"
msgstr ""

#: ../../reference/javascript.rst:1223
msgid ""
"Mock handlers can contain assertions, these assertions should be part of the"
" assertions count (and if multiple calls are made to a handler containing "
"assertions, it multiplies the effective number of assertions)."
msgstr ""

#: ../../reference/javascript.rst:1229
msgid "Testing API"
msgstr ""

#: ../../reference/javascript.rst:1233
msgid ""
"A test section, serves as shared namespace for related tests (for constants "
"or values to only set up once). The ``body`` function should contain the "
"tests themselves."
msgstr ""

#: ../../reference/javascript.rst:1237
msgid ""
"Note that the order in which tests are run is essentially undefined, do "
"*not* rely on it."
msgstr ""

#: ../../reference/javascript.rst:1247
msgid ""
"Registers a test case callback in the test runner, the callback will only be"
" run once the runner is started (or maybe not at all, if the test is "
"filtered out)."
msgstr ""

#: ../../reference/javascript.rst:1258
msgid ""
"the various options which can be passed to :func:`~openerp.testing.section` "
"or :func:`~openerp.testing.case`. Except for :attr:`~TestOptions.setup` and "
":attr:`~TestOptions.teardown`, an option on :func:`~openerp.testing.case` "
"will overwrite the corresponding option on :func:`~openerp.testing.section` "
"so e.g. :attr:`~TestOptions.rpc` can be set for a "
":func:`~openerp.testing.section` and then differently set for some "
":func:`~openerp.testing.case` of that :func:`~openerp.testing.section`"
msgstr ""

#: ../../reference/javascript.rst:1272
msgid ""
"An integer, the number of assertions which should run during a normal "
"execution of the test. Mandatory for asynchronous tests."
msgstr ""

#: ../../reference/javascript.rst:1277
msgid ""
"Test case setup, run right before each test case. A section's "
":func:`~TestOptions.setup` is run before the case's own, if both are "
"specified."
msgstr ""

#: ../../reference/javascript.rst:1283
msgid ""
"Test case teardown, a case's :func:`~TestOptions.teardown` is run before the"
" corresponding section if both are present."
msgstr ""

#: ../../reference/javascript.rst:1288
msgid ""
"If the test is asynchronous and its resulting promise is rejected, fail the "
"test. Defaults to ``true``, set to ``false`` to not fail the test in case of"
" rejection::"
msgstr ""

#: ../../reference/javascript.rst:1307
msgid ""
"RPC method to use during tests, one of ``\"mock\"`` or ``\"rpc\"``. Any "
"other value will disable RPC for the test (if they were enabled by the suite"
" for instance)."
msgstr ""

#: ../../reference/javascript.rst:1313
msgid ""
"Whether the current module (and its dependencies)'s templates should be "
"loaded into QWeb before starting the test. A boolean, ``false`` by default."
msgstr ""

#: ../../reference/javascript.rst:1317
msgid ""
"The test runner can also use two global configuration values set directly on"
" the ``window`` object:"
msgstr ""

#: ../../reference/javascript.rst:1320
msgid ""
"``oe_all_dependencies`` is an ``Array`` of all modules with a web component,"
" ordered by dependency (for a module ``A`` with dependencies ``A'``, any "
"module of ``A'`` must come before ``A`` in the array)"
msgstr ""

#: ../../reference/javascript.rst:1326
msgid "Running through Python"
msgstr ""

#: ../../reference/javascript.rst:1328
msgid ""
"The web client includes the means to run these tests on the command-line (or"
" in a CI system), but while actually running it is pretty simple the setup "
"of the pre-requisite parts has some complexities."
msgstr ""

#: ../../reference/javascript.rst:1333
msgid ""
"Install unittest2_ in your Python environment. Both can trivially be "
"installed via `pip <http://pip-installer.org>`_ or `easy_install "
"<http://packages.python.org/distribute/easy_install.html>`_."
msgstr ""

#: ../../reference/javascript.rst:1338
msgid ""
"Install PhantomJS_. It is a headless browser which allows automating running"
" and testing web pages. QUnitSuite_ uses it to actually run the qunit_ test "
"suite."
msgstr ""

#: ../../reference/javascript.rst:1342
msgid ""
"The PhantomJS_ website provides pre-built binaries for some platforms, and "
"your OS's package management probably provides it as well."
msgstr ""

#: ../../reference/javascript.rst:1346
msgid ""
"If you're building PhantomJS_ from source, I recommend preparing for some "
"knitting time as it's not exactly fast (it needs to compile both `Qt <http"
"://qt-project.org/>`_ and `Webkit <http://www.webkit.org/>`_, both being "
"pretty big projects)."
msgstr ""

#: ../../reference/javascript.rst:1353
msgid ""
"Because PhantomJS_ is webkit-based, it will not be able to test if Firefox, "
"Opera or Internet Explorer can correctly run the test suite (and it is only "
"an approximation for Safari and Chrome). It is therefore recommended to "
"*also* run the test suites in actual browsers once in a while."
msgstr ""

#: ../../reference/javascript.rst:1361
msgid ""
"The version of PhantomJS_ this was build through is 1.7, previous versions "
"*should* work but are not actually supported (and tend to just segfault when"
" something goes wrong in PhantomJS_ itself so they're a pain to debug)."
msgstr ""

#: ../../reference/javascript.rst:1366
msgid ""
"Install a new database with all relevant modules (all modules with a web "
"component at least), then restart the server"
msgstr ""

#: ../../reference/javascript.rst:1371
msgid ""
"For some tests, a source database needs to be duplicated. This operation "
"requires that there be no connection to the database being duplicated, but "
"Odoo doesn't currently break existing/outstanding connections, so restarting"
" the server is the simplest way to ensure everything is in the right state."
msgstr ""

#: ../../reference/javascript.rst:1377
msgid ""
"Launch ``oe run-tests -d $DATABASE -mweb`` with the correct addons-path "
"specified (and replacing ``$DATABASE`` by the source database you created "
"above)"
msgstr ""

#: ../../reference/javascript.rst:1383
msgid ""
"If you leave out ``-mweb``, the runner will attempt to run all the tests in "
"all the modules, which may or may not work."
msgstr ""

#: ../../reference/javascript.rst:1386
msgid ""
"If everything went correctly, you should now see a list of tests with "
"(hopefully) ``ok`` next to their names, closing with a report of the number "
"of tests run and the time it took:"
msgstr ""

#: ../../reference/javascript.rst:1393
msgid ""
"Congratulation, you have just performed a successful \"offline\" run of the "
"OpenERP Web test suite."
msgstr ""

#: ../../reference/javascript.rst:1398
msgid ""
"Note that this runs all the Python tests for the ``web`` module, but all the"
" web tests for all of Odoo. This can be surprising."
msgstr ""

#: ../../reference/javascript.rst:1411
msgid "not all DOM events are compatible with events delegation"
msgstr ""

#: ../../reference/javascript.rst:1414
msgid ""
"with a small twist: :py:meth:`sqlalchemy.orm.query.Query.group_by` is not "
"terminal, it returns a query which can still be altered."
msgstr ""

#: ../../reference/module.rst:5
msgid "Modules"
msgstr ""

#: ../../reference/module.rst:12
msgid "Manifest"
msgstr ""

#: ../../reference/module.rst:14
msgid ""
"The manifest file serves to declare a python package as an Odoo module and "
"to specify module metadata."
msgstr ""

#: ../../reference/module.rst:17
msgid ""
"It is a file called ``__openerp__.py`` and contains a single Python "
"dictionary, where each key specifies module metadatum."
msgstr ""

#: ../../reference/module.rst:41
msgid "Available manifest fields are:"
msgstr ""

#: ../../reference/module.rst:43
msgid "``name`` (``str``, required)"
msgstr ""

#: ../../reference/module.rst:44
msgid "the human-readable name of the module"
msgstr ""

#: ../../reference/module.rst:45
msgid "``version`` (``str``)"
msgstr ""

#: ../../reference/module.rst:46
msgid "this module's version, should follow `semantic versioning`_ rules"
msgstr ""

#: ../../reference/module.rst:47
msgid "``description`` (``str``)"
msgstr ""

#: ../../reference/module.rst:48
msgid "extended description for the module, in reStructuredText"
msgstr ""

#: ../../reference/module.rst:49
msgid "``author`` (``str``)"
msgstr ""

#: ../../reference/module.rst:50
msgid "name of the module author"
msgstr ""

#: ../../reference/module.rst:51
msgid "``website`` (``str``)"
msgstr ""

#: ../../reference/module.rst:52
msgid "website URL for the module author"
msgstr ""

#: ../../reference/module.rst:53
msgid "``license`` (``str``, defaults: ``AGPL-3``)"
msgstr ""

#: ../../reference/module.rst:54
msgid "distribution license for the module"
msgstr ""

#: ../../reference/module.rst:61
msgid "``category`` (``str``, default: ``Uncategorized``)"
msgstr ""

#: ../../reference/module.rst:56
msgid ""
"classification category within Odoo, rough business domain for the module."
msgstr ""

#: ../../reference/module.rst:58
msgid ""
"Although using `existing categories`_ is recommended, the field is freeform "
"and unknown categories are created on-the-fly. Category hierarchies can be "
"created using the separator ``/`` e.g. ``Foo / Bar`` will create a category "
"``Foo``, a category ``Bar`` as child category of ``Foo``, and will set "
"``Bar`` as the module's category."
msgstr ""

#: ../../reference/module.rst:68
msgid "``depends`` (``list(str)``)"
msgstr ""

#: ../../reference/module.rst:64
msgid ""
"Odoo modules which must be loaded before this one, either because this "
"module uses features they create or because it alters resources they define."
msgstr ""

#: ../../reference/module.rst:68
msgid ""
"When a module is installed, all of its dependencies are installed before it."
" Likewise dependencies are loaded before a module is loaded."
msgstr ""

#: ../../reference/module.rst:71
msgid "``data`` (``list(str)``)"
msgstr ""

#: ../../reference/module.rst:71
msgid ""
"List of data files which must always be installed or updated with the "
"module. A list of paths from the module root directory"
msgstr ""

#: ../../reference/module.rst:74
msgid "``demo`` (``list(str)``)"
msgstr ""

#: ../../reference/module.rst:74
msgid ""
"List of data files which are only installed or updated in *demonstration "
"mode*"
msgstr ""

#: ../../reference/module.rst:86
msgid "``auto_install`` (``bool``, default: ``False``)"
msgstr ""

#: ../../reference/module.rst:77
msgid ""
"If ``True``, this module will automatically be installed if all of its "
"dependencies are installed."
msgstr ""

#: ../../reference/module.rst:80
msgid ""
"It is generally used for \"link modules\" implementing synergic integration "
"between two otherwise independent modules."
msgstr ""

#: ../../reference/module.rst:83
msgid ""
"For instance ``sale_crm`` depends on both ``sale`` and ``crm`` and is set to"
" ``auto_install``. When both ``sale`` and ``crm`` are installed, it "
"automatically adds CRM campaigns tracking to sale orders without either "
"``sale`` or ``crm`` being aware of one another"
msgstr ""

#: ../../reference/orm.rst:7
msgid "ORM API"
msgstr ""

#: ../../reference/orm.rst:10
msgid "Recordsets"
msgstr ""

#: ../../reference/orm.rst:14
msgid ""
"This page documents the New API added in Odoo 8.0 which should be the "
"primary development API going forward. It also provides information about "
"porting from or bridging with the \"old API\" of versions 7 and earlier, but"
" does not explicitly document that API. See the old documentation for that."
msgstr ""

#: ../../reference/orm.rst:19
msgid ""
"Interaction with models and records is performed through recordsets, a "
"sorted set of records of the same model."
msgstr ""

#: ../../reference/orm.rst:22
msgid ""
"contrary to what the name implies, it is currently possible for recordsets "
"to contain duplicates. This may change in the future."
msgstr ""

#: ../../reference/orm.rst:25
msgid ""
"Methods defined on a model are executed on a recordset, and their ``self`` "
"is a recordset::"
msgstr ""

#: ../../reference/orm.rst:35
msgid ""
"Iterating on a recordset will yield new sets of *a single record* "
"(\"singletons\"), much like iterating on a Python string yields strings of a"
" single characters::"
msgstr ""

#: ../../reference/orm.rst:45
msgid "Field access"
msgstr ""

#: ../../reference/orm.rst:47
msgid ""
"Recordsets provide an \"Active Record\" interface: model fields can be read "
"and written directly from the record, but only on singletons (single-record "
"recordsets). Setting a field's value triggers an update to the database::"
msgstr ""

#: ../../reference/orm.rst:57
msgid ""
"Trying to read or write a field on multiple records will raise an error."
msgstr ""

#: ../../reference/orm.rst:59
msgid ""
"Accessing a relational field (:class:`~openerp.fields.Many2one`, "
":class:`~openerp.fields.One2many`, :class:`~openerp.fields.Many2many`) "
"*always* returns a recordset, empty if the field is not set."
msgstr ""

#: ../../reference/orm.rst:65
msgid ""
"each assignment to a field triggers a database update, when setting multiple"
" fields at the same time or setting fields on multiple records (to the same "
"value), use :meth:`~openerp.models.Model.write`::"
msgstr ""

#: ../../reference/orm.rst:83
msgid "Set operations"
msgstr ""

#: ../../reference/orm.rst:85
msgid ""
"Recordsets are immutable, but sets of the same model can be combined using "
"various set operations, returning new recordsets. Set operations do *not* "
"preserve order."
msgstr ""

#: ../../reference/orm.rst:91
msgid ""
"``record in set`` returns whether ``record`` (which must be a 1-element "
"recordset) is present in ``set``. ``record not in set`` is the inverse "
"operation"
msgstr ""

#: ../../reference/orm.rst:94
msgid ""
"``set1 | set2`` returns the union of the two recordsets, a new recordset "
"containing all records present in either source"
msgstr ""

#: ../../reference/orm.rst:96
msgid ""
"``set1 & set2`` returns the intersection of two recordsets, a new recordset "
"containing only records present in both sources"
msgstr ""

#: ../../reference/orm.rst:98
msgid ""
"``set1 - set2`` returns a new recordset containing only records of ``set1`` "
"which are *not* in ``set2``"
msgstr ""

#: ../../reference/orm.rst:102
msgid "Other recordset operations"
msgstr ""

#: ../../reference/orm.rst:104
msgid ""
"Recordsets are iterable so the usual Python tools are available for "
"transformation (:func:`python:map`, :func:`python:sorted`, "
":func:`~python:itertools.ifilter`, ...) however these return either a "
":class:`python:list` or an :term:`python:iterator`, removing the ability to "
"call methods on their result, or to use set operations."
msgstr ""

#: ../../reference/orm.rst:110
msgid ""
"Recordsets therefore provide these operations returning recordsets "
"themselves (when possible):"
msgstr ""

#: ../../reference/orm.rst:122
msgid ":meth:`~openerp.models.Model.filtered`"
msgstr ""

#: ../../reference/orm.rst:114
msgid ""
"returns a recordset containing only records satisfying the provided "
"predicate function. The predicate can also be a string to filter by a field "
"being true or false::"
msgstr ""

#: ../../reference/orm.rst:129
msgid ":meth:`~openerp.models.Model.sorted`"
msgstr ""

#: ../../reference/orm.rst:125
msgid ""
"returns a recordset sorted by the provided key function. If no key is "
"provided, use the model's default sort order::"
msgstr ""

#: ../../reference/orm.rst:147
msgid ":meth:`~openerp.models.Model.mapped`"
msgstr ""

#: ../../reference/orm.rst:132
msgid ""
"applies the provided function to each record in the recordset, returns a "
"recordset if the results are recordsets::"
msgstr ""

#: ../../reference/orm.rst:138
msgid "The provided function can be a string to get field values::"
msgstr ""

#: ../../reference/orm.rst:150
msgid "Environment"
msgstr ""

#: ../../reference/orm.rst:152
msgid ""
"The :class:`~openerp.api.Environment` stores various contextual data used by"
" the ORM: the database cursor (for database queries), the current user (for "
"access rights checking) and the current context (storing arbitrary "
"metadata). The environment also stores caches."
msgstr ""

#: ../../reference/orm.rst:157
msgid ""
"All recordsets have an environment, which is immutable, can be accessed "
"using :attr:`~openerp.models.Model.env` and gives access to the current user"
" (:attr:`~openerp.api.Environment.user`), the cursor "
"(:attr:`~openerp.api.Environment.cr`) or the context "
"(:attr:`~openerp.api.Environment.context`)::"
msgstr ""

#: ../../reference/orm.rst:170
msgid ""
"When creating a recordset from an other recordset, the environment is "
"inherited. The environment can be used to get an empty recordset in an other"
" model, and query that model::"
msgstr ""

#: ../../reference/orm.rst:180
msgid "Altering the environment"
msgstr ""

#: ../../reference/orm.rst:182
msgid ""
"The environment can be customized from a recordset. This returns a new "
"version of the recordset using the altered environment."
msgstr ""

#: ../../reference/orm.rst:196
msgid ":meth:`~openerp.models.Model.sudo`"
msgstr ""

#: ../../reference/orm.rst:186
msgid ""
"creates a new environment with the provided user set, uses the administrator"
" if none is provided (to bypass access rights/rules in safe contexts), "
"returns a copy of the recordset it is called on using the new environment::"
msgstr ""

#: ../../reference/orm.rst:208
msgid ":meth:`~openerp.models.Model.with_context`"
msgstr ""

#: ../../reference/orm.rst:199
msgid ""
"can take a single positional parameter, which replaces the current "
"environment's context"
msgstr ""

#: ../../reference/orm.rst:201
msgid ""
"can take any number of parameters by keyword, which are added to either the "
"current environment's context or the context set during step 1"
msgstr ""

#: ../../reference/orm.rst:211
msgid ":meth:`~openerp.models.Model.with_env`"
msgstr ""

#: ../../reference/orm.rst:211
msgid "replaces the existing environment entirely"
msgstr ""

#: ../../reference/orm.rst:214
msgid "Common ORM methods"
msgstr ""

#: ../../reference/orm.rst:230
msgid ":meth:`~openerp.models.Model.search`"
msgstr ""

#: ../../reference/orm.rst:219
msgid ""
"Takes a :ref:`search domain <reference/orm/domains>`, returns a recordset of"
" matching records. Can return a subset of matching records (``offset`` and "
"``limit`` parameters) and be ordered (``order`` parameter)::"
msgstr ""

#: ../../reference/orm.rst:229
msgid ""
"to just check if any record matches a domain, or count the number of records"
" which do, use :meth:`~openerp.models.Model.search_count`"
msgstr ""

#: ../../reference/orm.rst:237
msgid ":meth:`~openerp.models.Model.create`"
msgstr ""

#: ../../reference/orm.rst:233
msgid ""
"Takes a number of field values, and returns a recordset containing the "
"record created::"
msgstr ""

#: ../../reference/orm.rst:243
msgid ":meth:`~openerp.models.Model.write`"
msgstr ""

#: ../../reference/orm.rst:240
msgid ""
"Takes a number of field values, writes them to all the records in its "
"recordset. Does not return anything::"
msgstr ""

#: ../../reference/orm.rst:252
msgid ":meth:`~openerp.models.Model.browse`"
msgstr ""

#: ../../reference/orm.rst:246
msgid ""
"Takes a database id or a list of ids and returns a recordset, useful when "
"record ids are obtained from outside Odoo (e.g. round-trip through external "
"system) or :ref:`when calling methods in the old API "
"<reference/orm/oldapi>`::"
msgstr ""

#: ../../reference/orm.rst:266
msgid ":meth:`~openerp.models.Model.exists`"
msgstr ""

#: ../../reference/orm.rst:255
msgid ""
"Returns a new recordset containing only the records which exist in the "
"database. Can be used to check whether a record (e.g. obtained externally) "
"still exists::"
msgstr ""

#: ../../reference/orm.rst:262
msgid "or after calling a method which could have removed some records::"
msgstr ""

#: ../../reference/orm.rst:273
msgid ":meth:`~openerp.api.Environment.ref`"
msgstr ""

#: ../../reference/orm.rst:269
msgid ""
"Environment method returning the record matching a provided :term:`external "
"id`::"
msgstr ""

#: ../../reference/orm.rst:281
msgid ":meth:`~openerp.models.Model.ensure_one`"
msgstr ""

#: ../../reference/orm.rst:276
msgid ""
"checks that the recordset is a singleton (only contains a single record), "
"raises an error otherwise::"
msgstr ""

#: ../../reference/orm.rst:284
msgid "Creating Models"
msgstr ""

#: ../../reference/orm.rst:286
msgid "Model fields are defined as attributes on the model itself::"
msgstr ""

#: ../../reference/orm.rst:294
msgid ""
"this means you can not define a field and a method with the same name, they "
"will conflict"
msgstr ""

#: ../../reference/orm.rst:297
msgid ""
"By default, the field's label (user-visible name) is a capitalized version "
"of the field name, this can be overridden with the ``string`` parameter::"
msgstr ""

#: ../../reference/orm.rst:302
msgid ""
"For the various field types and parameters, see :ref:`the fields reference "
"<reference/orm/fields>`."
msgstr ""

#: ../../reference/orm.rst:305
msgid "Default values are defined as parameters on fields, either a value::"
msgstr ""

#: ../../reference/orm.rst:309
msgid ""
"or a function called to compute the default value, which should return that "
"value::"
msgstr ""

#: ../../reference/orm.rst:317 ../../../openerp/fields.pydocstring of
#: openerp.fields.Field:42
msgid "Computed fields"
msgstr ""

#: ../../reference/orm.rst:319
msgid ""
"Fields can be computed (instead of read straight from the database) using "
"the ``compute`` parameter. **It must assign the computed value to the "
"field**. If it uses the values of other *fields*, it should specify those "
"fields using :func:`~openerp.api.depends`::"
msgstr ""

#: ../../reference/orm.rst:332
msgid "dependencies can be dotted paths when using sub-fields::"
msgstr ""

#: ../../reference/orm.rst:339
msgid ""
"computed fields are not stored by default, they are computed and returned "
"when requested. Setting ``store=True`` will store them in the database and "
"automatically enable searching"
msgstr ""

#: ../../reference/orm.rst:342
msgid ""
"searching on a computed field can also be enabled by setting the ``search`` "
"parameter. The value is a method name returning a "
":ref:`reference/orm/domains`::"
msgstr ""

#: ../../reference/orm.rst:353
msgid ""
"to allow *setting* values on a computed field, use the ``inverse`` "
"parameter. It is the name of a function reversing the computation and "
"setting the relevant fields::"
msgstr ""

#: ../../reference/orm.rst:369
msgid ""
"multiple fields can be computed at the same time by the same method, just "
"use the same method on all fields and set all of them::"
msgstr ""

#: ../../reference/orm.rst:384 ../../../openerp/fields.pydocstring of
#: openerp.fields.Field:109
msgid "Related fields"
msgstr ""

#: ../../reference/orm.rst:386
msgid ""
"A special case of computed fields are *related* (proxy) fields, which "
"provide the value of a sub-field on the current record. They are defined by "
"setting the ``related`` parameter and like regular computed fields they can "
"be stored::"
msgstr ""

#: ../../reference/orm.rst:394
msgid "onchange: updating UI on the fly"
msgstr ""

#: ../../reference/orm.rst:396
msgid ""
"When a user changes a field's value in a form (but hasn't saved the form "
"yet), it can be useful to automatically update other fields based on that "
"value e.g. updating a final total when the tax is changed or a new invoice "
"line is added."
msgstr ""

#: ../../reference/orm.rst:401
msgid ""
"computed fields are automatically checked and recomputed, they do not need "
"an ``onchange``"
msgstr ""

#: ../../reference/orm.rst:403
msgid ""
"for non-computed fields, the :func:`~openerp.api.onchange` decorator is used"
" to provide new field values::"
msgstr ""

#: ../../reference/orm.rst:411
msgid ""
"the changes performed during the method are then sent to the client program "
"and become visible to the user"
msgstr ""

#: ../../reference/orm.rst:414
msgid ""
"Both computed fields and new-API onchanges are automatically called by the "
"client without having to add them in views"
msgstr ""

#: ../../reference/orm.rst:416
msgid ""
"It is possible to suppress the trigger from a specific field by adding "
"``on_change=\"0\"`` in a view::"
msgstr ""

#: ../../reference/orm.rst:421
msgid ""
"will not trigger any interface update when the field is edited by the user, "
"even if there are function fields or explicit onchange depending on that "
"field."
msgstr ""

#: ../../reference/orm.rst:427
msgid ""
"``onchange`` methods work on virtual records assignment on these records is "
"not written to the database, just used to know which value to send back to "
"the client"
msgstr ""

#: ../../reference/orm.rst:432
msgid "Low-level SQL"
msgstr ""

#: ../../reference/orm.rst:434
msgid ""
"The :attr:`~openerp.api.Environment.cr` attribute on environments is the "
"cursor for the current database transaction and allows executing SQL "
"directly, either for queries which are difficult to express using the ORM "
"(e.g. complex joins) or for performance reasons::"
msgstr ""

#: ../../reference/orm.rst:441
msgid ""
"Because models use the same cursor and the :class:`~openerp.api.Environment`"
" holds various caches, these caches must be invalidated when *altering* the "
"database in raw SQL, or further uses of models may become incoherent. It is "
"necessary to clear caches when using ``CREATE``, ``UPDATE`` or ``DELETE`` in"
" SQL, but not ``SELECT`` (which simply reads the database)."
msgstr ""

#: ../../reference/orm.rst:447
msgid ""
"Clearing caches can be performed using the "
":meth:`~openerp.api.Environment.invalidate_all` method of the "
":class:`~openerp.api.Environment` object."
msgstr ""

#: ../../reference/orm.rst:455
msgid "Compatibility between new API and old API"
msgstr ""

#: ../../reference/orm.rst:457
msgid ""
"Odoo is currently transitioning from an older (less regular) API, it can be "
"necessary to manually bridge from one to the other manually:"
msgstr ""

#: ../../reference/orm.rst:460
msgid ""
"RPC layers (both XML-RPC and JSON-RPC) are expressed in terms of the old "
"API, methods expressed purely in the new API are not available over RPC"
msgstr ""

#: ../../reference/orm.rst:462
msgid ""
"overridable methods may be called from older pieces of code still written in"
" the old API style"
msgstr ""

#: ../../reference/orm.rst:465
msgid "The big differences between the old and new APIs are:"
msgstr ""

#: ../../reference/orm.rst:467
msgid ""
"values of the :class:`~openerp.api.Environment` (cursor, user id and "
"context) are passed explicitly to methods instead"
msgstr ""

#: ../../reference/orm.rst:469
msgid ""
"record data (:attr:`~openerp.models.Model.ids`) are passed explicitly to "
"methods, and possibly not passed at all"
msgstr ""

#: ../../reference/orm.rst:471
msgid "methods tend to work on lists of ids instead of recordsets"
msgstr ""

#: ../../reference/orm.rst:473
msgid ""
"By default, methods are assumed to use the new API style and are not "
"callable from the old API style."
msgstr ""

#: ../../reference/orm.rst:476
msgid "calls from the new API to the old API are bridged"
msgstr ""

#: ../../reference/orm.rst:479
msgid ""
"when using the new API style, calls to methods defined using the old API are"
" automatically converted on-the-fly, there should be no need to do anything "
"special::"
msgstr ""

#: ../../reference/orm.rst:496
msgid "Two decorators can expose a new-style method to the old API:"
msgstr ""

#: ../../reference/orm.rst:506
msgid ":func:`~openerp.api.model`"
msgstr ""

#: ../../reference/orm.rst:499
msgid ""
"the method is exposed as not using ids, its recordset will generally be "
"empty. Its \"old API\" signature is ``cr, uid, *arguments, context``::"
msgstr ""

#: ../../reference/orm.rst:516
msgid ":func:`~openerp.api.multi`"
msgstr ""

#: ../../reference/orm.rst:509
msgid ""
"the method is exposed as taking a list of ids (possibly empty), its \"old "
"API\" signature is ``cr, uid, ids, *arguments, context``::"
msgstr ""

#: ../../reference/orm.rst:518
msgid ""
"Because new-style APIs tend to return recordsets and old-style APIs tend to "
"return lists of ids, there is also a decorator managing this:"
msgstr ""

#: ../../reference/orm.rst:537
msgid ":func:`~openerp.api.returns`"
msgstr ""

#: ../../reference/orm.rst:522
msgid ""
"the function is assumed to return a recordset, the first parameter should be"
" the name of the recordset's model or ``self`` (for the current model)."
msgstr ""

#: ../../reference/orm.rst:525
msgid ""
"No effect if the method is called in new API style, but transforms the "
"recordset into a list of ids when called from the old API style::"
msgstr ""

#: ../../reference/orm.rst:542
msgid "Model Reference"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model:1
msgid "Main super-class for regular database-persisted OpenERP models."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model:3
msgid "OpenERP models are created by inheriting from this class::"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model:8
msgid ""
"The system will later instantiate the class once per database (on which the "
"class' module is installed)."
msgstr ""

#: ../../reference/orm.rst:552
msgid "Structural attributes"
msgstr ""

#: ../../reference/orm.rst:555
msgid "business object name, in dot-notation (in module namespace)"
msgstr ""

#: ../../reference/orm.rst:559
msgid ""
"Alternative field to use as name, used by osv’s name_get() (default: "
"``'name'``)"
msgstr ""

#: ../../reference/orm.rst:564
msgid ""
"If :attr:`._name` is set, names of parent models to inherit from. Can be a "
"``str`` if inheriting from a single parent"
msgstr ""

#: ../../reference/orm.rst:566
msgid "If :attr:`._name` is unset, name of a single model to extend in-place"
msgstr ""

#: ../../reference/orm.rst:569
msgid "See :ref:`reference/orm/inheritance`."
msgstr ""

#: ../../reference/orm.rst:573
msgid ""
"Ordering field when searching without an ordering specified (default: "
"``'id'``)"
msgstr ""

#: ../../reference/orm.rst:576
msgid "str"
msgstr ""

#: ../../reference/orm.rst:580
msgid "Whether a database table should be created (default: ``True``)"
msgstr ""

#: ../../reference/orm.rst:582
msgid ""
"If set to ``False``, override :meth:`.init` to create the database table"
msgstr ""

#: ../../reference/orm.rst:587
msgid ""
"Name of the table backing the model created when "
":attr:`~openerp.models.Model._auto`, automatically generated by default."
msgstr ""

#: ../../reference/orm.rst:593
msgid ""
"dictionary mapping the _name of the parent business objects to the names of "
"the corresponding foreign key fields to use::"
msgstr ""

#: ../../reference/orm.rst:601
msgid ""
"implements composition-based inheritance: the new model exposes all the "
"fields of the :attr:`~openerp.models.Model._inherits`-ed model but stores "
"none of them: the values themselves remain stored on the linked record."
msgstr ""

#: ../../reference/orm.rst:608
msgid ""
"if the same field is defined on multiple "
":attr:`~openerp.models.Model._inherits`-ed"
msgstr ""

#: ../../reference/orm.rst:613
msgid ""
"list of ``(constraint_function, message, fields)`` defining Python "
"constraints. The fields list is indicative"
msgstr ""

#: ../../reference/orm.rst:618
msgid "use :func:`~openerp.api.constrains`"
msgstr ""

#: ../../reference/orm.rst:622
msgid ""
"list of ``(name, sql_definition, message)`` triples defining SQL constraints"
" to execute when generating the backing table"
msgstr ""

#: ../../reference/orm.rst:627
msgid ""
"Alongside :attr:`~.parent_left` and :attr:`~.parent_right`, sets up a "
"`nested set <http://en.wikipedia.org/wiki/Nested_set_model>`_  to enable "
"fast hierarchical queries on the records of the current model (default: "
"``False``)"
msgstr ""

#: ../../reference/orm.rst:632
msgid "bool"
msgstr ""

#: ../../reference/orm.rst:635
msgid "CRUD"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.create:1
msgid "Creates a new record for the model."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.create:3
msgid ""
"The new record is initialized using the values from ``vals`` and if "
"necessary those from :meth:`~.default_get`."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.create:6
msgid ""
"values for the model's fields, as a dictionary::      {'field_name': "
"field_value, ...}  see :meth:`~.write` for details"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.create:7
msgid "values for the model's fields, as a dictionary::"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.create:11
msgid "see :meth:`~.write` for details"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.create:12
msgid "new record created"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.create:13
msgid ""
"* if user has no create rights on the requested object * if user tries to "
"bypass access rules for create on the requested object"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.create:13
msgid "if user has no create rights on the requested object"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.create:14
msgid ""
"if user tries to bypass access rules for create on the requested object"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.create:15
#: ../../../openerp/models.pydocstring of openerp.models.Model.write:12
msgid ""
"if user tries to enter invalid value for a field that is not in selection"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.create:16
#: ../../../openerp/models.pydocstring of openerp.models.Model.write:13
msgid ""
"if a loop would be created in a hierarchy of objects a result of the "
"operation (such as setting an object as its own parent)"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.browse:1
msgid ""
"Returns a recordset for the ids provided as parameter in the current "
"environment."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.browse:4
msgid "Can take no ids, a single id or a sequence of ids."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.unlink:1
msgid "Deletes the records of the current set"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.unlink:3
msgid ""
"* if user has no unlink rights on the requested object * if user tries to "
"bypass access rules for unlink on the requested object"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.unlink:3
msgid "if user has no unlink rights on the requested object"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.unlink:4
msgid ""
"if user tries to bypass access rules for unlink on the requested object"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.unlink:5
msgid "if the record is default property for other records"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.write:1
msgid "Updates all records in the current set with the provided values."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.write:3
msgid ""
"fields to update and the value to set on them e.g::      {'foo': 1, 'bar': "
"\"Qux\"}  will set the field ``foo`` to ``1`` and the field ``bar`` to "
"``\"Qux\"`` if those are valid (otherwise it will trigger an error)."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.write:3
msgid "fields to update and the value to set on them e.g::"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.write:7
msgid ""
"will set the field ``foo`` to ``1`` and the field ``bar`` to ``\"Qux\"`` if "
"those are valid (otherwise it will trigger an error)."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.write:10
msgid ""
"* if user has no write rights on the requested object * if user tries to "
"bypass access rules for write on the requested object"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.write:10
msgid "if user has no write rights on the requested object"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.write:11
msgid "if user tries to bypass access rules for write on the requested object"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.write:15
msgid ""
"For numeric fields (:class:`~openerp.fields.Integer`, "
":class:`~openerp.fields.Float`) the value should be of the corresponding "
"type"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.write:18
msgid ""
"For :class:`~openerp.fields.Boolean`, the value should be a "
":class:`python:bool`"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.write:20
msgid ""
"For :class:`~openerp.fields.Selection`, the value should match the selection"
" values (generally :class:`python:str`, sometimes :class:`python:int`)"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.write:23
msgid ""
"For :class:`~openerp.fields.Many2one`, the value should be the database "
"identifier of the record to set"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.write:25
msgid "Other non-relational fields use a string for value"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.write:29
msgid ""
"for historical and compatibility reasons, :class:`~openerp.fields.Date` and "
":class:`~openerp.fields.Datetime` fields use strings as values (written and "
"read) rather than :class:`~python:datetime.date` or "
":class:`~python:datetime.datetime`. These date strings are UTC-only and "
"formatted according to "
":const:`openerp.tools.misc.DEFAULT_SERVER_DATE_FORMAT` and "
":const:`openerp.tools.misc.DEFAULT_SERVER_DATETIME_FORMAT`"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.write:39
msgid ""
":class:`~openerp.fields.One2many` and :class:`~openerp.fields.Many2many` use"
" a special \"commands\" format to manipulate the set of records stored "
"in/associated with the field."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.write:43
msgid ""
"This format is a list of triplets executed sequentially, where each triplet "
"is a command to execute on the set of records. Not all commands apply in all"
" situations. Possible commands are:"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.write:47
msgid "``(0, _, values)``"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.write:48
msgid "adds a new record created from the provided ``value`` dict."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.write:50
msgid "``(1, id, values)``"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.write:50
msgid ""
"updates an existing record of id ``id`` with the values in ``values``. Can "
"not be used in :meth:`~.create`."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.write:53
msgid "``(2, id, _)``"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.write:53
msgid ""
"removes the record of id ``id`` from the set, then deletes it (from the "
"database). Can not be used in :meth:`~.create`."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.write:58
msgid "``(3, id, _)``"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.write:56
msgid ""
"removes the record of id ``id`` from the set, but does not delete it. Can "
"not be used on :class:`~openerp.fields.One2many`. Can not be used in "
":meth:`~.create`."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.write:61
msgid "``(4, id, _)``"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.write:61
msgid ""
"adds an existing record of id ``id`` to the set. Can not be used on "
":class:`~openerp.fields.One2many`."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.write:66
msgid "``(5, _, _)``"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.write:64
msgid ""
"removes all records from the set, equivalent to using the command ``3`` on "
"every record explicitly. Can not be used on "
":class:`~openerp.fields.One2many`. Can not be used in :meth:`~.create`."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.write:72
msgid "``(6, _, ids)``"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.write:69
msgid ""
"replaces all existing records in the set by the ``ids`` list, equivalent to "
"using the command ``5`` followed by a command ``4`` for each ``id`` in "
"``ids``. Can not be used on :class:`~openerp.fields.One2many`."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.write:74
msgid ""
"Values marked as ``_`` in the list above are ignored and can be anything, "
"generally ``0`` or ``False``."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.read:1
msgid ""
"Reads the requested fields for the records in ``self``, low-level/RPC "
"method. In Python code, prefer :meth:`~.browse`."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.read:4
msgid "list of field names to return (default is all fields)"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.read:5
msgid ""
"a list of dictionaries mapping field names to their values, with one "
"dictionary per record"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.read:7
msgid "if user has no read rights on some of the given records"
msgstr ""

#: ../../reference/orm.rst:644
msgid "Research"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.search:1
msgid ""
"Searches for records based on the ``args`` :ref:`search domain "
"<reference/orm/domains>`."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.search:4
msgid ""
":ref:`A search domain <reference/orm/domains>`. Use an empty list to match "
"all records."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.search:6
msgid "number of results to ignore (default: none)"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.search:7
msgid "maximum number of records to return (default: all)"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.search:8
msgid "sort string"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.search:9
msgid ""
"if True, only counts and returns the number of matching records (default: "
"False)"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.search:10
msgid "at most ``limit`` records matching the search criteria"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.search:12
msgid ""
"* if user tries to bypass access rules for read on the requested object."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.search:12
msgid "if user tries to bypass access rules for read on the requested object."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.search_count:1
msgid ""
"Returns the number of records in the current model matching :ref:`the "
"provided domain <reference/orm/domains>`."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.name_search:1
msgid ""
"Search for records that have a display name matching the given ``name`` "
"pattern when compared with the given ``operator``, while also matching the "
"optional search domain (``args``)."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.name_search:5
msgid ""
"This is used for example to provide suggestions based on a partial value for"
" a relational field. Sometimes be seen as the inverse function of "
":meth:`~.name_get`, but it is not guaranteed to be."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.name_search:9
msgid ""
"This method is equivalent to calling :meth:`~.search` with a search domain "
"based on ``display_name`` and then :meth:`~.name_get` on the result of the "
"search."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.name_search:13
msgid "the name pattern to match"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.name_search:14
msgid ""
"optional search domain (see :meth:`~.search` for syntax), specifying further"
" restrictions"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.name_search:16
msgid "domain operator for matching ``name``, such as ``'like'`` or ``'='``."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.name_search:18
msgid "optional max number of records to return"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.name_search:20
msgid "list of pairs ``(id, text_repr)`` for all matching records."
msgstr ""

#: ../../reference/orm.rst:650
msgid "Recordset operations"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.ids:1
msgid ""
"List of actual record ids in this recordset (ignores placeholder ids for "
"records to create)"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.ensure_one:1
msgid ""
"Verifies that the current recorset holds a single record. Raises an "
"exception otherwise."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.exists:1
msgid ""
"Returns the subset of records in ``self`` that exist, and marks deleted "
"records as such in cache. It can be used as a test on records::"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.exists:7
msgid "By convention, new records are returned as existing."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.filtered:1
msgid ""
"Select the records in ``self`` such that ``func(rec)`` is true, and return "
"them as a recordset."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.filtered:4
#: ../../../openerp/models.pydocstring of openerp.models.Model.mapped:5
msgid "a function or a dot-separated sequence of field names"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.sorted:1
msgid "Return the recordset ``self`` ordered by ``key``."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.sorted:3
msgid ""
"either a function of one argument that returns a comparison key for each "
"record, or ``None``, in which case records are ordered according the default"
" model's order"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.sorted:7
msgid "if ``True``, return the result in reverse order"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.mapped:1
msgid ""
"Apply ``func`` on all records in ``self``, and return the result as a list "
"or a recordset (if ``func`` return recordsets). In the latter case, the "
"order of the returned recordset is arbitrary."
msgstr ""

#: ../../reference/orm.rst:659
msgid "Environment swapping"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.sudo:1
msgid "Returns a new version of this recordset attached to the provided user."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.with_context:1
msgid ""
"Returns a new version of this recordset attached to an extended context."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.with_context:4
msgid ""
"The extended context is either the provided ``context`` in which "
"``overrides`` are merged or the *current* context in which ``overrides`` are"
" merged e.g.::"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.with_env:1
msgid ""
"Returns a new version of this recordset attached to the provided environment"
msgstr ""

#: ../../reference/orm.rst:665
msgid "Fields and views querying"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.fields_get:1
msgid "Return the definition of each field."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.fields_get:3
msgid ""
"The returned value is a dictionary (indiced by field name) of dictionaries. "
"The _inherits'd fields are included. The string, help, and selection (if "
"present) attributes are translated."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.fields_get:7
msgid "list of fields to document, all if empty or not provided"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.fields_get:8
msgid ""
"list of description attributes to return for each field, all if empty or not"
" provided"
msgstr ""

#: ../../../openerp/models.pydocstring of
#: openerp.models.Model.fields_view_get:1
msgid ""
"Get the detailed composition of the requested view like fields, model, view "
"architecture"
msgstr ""

#: ../../../openerp/models.pydocstring of
#: openerp.models.Model.fields_view_get:3
msgid "id of the view or None"
msgstr ""

#: ../../../openerp/models.pydocstring of
#: openerp.models.Model.fields_view_get:4
msgid "type of the view to return if view_id is None ('form', 'tree', ...)"
msgstr ""

#: ../../../openerp/models.pydocstring of
#: openerp.models.Model.fields_view_get:5
msgid "true to include contextual actions"
msgstr ""

#: ../../../openerp/models.pydocstring of
#: openerp.models.Model.fields_view_get:6
msgid "deprecated"
msgstr ""

#: ../../../openerp/models.pydocstring of
#: openerp.models.Model.fields_view_get:7
msgid ""
"dictionary describing the composition of the requested view (including "
"inherited views and extensions)"
msgstr ""

#: ../../../openerp/models.pydocstring of
#: openerp.models.Model.fields_view_get:8
msgid ""
"* if the inherited view has unknown position to work with other than "
"'before', 'after', 'inside', 'replace' * if some tag other than 'position' "
"is found in parent view"
msgstr ""

#: ../../../openerp/models.pydocstring of
#: openerp.models.Model.fields_view_get:9
msgid ""
"if the inherited view has unknown position to work with other than 'before',"
" 'after', 'inside', 'replace'"
msgstr ""

#: ../../../openerp/models.pydocstring of
#: openerp.models.Model.fields_view_get:10
msgid "if some tag other than 'position' is found in parent view"
msgstr ""

#: ../../../openerp/models.pydocstring of
#: openerp.models.Model.fields_view_get:11
msgid ""
"if there is view type other than form, tree, calendar, search etc defined on"
" the structure"
msgstr ""

#: ../../reference/orm.rst:670
msgid "???"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.default_get:1
msgid ""
"Return default values for the fields in ``fields_list``. Default values are "
"determined by the context, user defaults, and the model itself."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.default_get:5
msgid "a list of field names"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.default_get:6
msgid ""
"a dictionary mapping each field name to its corresponding default value, if "
"it has one."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.copy:1
msgid "Duplicate record with given id updating it with default values"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.copy:3
msgid ""
"dictionary of field values to override in the original values of the copied "
"record, e.g: ``{'field_name': overridden_value, ...}``"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.copy:5
msgid "new record"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.name_get:1
msgid ""
"Returns a textual representation for the records in ``self``. By default "
"this is the value of the ``display_name`` field."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.name_get:4
msgid "list of pairs ``(id, text_repr)`` for each records"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.name_create:1
msgid ""
"Create a new record by calling :meth:`~.create` with only one value "
"provided: the display name of the new record."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.name_create:4
msgid ""
"The new record will be initialized with any default values applicable to "
"this model, or provided through the context. The usual behavior of "
":meth:`~.create` applies."
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.name_create:8
msgid "display name of the record to create"
msgstr ""

#: ../../../openerp/models.pydocstring of openerp.models.Model.name_create:10
msgid "the :meth:`~.name_get` pair value of the created record"
msgstr ""

#: ../../reference/orm.rst:679
msgid "Automatic fields"
msgstr ""

#: ../../reference/orm.rst:682
msgid "Identifier :class:`field <openerp.fields.Field>`"
msgstr ""

#: ../../reference/orm.rst:686
msgid ""
"Whether log access fields (``create_date``, ``write_uid``, ...) should be "
"generated (default: ``True``)"
msgstr ""

#: ../../reference/orm.rst:691
msgid "Date at which the record was created"
msgstr ""

#: ../../reference/orm.rst:693 ../../reference/orm.rst:705
msgid ":class:`~openerp.field.Datetime`"
msgstr ""

#: ../../reference/orm.rst:697
msgid "Relational field to the user who created the record"
msgstr ""

#: ../../reference/orm.rst:699 ../../reference/orm.rst:711
msgid "``res.users``"
msgstr ""

#: ../../reference/orm.rst:703
msgid "Date at which the record was last modified"
msgstr ""

#: ../../reference/orm.rst:709
msgid "Relational field to the last user who modified the record"
msgstr ""

#: ../../reference/orm.rst:714
msgid "Reserved field names"
msgstr ""

#: ../../reference/orm.rst:715
msgid ""
"A few field names are reserved for pre-defined behaviors beyond that of "
"automated fields. They should be defined on a model when the related "
"behavior is desired:"
msgstr ""

#: ../../reference/orm.rst:721
msgid ""
"default value for :attr:`~._rec_name`, used to display records in context "
"where a representative \"naming\" is necessary."
msgstr ""

#: ../../reference/orm.rst:725
msgid ":class:`~openerp.fields.Char`"
msgstr ""

#: ../../reference/orm.rst:729
msgid ""
"toggles the global visibility of the record, if ``active`` is set to "
"``False`` the record is invisible in most searches and listing"
msgstr ""

#: ../../reference/orm.rst:732
msgid ":class:`~openerp.fields.Boolean`"
msgstr ""

#: ../../reference/orm.rst:736
msgid ""
"Alterable ordering criteria, allows drag-and-drop reordering of models in "
"list views"
msgstr ""

#: ../../reference/orm.rst:739
msgid ":class:`~openerp.fields.Integer`"
msgstr ""

#: ../../reference/orm.rst:743
msgid ""
"lifecycle stages of the object, used by the ``states`` attribute on "
":class:`fields <openerp.fields.Field>`"
msgstr ""

#: ../../reference/orm.rst:746
msgid ":class:`~openerp.fields.Selection`"
msgstr ""

#: ../../reference/orm.rst:750
msgid ""
"used to order records in a tree structure and enables the ``child_of`` "
"operator in domains"
msgstr ""

#: ../../reference/orm.rst:753
msgid ":class:`~openerp.fields.Many2one`"
msgstr ""

#: ../../reference/orm.rst:757
msgid "used with :attr:`~._parent_store`, allows faster tree structure access"
msgstr ""

#: ../../reference/orm.rst:761
msgid "see :attr:`~.parent_left`"
msgstr ""

#: ../../reference/orm.rst:766
msgid "Method decorators"
msgstr ""

#: ../../../openerp/api.pydocstring of openerp.api:1
msgid ""
"This module provides the elements for managing two different API styles, "
"namely the \"traditional\" and \"record\" styles."
msgstr ""

#: ../../../openerp/api.pydocstring of openerp.api:4
msgid ""
"In the \"traditional\" style, parameters like the database cursor, user id, "
"context dictionary and record ids (usually denoted as ``cr``, ``uid``, "
"``context``, ``ids``) are passed explicitly to all methods. In the "
"\"record\" style, those parameters are hidden into model instances, which "
"gives it a more object-oriented feel."
msgstr ""

#: ../../../openerp/api.pydocstring of openerp.api:10
msgid "For instance, the statements::"
msgstr ""

#: ../../../openerp/api.pydocstring of openerp.api:18
msgid "may also be written as::"
msgstr ""

#: ../../../openerp/api.pydocstring of openerp.api:27
msgid ""
"Methods written in the \"traditional\" style are automatically decorated, "
"following some heuristics based on parameter names."
msgstr ""

#: ../../../openerp/api.pydocstring of openerp.api.one:1
msgid ""
"Decorate a record-style method where ``self`` is expected to be a singleton "
"instance. The decorated method automatically loops on records, and makes a "
"list with the results. In case the method is decorated with :func:`returns`,"
" it concatenates the resulting instances. Such a method::"
msgstr ""

#: ../../../openerp/api.pydocstring of openerp.api.one:11
#: ../../../openerp/api.pydocstring of openerp.api.multi:8
#: ../../../openerp/api.pydocstring of openerp.api.model:8
msgid "may be called in both record and traditional styles, like::"
msgstr ""

#: ../../../openerp/api.pydocstring of openerp.api.multi:1
msgid ""
"Decorate a record-style method where ``self`` is a recordset. The method "
"typically defines an operation on records. Such a method::"
msgstr ""

#: ../../../openerp/api.pydocstring of openerp.api.model:1
msgid ""
"Decorate a record-style method where ``self`` is a recordset, but its "
"contents is not relevant, only the model is. Such a method::"
msgstr ""

#: ../../../openerp/api.pydocstring of openerp.api.model:15
msgid ""
"Notice that no ``ids`` are passed to the method in the traditional style."
msgstr ""

#: ../../../openerp/api.pydocstring of openerp.api.depends:1
msgid ""
"Return a decorator that specifies the field dependencies of a \"compute\" "
"method (for new-style function fields). Each argument must be a string that "
"consists in a dot-separated sequence of field names::"
msgstr ""

#: ../../../openerp/api.pydocstring of openerp.api.depends:15
msgid ""
"One may also pass a single function as argument. In that case, the "
"dependencies are given by calling the function with the field's model."
msgstr ""

#: ../../../openerp/api.pydocstring of openerp.api.constrains:1
msgid ""
"Decorates a constraint checker. Each argument must be a field name used in "
"the check::"
msgstr ""

#: ../../../openerp/api.pydocstring of openerp.api.constrains:10
msgid ""
"Invoked on the records on which one of the named fields has been modified."
msgstr ""

#: ../../../openerp/api.pydocstring of openerp.api.constrains:12
msgid ""
"Should raise :class:`~openerp.exceptions.ValidationError` if the validation "
"failed."
msgstr ""

#: ../../../openerp/api.pydocstring of openerp.api.onchange:1
msgid ""
"Return a decorator to decorate an onchange method for given fields. Each "
"argument must be a field name::"
msgstr ""

#: ../../../openerp/api.pydocstring of openerp.api.onchange:8
msgid ""
"In the form views where the field appears, the method will be called when "
"one of the given fields is modified. The method is invoked on a pseudo-"
"record that contains the values present in the form. Field assignments on "
"that record are automatically sent back to the client."
msgstr ""

#: ../../../openerp/api.pydocstring of openerp.api.returns:1
msgid "Return a decorator for methods that return instances of ``model``."
msgstr ""

#: ../../../openerp/api.pydocstring of openerp.api.returns:3
msgid "a model name, or ``'self'`` for the current model"
msgstr ""

#: ../../../openerp/api.pydocstring of openerp.api.returns:5
msgid ""
"a function ``downgrade(value)`` to convert the record-style ``value`` to a "
"traditional-style output"
msgstr ""

#: ../../../openerp/api.pydocstring of openerp.api.returns:8
msgid ""
"The decorator adapts the method output to the api style: ``id``, ``ids`` or "
"``False`` for the traditional style, and recordset for the record style::"
msgstr ""

#: ../../../openerp/api.pydocstring of openerp.api.returns:22
msgid "Note that the decorated method must satisfy that convention."
msgstr ""

#: ../../../openerp/api.pydocstring of openerp.api.returns:24
msgid ""
"Those decorators are automatically *inherited*: a method that overrides a "
"decorated existing method will be decorated with the same "
"``@returns(model)``."
msgstr ""

#: ../../../openerp/api.pydocstring of openerp.api.v7:1
msgid ""
"Decorate a method that supports the old-style api only. A new-style api may "
"be provided by redefining a method with the same name and decorated with "
":func:`~.v8`::"
msgstr ""

#: ../../../openerp/api.pydocstring of openerp.api.v7:13
#: ../../../openerp/api.pydocstring of openerp.api.v8:13
msgid "Note that the wrapper method uses the docstring of the first method."
msgstr ""

#: ../../../openerp/api.pydocstring of openerp.api.v8:1
msgid ""
"Decorate a method that supports the new-style api only. An old-style api may"
" be provided by redefining a method with the same name and decorated with "
":func:`~.v7`::"
msgstr ""

#: ../../reference/orm.rst:775
msgid "Fields"
msgstr ""

#: ../../reference/orm.rst:780
msgid "Basic fields"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:1
msgid ""
"The field descriptor contains the field definition, and manages accesses and"
" assignments of the corresponding field on records. The following attributes"
" may be provided when instanciating a field:"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:5
msgid ""
"the label of the field seen by users (string); if not set, the ORM takes the"
" field name in the class (capitalized)."
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:8
msgid "the tooltip of the field seen by users (string)"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:10
msgid "whether the field is readonly (boolean, by default ``False``)"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:12
msgid ""
"whether the value of the field is required (boolean, by default ``False``)"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:15
msgid ""
"whether the field is indexed in database (boolean, by default ``False``)"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:18
msgid ""
"the default value for the field; this is either a static value, or a "
"function taking a recordset and returning a value"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:21
msgid ""
"a dictionary mapping state values to lists of UI attribute-value pairs; "
"possible attributes are: 'readonly', 'required', 'invisible'. Note: Any "
"state-based condition requires the ``state`` field value to be available on "
"the client-side UI. This is typically done by including it in the relevant "
"views, possibly made invisible if not relevant for the end-user."
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:28
msgid ""
"comma-separated list of group xml ids (string); this restricts the field "
"access to the users of the given groups only"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:31
msgid ""
"whether the field value should be copied when the record is duplicated "
"(default: ``True`` for normal fields, ``False`` for ``one2many`` and "
"computed fields, including property fields and related fields)"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:36
msgid ""
"the previous name of this field, so that ORM can rename it automatically at "
"migration"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:43
msgid ""
"One can define a field whose value is computed instead of simply being read "
"from the database. The attributes that are specific to computed fields are "
"given below. To define such a field, simply provide a value for the "
"attribute ``compute``."
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:48
msgid "name of a method that computes the field"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:50
msgid "name of a method that inverses the field (optional)"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:52
msgid "name of a method that implement search on the field (optional)"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:54
msgid ""
"whether the field is stored in database (boolean, by default ``False`` on "
"computed fields)"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:57
msgid ""
"whether the field should be recomputed as superuser to bypass access rights "
"(boolean, by default ``False``)"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:60
msgid ""
"The methods given for ``compute``, ``inverse`` and ``search`` are model "
"methods. Their signature is shown in the following example::"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:81
msgid ""
"The compute method has to assign the field on all records of the invoked "
"recordset. The decorator :meth:`openerp.api.depends` must be applied on the "
"compute method to specify the field dependencies; those dependencies are "
"used to determine when to recompute the field; recomputation is automatic "
"and guarantees cache/database consistency. Note that the same method can be "
"used for several fields, you simply have to assign all the given fields in "
"the method; the method will be invoked once for all those fields."
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:90
msgid ""
"By default, a computed field is not stored to the database, and is computed "
"on-the-fly. Adding the attribute ``store=True`` will store the field's "
"values in the database. The advantage of a stored field is that searching on"
" that field is done by the database itself. The disadvantage is that it "
"requires database updates when the field must be recomputed."
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:96
msgid ""
"The inverse method, as its name says, does the inverse of the compute "
"method: the invoked records have a value for the field, and you must apply "
"the necessary changes on the field dependencies such that the computation "
"gives the expected value. Note that a computed field without an inverse "
"method is readonly by default."
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:102
msgid ""
"The search method is invoked when processing domains before doing an actual "
"search on the model. It must return a domain equivalent to the condition: "
"``field operator value``."
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:110
msgid ""
"The value of a related field is given by following a sequence of relational "
"fields and reading a field on the reached model. The complete sequence of "
"fields to traverse is specified by the attribute"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:114
msgid "sequence of field names"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:116
msgid ""
"Some field attributes are automatically copied from the source field if they"
" are not redefined: ``string``, ``help``, ``readonly``, ``required`` (only "
"if all fields in the sequence are required), ``groups``, ``digits``, "
"``size``, ``translate``, ``sanitize``, ``selection``, ``comodel_name``, "
"``domain``, ``context``. All semantic-free attributes are copied from the "
"source field."
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:123
msgid ""
"By default, the values of related fields are not stored to the database. Add"
" the attribute ``store=True`` to make it stored, just like computed fields. "
"Related fields are automatically recomputed when their dependencies are "
"modified."
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:131
msgid "Company-dependent fields"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:132
msgid ""
"Formerly known as 'property' fields, the value of those fields depends on "
"the company. In other words, users that belong to different companies may "
"see different values for the field on a given record."
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:136
msgid "whether the field is company-dependent (boolean)"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:141
msgid "Incremental definition"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:142
msgid ""
"A field is defined as class attribute on a model class. If the model is "
"extended (see :class:`~openerp.models.Model`), one can also extend the field"
" definition by redefining a field with the same name and same type on the "
"subclass. In that case, the attributes of the field are taken from the "
"parent class and overridden by the ones given in subclasses."
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Field:149
msgid ""
"For instance, the second class below only adds a tooltip on the field "
"``state``::"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Char:1
#: ../../../openerp/fields.pydocstring of openerp.fields.Text:1
#: ../../../openerp/fields.pydocstring of openerp.fields.Html:1
msgid "Bases: :class:`openerp.fields._String`"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Char:1
msgid ""
"Basic string field, can be length-limited, usually displayed as a single-"
"line string in clients."
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Char:4
msgid "the maximum size of values stored for that field"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Char:6
#: ../../../openerp/fields.pydocstring of openerp.fields.Text:4
msgid ""
"enable the translation of the field's values; use `translate=True` to "
"translate field values as a whole; `translate` may also be a callable such "
"that `translate(callback, value)` translates `value` by using "
"`callback(term)` to retrieve the translation of terms."
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Boolean:1
#: ../../../openerp/fields.pydocstring of openerp.fields.Integer:1
#: ../../../openerp/fields.pydocstring of openerp.fields.Float:1
#: ../../../openerp/fields.pydocstring of openerp.fields.Selection:1
#: ../../../openerp/fields.pydocstring of openerp.fields.Date:1
#: ../../../openerp/fields.pydocstring of openerp.fields.Datetime:1
msgid "Bases: :class:`openerp.fields.Field`"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Float:1
msgid "The precision digits are given by the attribute"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Float:3
msgid ""
"a pair (total, decimal), or a function taking a database cursor and "
"returning a pair (total, decimal)"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Text:1
msgid ""
"Very similar to :class:`~.Char` but used for longer contents, does not have "
"a size and usually displayed as a multiline text box."
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Selection:1
msgid ""
"specifies the possible values for this field. It is given as either a list "
"of pairs (``value``, ``string``), or a model method, or a method name."
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Selection:4
msgid ""
"provides an extension of the selection in the case of an overridden field. "
"It is a list of pairs (``value``, ``string``)."
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Selection:7
msgid ""
"The attribute ``selection`` is mandatory except in the case of :ref:`related"
" fields <field-related>` or :ref:`field extensions <field-incremental-"
"definition>`."
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Date.context_today:1
msgid ""
"Return the current date as seen in the client's timezone in a format fit for"
" date fields. This method may be used to compute default values."
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Date.context_today:5
msgid ""
"optional datetime value to use instead of the current date and time (must be"
" a datetime, regular dates can't be converted between timezones.)"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Date.from_string:1
msgid "Convert an ORM ``value`` into a :class:`date` value."
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Date.to_string:1
msgid "Convert a :class:`date` value into the format expected by the ORM."
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Date.today:1
msgid ""
"Return the current day in the format expected by the ORM. This function may "
"be used to compute default values."
msgstr ""

#: ../../../openerp/fields.pydocstring of
#: openerp.fields.Datetime.context_timestamp:1
msgid ""
"Returns the given timestamp converted to the client's timezone. This method "
"is *not* meant for use as a _defaults initializer, because datetime fields "
"are automatically converted upon display on client side. For _defaults you "
":meth:`fields.datetime.now` should be used instead."
msgstr ""

#: ../../../openerp/fields.pydocstring of
#: openerp.fields.Datetime.context_timestamp:7
msgid ""
"naive datetime value (expressed in UTC) to be converted to the client "
"timezone"
msgstr ""

#: ../../../openerp/fields.pydocstring of
#: openerp.fields.Datetime.context_timestamp:10
msgid "timestamp converted to timezone-aware datetime in context timezone"
msgstr ""

#: ../../../openerp/fields.pydocstring of
#: openerp.fields.Datetime.from_string:1
msgid "Convert an ORM ``value`` into a :class:`datetime` value."
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Datetime.now:1
msgid ""
"Return the current day and time in the format expected by the ORM. This "
"function may be used to compute default values."
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Datetime.to_string:1
msgid "Convert a :class:`datetime` value into the format expected by the ORM."
msgstr ""

#: ../../reference/orm.rst:822
msgid "Relational fields"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Many2one:1
msgid "Bases: :class:`openerp.fields._Relational`"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Many2one:1
msgid ""
"The value of such a field is a recordset of size 0 (no record) or 1 (a "
"single record)."
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Many2one:4
#: ../../../openerp/fields.pydocstring of openerp.fields.One2many:5
#: ../../../openerp/fields.pydocstring of openerp.fields.Many2many:3
msgid "name of the target model (string)"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Many2one:6
#: ../../../openerp/fields.pydocstring of openerp.fields.One2many:10
#: ../../../openerp/fields.pydocstring of openerp.fields.Many2many:21
msgid ""
"an optional domain to set on candidate values on the client side (domain or "
"string)"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Many2one:9
#: ../../../openerp/fields.pydocstring of openerp.fields.One2many:13
#: ../../../openerp/fields.pydocstring of openerp.fields.Many2many:24
msgid ""
"an optional context to use on the client side when handling that field "
"(dictionary)"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Many2one:12
msgid ""
"what to do when the referred record is deleted; possible values are: ``'set "
"null'``, ``'restrict'``, ``'cascade'``"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Many2one:15
#: ../../../openerp/fields.pydocstring of openerp.fields.One2many:16
msgid ""
"whether JOINs are generated upon search through that field (boolean, by "
"default ``False``)"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Many2one:18
msgid ""
"set it to ``True`` to make fields of the target model accessible from the "
"current model (corresponds to ``_inherits``)"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Many2one:21
#: ../../../openerp/fields.pydocstring of openerp.fields.Many2many:5
msgid ""
"The attribute ``comodel_name`` is mandatory except in the case of related "
"fields or field extensions."
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.One2many:1
#: ../../../openerp/fields.pydocstring of openerp.fields.Many2many:1
msgid "Bases: :class:`openerp.fields._RelationalMulti`"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.One2many:1
msgid ""
"One2many field; the value of such a field is the recordset of all the "
"records in ``comodel_name`` such that the field ``inverse_name`` is equal to"
" the current record."
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.One2many:7
msgid "name of the inverse ``Many2one`` field in ``comodel_name`` (string)"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.One2many:19
#: ../../../openerp/fields.pydocstring of openerp.fields.Many2many:27
msgid "optional limit to use upon read (integer)"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.One2many:21
msgid ""
"The attributes ``comodel_name`` and ``inverse_name`` are mandatory except in"
" the case of related fields or field extensions."
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Many2many:1
msgid "Many2many field; the value of such a field is the recordset."
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Many2many:8
msgid ""
"optional name of the table that stores the relation in the database (string)"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Many2many:11
msgid ""
"optional name of the column referring to \"these\" records in the table "
"``relation`` (string)"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Many2many:14
msgid ""
"optional name of the column referring to \"those\" records in the table "
"``relation`` (string)"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Many2many:17
msgid ""
"The attributes ``relation``, ``column1`` and ``column2`` are optional. If "
"not given, names are automatically generated from model names, provided "
"``model_name`` and ``comodel_name`` are different!"
msgstr ""

#: ../../../openerp/fields.pydocstring of openerp.fields.Reference:1
msgid "Bases: :class:`openerp.fields.Selection`"
msgstr ""

#: ../../reference/orm.rst:839
msgid "Inheritance and extension"
msgstr ""

#: ../../reference/orm.rst:841
msgid ""
"Odoo provides three different mechanisms to extend models in a modular way:"
msgstr ""

#: ../../reference/orm.rst:843
msgid ""
"creating a new model from an existing one, adding new information to the "
"copy but leaving the original module as-is"
msgstr ""

#: ../../reference/orm.rst:845
msgid ""
"extending models defined in other modules in-place, replacing the previous "
"version"
msgstr ""

#: ../../reference/orm.rst:847
msgid "delegating some of the model's fields to records it contains"
msgstr ""

#: ../../reference/orm.rst:853
msgid "Classical inheritance"
msgstr ""

#: ../../reference/orm.rst:855
msgid ""
"When using the :attr:`~openerp.models.Model._inherit` and "
":attr:`~openerp.models.Model._name` attributes together, Odoo creates a new "
"model using the existing one (provided via "
":attr:`~openerp.models.Model._inherit`) as a base. The new model gets all "
"the fields, methods and meta-information (defaults & al) from its base."
msgstr ""

#: ../../reference/orm.rst:865
msgid "and using them:"
msgstr ""

#: ../../reference/orm.rst:871 ../../reference/orm.rst:898
msgid "will yield:"
msgstr ""

#: ../../reference/orm.rst:877
msgid ""
"the second model has inherited from the first model's ``check`` method and "
"its ``name`` field, but overridden the ``call`` method, as when using "
"standard :ref:`Python inheritance <python:tut-inheritance>`."
msgstr ""

#: ../../reference/orm.rst:882
msgid "Extension"
msgstr ""

#: ../../reference/orm.rst:884
msgid ""
"When using :attr:`~openerp.models.Model._inherit` but leaving out "
":attr:`~openerp.models.Model._name`, the new model replaces the existing "
"one, essentially extending it in-place. This is useful to add new fields or "
"methods to existing models (created in other modules), or to customize or "
"reconfigure them (e.g. to change their default sort order):"
msgstr ""

#: ../../reference/orm.rst:904
msgid ""
"it will also yield the various :ref:`automatic fields "
"<reference/orm/model/automatic>` unless they've been disabled"
msgstr ""

#: ../../reference/orm.rst:908
msgid "Delegation"
msgstr ""

#: ../../reference/orm.rst:910
msgid ""
"The third inheritance mechanism provides more flexibility (it can be altered"
" at runtime) but less power: using the "
":attr:`~openerp.models.Model._inherits` a model *delegates* the lookup of "
"any field not found on the current model to \"children\" models. The "
"delegation is performed via :class:`~openerp.fields.Reference` fields "
"automatically set up on the parent model:"
msgstr ""

#: ../../reference/orm.rst:925
msgid "will result in:"
msgstr ""

#: ../../reference/orm.rst:931
msgid "and it's possible to write directly on the delegated field:"
msgstr ""

#: ../../reference/orm.rst:937
msgid ""
"when using delegation inheritance, methods are *not* inherited, only fields"
msgstr ""

#: ../../reference/orm.rst:943
msgid "Domains"
msgstr ""

#: ../../reference/orm.rst:945
msgid ""
"A domain is a list of criteria, each criterion being a triple (either a "
"``list`` or a ``tuple``) of ``(field_name, operator, value)`` where:"
msgstr ""

#: ../../reference/orm.rst:950
msgid "``field_name`` (``str``)"
msgstr ""

#: ../../reference/orm.rst:949
msgid ""
"a field name of the current model, or a relationship traversal through a "
":class:`~openerp.fields.Many2one` using dot-notation e.g. ``'street'`` or "
"``'partner_id.country'``"
msgstr ""

#: ../../reference/orm.rst:996
msgid "``operator`` (``str``)"
msgstr ""

#: ../../reference/orm.rst:953
msgid ""
"an operator used to compare the ``field_name`` with the ``value``. Valid "
"operators are:"
msgstr ""

#: ../../reference/orm.rst:956
msgid "``=``"
msgstr ""

#: ../../reference/orm.rst:957
msgid "equals to"
msgstr ""

#: ../../reference/orm.rst:958
msgid "``!=``"
msgstr ""

#: ../../reference/orm.rst:959
msgid "not equals to"
msgstr ""

#: ../../reference/orm.rst:960
msgid "``>``"
msgstr ""

#: ../../reference/orm.rst:961
msgid "greater than"
msgstr ""

#: ../../reference/orm.rst:962
msgid "``>=``"
msgstr ""

#: ../../reference/orm.rst:963
msgid "greater than or equal to"
msgstr ""

#: ../../reference/orm.rst:964
msgid "``<``"
msgstr ""

#: ../../reference/orm.rst:965
msgid "less than"
msgstr ""

#: ../../reference/orm.rst:966
msgid "``<=``"
msgstr ""

#: ../../reference/orm.rst:967
msgid "less than or equal to"
msgstr ""

#: ../../reference/orm.rst:969
msgid "``=?``"
msgstr ""

#: ../../reference/orm.rst:969
msgid ""
"unset or equals to (returns true if ``value`` is either ``None`` or "
"``False``, otherwise behaves like ``=``)"
msgstr ""

#: ../../reference/orm.rst:973
msgid "``=like``"
msgstr ""

#: ../../reference/orm.rst:972
msgid ""
"matches ``field_name`` against the ``value`` pattern. An underscore ``_`` in"
" the pattern stands for (matches) any single character; a percent sign ``%``"
" matches any string of zero or more characters."
msgstr ""

#: ../../reference/orm.rst:976
msgid "``like``"
msgstr ""

#: ../../reference/orm.rst:976
msgid ""
"matches ``field_name`` against the ``%value%`` pattern. Similar to ``=like``"
" but wraps ``value`` with '%' before matching"
msgstr ""

#: ../../reference/orm.rst:978
msgid "``not like``"
msgstr ""

#: ../../reference/orm.rst:979
msgid "doesn't match against the ``%value%`` pattern"
msgstr ""

#: ../../reference/orm.rst:980
msgid "``ilike``"
msgstr ""

#: ../../reference/orm.rst:981
msgid "case insensitive ``like``"
msgstr ""

#: ../../reference/orm.rst:982
msgid "``not ilike``"
msgstr ""

#: ../../reference/orm.rst:983
msgid "case insensitive ``not like``"
msgstr ""

#: ../../reference/orm.rst:984
msgid "``=ilike``"
msgstr ""

#: ../../reference/orm.rst:985
msgid "case insensitive ``=like``"
msgstr ""

#: ../../reference/orm.rst:987
msgid "``in``"
msgstr ""

#: ../../reference/orm.rst:987
msgid ""
"is equal to any of the items from ``value``, ``value`` should be a list of "
"items"
msgstr ""

#: ../../reference/orm.rst:989
msgid "``not in``"
msgstr ""

#: ../../reference/orm.rst:990
msgid "is unequal to all of the items from ``value``"
msgstr ""

#: ../../reference/orm.rst:996
msgid "``child_of``"
msgstr ""

#: ../../reference/orm.rst:992
msgid "is a child (descendant) of a ``value`` record."
msgstr ""

#: ../../reference/orm.rst:994
msgid ""
"Takes the semantics of the model into account (i.e following the "
"relationship field named by :attr:`~openerp.models.Model._parent_name`)."
msgstr ""

#: ../../reference/orm.rst:999
msgid ""
"variable type, must be comparable (through ``operator``) to the named field"
msgstr ""

#: ../../reference/orm.rst:1002
msgid ""
"Domain criteria can be combined using logical operators in *prefix* form:"
msgstr ""

#: ../../reference/orm.rst:1005
msgid "``'&'``"
msgstr ""

#: ../../reference/orm.rst:1005
msgid ""
"logical *AND*, default operation to combine criteria following one another. "
"Arity 2 (uses the next 2 criteria or combinations)."
msgstr ""

#: ../../reference/orm.rst:1007
msgid "``'|'``"
msgstr ""

#: ../../reference/orm.rst:1008
msgid "logical *OR*, arity 2."
msgstr ""

#: ../../reference/orm.rst:1016
msgid "``'!'``"
msgstr ""

#: ../../reference/orm.rst:1010
msgid "logical *NOT*, arity 1."
msgstr ""

#: ../../reference/orm.rst:1012
msgid "Mostly to negate combinations of criteria"
msgstr ""

#: ../../reference/orm.rst:1015
msgid ""
"Individual criterion generally have a negative form (e.g. ``=`` -> ``!=``, "
"``<`` -> ``>=``) which is simpler than negating the positive."
msgstr ""

#: ../../reference/orm.rst:1018
msgid "Example"
msgstr ""

#: ../../reference/orm.rst:1020
msgid ""
"To search for partners named *ABC*, from belgium or germany, whose language "
"is not english::"
msgstr ""

#: ../../reference/orm.rst:1028
msgid "This domain is interpreted as:"
msgstr ""

#: ../../reference/orm.rst:1037
msgid "Porting from the old API to the new API"
msgstr ""

#: ../../reference/orm.rst:1039
msgid ""
"bare lists of ids are to be avoided in the new API, use recordsets instead"
msgstr ""

#: ../../reference/orm.rst:1040
msgid ""
"methods still written in the old API should be automatically bridged by the "
"ORM, no need to switch to the old API, just call them as if they were a new "
"API method. See :ref:`reference/orm/oldapi/bridging` for more details."
msgstr ""

#: ../../reference/orm.rst:1043
msgid ""
":meth:`~openerp.models.Model.search` returns a recordset, no point in e.g. "
"browsing its result"
msgstr ""

#: ../../reference/orm.rst:1045
msgid ""
"``fields.related`` and ``fields.function`` are replaced by using a normal "
"field type with either a ``related=`` or a ``compute=`` parameter"
msgstr ""

#: ../../reference/orm.rst:1047
msgid ""
":func:`~openerp.api.depends` on ``compute=`` methods **must be complete**, "
"it must list **all** the fields and sub-fields which the compute method "
"uses. It is better to have too many dependencies (will recompute the field "
"in cases where that is not needed) than not enough (will forget to recompute"
" the field and then values will be incorrect)"
msgstr ""

#: ../../reference/orm.rst:1052
msgid ""
"**remove** all ``onchange`` methods on computed fields. Computed fields are "
"automatically re-computed when one of their dependencies is changed, and "
"that is used to auto-generate ``onchange`` by the client"
msgstr ""

#: ../../reference/orm.rst:1055
msgid ""
"the decorators :func:`~openerp.api.model` and :func:`~openerp.api.multi` are"
" for bridging *when calling from the old API context*, for internal or pure "
"new-api (e.g. compute) they are useless"
msgstr ""

#: ../../reference/orm.rst:1058
msgid ""
"remove :attr:`~openerp.models.Model._default`, replace by ``default=`` "
"parameter on corresponding fields"
msgstr ""

#: ../../reference/orm.rst:1060
msgid "if a field's ``string=`` is the titlecased version of the field name::"
msgstr ""

#: ../../reference/orm.rst:1064
msgid "it is useless and should be removed"
msgstr ""

#: ../../reference/orm.rst:1065
msgid ""
"the ``multi=`` parameter does not do anything on new API fields use the same"
" ``compute=`` methods on all relevant fields for the same result"
msgstr ""

#: ../../reference/orm.rst:1067
msgid ""
"provide ``compute=``, ``inverse=`` and ``search=`` methods by name (as a "
"string), this makes them overridable (removes the need for an intermediate "
"\"trampoline\" function)"
msgstr ""

#: ../../reference/orm.rst:1070
msgid ""
"double check that all fields and methods have different names, there is no "
"warning in case of collision (because Python handles it before Odoo sees "
"anything)"
msgstr ""

#: ../../reference/orm.rst:1073
msgid ""
"the normal new-api import is ``from openerp import fields, models``. If "
"compatibility decorators are necessary, use ``from openerp import api, "
"fields, models``"
msgstr ""

#: ../../reference/orm.rst:1076
msgid ""
"avoid the :func:`~openerp.api.one` decorator, it probably does not do what "
"you expect"
msgstr ""

#: ../../reference/orm.rst:1078
msgid ""
"remove explicit definition of :attr:`~openerp.models.Model.create_uid`, "
":attr:`~openerp.models.Model.create_date`, "
":attr:`~openerp.models.Model.write_uid` and "
":attr:`~openerp.models.Model.write_date` fields: they are now created as "
"regular \"legitimate\" fields, and can be read and written like any other "
"field out-of-the-box"
msgstr ""

#: ../../reference/orm.rst:1084
msgid ""
"when straight conversion is impossible (semantics can not be bridged) or the"
" \"old API\" version is not desirable and could be improved for the new API,"
" it is possible to use completely different \"old API\" and \"new API\" "
"implementations for the same method name using :func:`~openerp.api.v7` and "
":func:`~openerp.api.v8`. The method should first be defined using the old-"
"API style and decorated with :func:`~openerp.api.v7`, it should then be re-"
"defined using the exact same name but the new-API style and decorated with "
":func:`~openerp.api.v8`. Calls from an old-API context will be dispatched to"
" the first implementation and calls from a new-API context will be "
"dispatched to the second implementation. One implementation can call (and "
"frequently does) call the other by switching context."
msgstr ""

#: ../../reference/orm.rst:1096
msgid ""
"using these decorators makes methods extremely difficult to override and "
"harder to understand and document"
msgstr ""

#: ../../reference/orm.rst:1098
msgid ""
"uses of :attr:`~openerp.models.Model._columns` or "
":attr:`~openerp.models.Model._all_columns` should be replaced by "
":attr:`~openerp.models.Model._fields`, which provides access to instances of"
" new-style :class:`openerp.fields.Field` instances (rather than old-style "
":class:`openerp.osv.fields._column`)."
msgstr ""

#: ../../reference/orm.rst:1104
msgid ""
"Non-stored computed fields created using the new API style are *not* "
"available in :attr:`~openerp.models.Model._columns` and can only be "
"inspected through :attr:`~openerp.models.Model._fields`"
msgstr ""

#: ../../reference/orm.rst:1107
msgid ""
"reassigning ``self`` in a method is probably unnecessary and may break "
"translation introspection"
msgstr ""

#: ../../reference/orm.rst:1109
msgid ""
":class:`~openerp.api.Environment` objects rely on some threadlocal state, "
"which has to be set up before using them. It is necessary to do so using the"
" :meth:`openerp.api.Environment.manage` context manager when trying to use "
"the new API in contexts where it hasn't been set up yet, such as new threads"
" or a Python interactive environment::"
msgstr ""

#: ../../reference/orm.rst:1131
msgid "Automatic bridging of old API methods"
msgstr ""

#: ../../reference/orm.rst:1133
msgid ""
"When models are initialized, all methods are automatically scanned and "
"bridged if they look like models declared in the old API style. This "
"bridging makes them transparently callable from new-API-style methods."
msgstr ""

#: ../../reference/orm.rst:1137
msgid ""
"Methods are matched as \"old-API style\" if their second positional "
"parameter (after ``self``) is called either ``cr`` or ``cursor``. The system"
" also recognizes the third positional parameter being called ``uid`` or "
"``user`` and the fourth being called ``id`` or ``ids``. It also recognizes "
"the presence of any parameter called ``context``."
msgstr ""

#: ../../reference/orm.rst:1143
msgid ""
"When calling such methods from a new API context, the system will "
"automatically fill matched parameters from the current "
":class:`~openerp.api.Environment` (for :attr:`~openerp.api.Environment.cr`, "
":attr:`~openerp.api.Environment.user` and "
":attr:`~openerp.api.Environment.context`) or the current recordset (for "
"``id`` and ``ids``)."
msgstr ""

#: ../../reference/orm.rst:1150
msgid ""
"In the rare cases where it is necessary, the bridging can be customized by "
"decorating the old-style method:"
msgstr ""

#: ../../reference/orm.rst:1153
msgid ""
"disabling it entirely, by decorating a method with "
":func:`~openerp.api.noguess` there will be no bridging and methods will be "
"called the exact same way from the new and old API styles"
msgstr ""

#: ../../reference/orm.rst:1156
msgid ""
"defining the bridge explicitly, this is mostly for methods which are matched"
" incorrectly (because parameters are named in unexpected ways):"
msgstr ""

#: ../../reference/orm.rst:1160
msgid ":func:`~openerp.api.cr`"
msgstr ""

#: ../../reference/orm.rst:1160
msgid ""
"will automatically prepend the current cursor to explicitly provided "
"parameters, positionally"
msgstr ""

#: ../../reference/orm.rst:1163
msgid ":func:`~openerp.api.cr_uid`"
msgstr ""

#: ../../reference/orm.rst:1163
msgid ""
"will automatically prepend the current cursor and user's id to explictly "
"provided parameters"
msgstr ""

#: ../../reference/orm.rst:1166
msgid ":func:`~openerp.api.cr_uid_ids`"
msgstr ""

#: ../../reference/orm.rst:1166
msgid ""
"will automatically prepend the current cursor, user's id and recordset's ids"
" to explicitly provided parameters"
msgstr ""

#: ../../reference/orm.rst:1174
msgid ":func:`~openerp.api.cr_uid_id`"
msgstr ""

#: ../../reference/orm.rst:1169
msgid ""
"will loop over the current recordset and call the method once for each "
"record, prepending the current cursor, user's id and record's id to "
"explicitly provided parameters."
msgstr ""

#: ../../reference/orm.rst:1173
msgid ""
"the result of this wrapper is *always a list* when calling from a new-API "
"context"
msgstr ""

#: ../../reference/orm.rst:1176
msgid ""
"All of these methods have a ``_context``-suffixed version (e.g. "
":func:`~openerp.api.cr_uid_context`) which also passes the current context "
"*by keyword*."
msgstr ""

#: ../../reference/orm.rst:1179
msgid ""
"dual implementations using :func:`~openerp.api.v7` and "
":func:`~openerp.api.v8` will be ignored as they provide their own "
"\"bridging\""
msgstr ""

#: ../../reference/qweb.rst:9 ../../reference/views.rst:1220
msgid "QWeb"
msgstr ""

#: ../../reference/qweb.rst:11
msgid ""
"QWeb is the primary templating_ engine used by Odoo\\ [#othertemplates]_. It"
" is an XML templating engine\\ [#genshif]_ and used mostly to generate HTML_"
" fragments and pages."
msgstr ""

#: ../../reference/qweb.rst:15
msgid ""
"Template directives are specified as XML attributes prefixed with ``t-``, "
"for instance ``t-if`` for :ref:`reference/qweb/conditionals`, with elements "
"and other attributes being rendered directly."
msgstr ""

#: ../../reference/qweb.rst:19
msgid ""
"To avoid element rendering, a placeholder element ``<t>`` is also available,"
" which executes its directive but doesn't generate any output in and of "
"itself::"
msgstr ""

#: ../../reference/qweb.rst:27 ../../reference/qweb.rst:37
#: ../../reference/qweb.rst:311
msgid "will result in::"
msgstr ""

#: ../../reference/qweb.rst:31
msgid "if ``condition`` is true, but::"
msgstr ""

#: ../../reference/qweb.rst:46
msgid "data output"
msgstr ""

#: ../../reference/qweb.rst:48
msgid ""
"QWeb has a primary output directive which automatically HTML-escape its "
"content limiting XSS_ risks when displaying user-provided content: ``esc``."
msgstr ""

#: ../../reference/qweb.rst:51
msgid "``esc`` takes an expression, evaluates it and prints the content::"
msgstr ""

#: ../../reference/qweb.rst:55
msgid "rendered with the value ``value`` set to ``42`` yields::"
msgstr ""

#: ../../reference/qweb.rst:59
msgid ""
"There is one other output directive ``raw`` which behaves the same as "
"respectively ``esc`` but *does not HTML-escape its output*. It can be useful"
" to display separately constructed markup (e.g. from functions) or already "
"sanitized user-provided markup."
msgstr ""

#: ../../reference/qweb.rst:67
msgid "conditionals"
msgstr ""

#: ../../reference/qweb.rst:69
msgid ""
"QWeb has a conditional directive ``if``, which evaluates an expression given"
" as attribute value::"
msgstr ""

#: ../../reference/qweb.rst:78
msgid "The element is rendered if the condition is true::"
msgstr ""

#: ../../reference/qweb.rst:84
msgid "but if the condition is false it is removed from the result::"
msgstr ""

#: ../../reference/qweb.rst:89
msgid ""
"The conditional rendering applies to the bearer of the directive, which does"
" not have to be ``<t>``::"
msgstr ""

#: ../../reference/qweb.rst:96
msgid "will give the same results as the previous example."
msgstr ""

#: ../../reference/qweb.rst:101
msgid "loops"
msgstr ""

#: ../../reference/qweb.rst:103
msgid ""
"QWeb has an iteration directive ``foreach`` which take an expression "
"returning the collection to iterate on, and a second parameter ``t-as`` "
"providing the name to use for the \"current item\" of the iteration::"
msgstr ""

#: ../../reference/qweb.rst:111 ../../reference/qweb.rst:198
#: ../../reference/qweb.rst:210 ../../reference/qweb.rst:221
#: ../../reference/qweb.rst:231
msgid "will be rendered as::"
msgstr ""

#: ../../reference/qweb.rst:117
msgid ""
"Like conditions, ``foreach`` applies to the element bearing the directive's "
"attribute, and"
msgstr ""

#: ../../reference/qweb.rst:126
msgid "is equivalent to the previous example."
msgstr ""

#: ../../reference/qweb.rst:128
msgid ""
"``foreach`` can iterate on an array (the current item will be the current "
"value), a mapping (the current item will be the current key) or an integer "
"(equivalent to iterating on an array between 0 inclusive and the provided "
"integer exclusive)."
msgstr ""

#: ../../reference/qweb.rst:133
msgid ""
"In addition to the name passed via ``t-as``, ``foreach`` provides a few "
"other variables for various data points:"
msgstr ""

#: ../../reference/qweb.rst:136
msgid "``$as`` will be replaced by the name passed to ``t-as``"
msgstr ""

#: ../../reference/qweb.rst:138
msgid ":samp:`{$as}_all`"
msgstr ""

#: ../../reference/qweb.rst:139
msgid "the object being iterated over"
msgstr ""

#: ../../reference/qweb.rst:141
msgid ":samp:`{$as}_value`"
msgstr ""

#: ../../reference/qweb.rst:141
msgid ""
"the current iteration value, identical to ``$as`` for lists and integers, "
"but for mappings it provides the value (where ``$as`` provides the key)"
msgstr ""

#: ../../reference/qweb.rst:143
msgid ":samp:`{$as}_index`"
msgstr ""

#: ../../reference/qweb.rst:144
msgid ""
"the current iteration index (the first item of the iteration has index 0)"
msgstr ""

#: ../../reference/qweb.rst:145
msgid ":samp:`{$as}_size`"
msgstr ""

#: ../../reference/qweb.rst:146
msgid "the size of the collection if it is available"
msgstr ""

#: ../../reference/qweb.rst:148
msgid ":samp:`{$as}_first`"
msgstr ""

#: ../../reference/qweb.rst:148
msgid ""
"whether the current item is the first of the iteration (equivalent to "
":samp:`{$as}_index == 0`)"
msgstr ""

#: ../../reference/qweb.rst:152
msgid ":samp:`{$as}_last`"
msgstr ""

#: ../../reference/qweb.rst:151
msgid ""
"whether the current item is the last of the iteration (equivalent to "
":samp:`{$as}_index + 1 == {$as}_size`), requires the iteratee's size be "
"available"
msgstr ""

#: ../../reference/qweb.rst:154
msgid ":samp:`{$as}_parity`"
msgstr ""

#: ../../reference/qweb.rst:155
msgid "either ``\"even\"`` or ``\"odd\"``, the parity of the current iteration round"
msgstr ""

#: ../../reference/qweb.rst:157
msgid ":samp:`{$as}_even`"
msgstr ""

#: ../../reference/qweb.rst:157
msgid ""
"a boolean flag indicating that the current iteration round is on an even "
"index"
msgstr ""

#: ../../reference/qweb.rst:162
msgid ":samp:`{$as}_odd`"
msgstr ""

#: ../../reference/qweb.rst:160
msgid ""
"a boolean flag indicating that the current iteration round is on an odd "
"index"
msgstr ""

#: ../../reference/qweb.rst:164
msgid ""
"These extra variables provided and all new variables created into the "
"``foreach`` are only available in the scope of the``foreach``. If the "
"variable exists outside the context of the ``foreach``, the value is copied "
"at the end of the foreach into the global context."
msgstr ""

#: ../../reference/qweb.rst:186
msgid "attributes"
msgstr ""

#: ../../reference/qweb.rst:188
msgid ""
"QWeb can compute attributes on-the-fly and set the result of the computation"
" on the output node. This is done via the ``t-att`` (attribute) directive "
"which exists in 3 different forms:"
msgstr ""

#: ../../reference/qweb.rst:199
msgid ":samp:`t-att-{$name}`"
msgstr ""

#: ../../reference/qweb.rst:193
msgid ""
"an attribute called ``$name`` is created, the attribute value is evaluated "
"and the result is set as the attribute's value::"
msgstr ""

#: ../../reference/qweb.rst:213
msgid ":samp:`t-attf-{$name}`"
msgstr ""

#: ../../reference/qweb.rst:202
msgid ""
"same as previous, but the parameter is a :term:`format string` instead of "
"just an expression, often useful to mix literal and non-literal string (e.g."
" classes)::"
msgstr ""

#: ../../reference/qweb.rst:222
msgid ":samp:`t-att=mapping`"
msgstr ""

#: ../../reference/qweb.rst:216
msgid ""
"if the parameter is a mapping, each (key, value) pair generates a new "
"attribute and its value::"
msgstr ""

#: ../../reference/qweb.rst:233
msgid ":samp:`t-att=pair`"
msgstr ""

#: ../../reference/qweb.rst:225
msgid ""
"if the parameter is a pair (tuple or array of 2 element), the first item of "
"the pair is the name of the attribute and the second item is the value::"
msgstr ""

#: ../../reference/qweb.rst:236
msgid "setting variables"
msgstr ""

#: ../../reference/qweb.rst:238
msgid ""
"QWeb allows creating variables from within the template, to memoize a "
"computation (to use it multiple times), give a piece of data a clearer name,"
" ..."
msgstr ""

#: ../../reference/qweb.rst:242
msgid ""
"This is done via the ``set`` directive, which takes the name of the variable"
" to create. The value to set can be provided in two ways:"
msgstr ""

#: ../../reference/qweb.rst:245
msgid ""
"a ``t-value`` attribute containing an expression, and the result of its "
"evaluation will be set::"
msgstr ""

#: ../../reference/qweb.rst:251
msgid "will print ``3``"
msgstr ""

#: ../../reference/qweb.rst:252
msgid ""
"if there is no ``t-value`` attribute, the node's body is rendered and set as"
" the variable's value::"
msgstr ""

#: ../../reference/qweb.rst:260
msgid ""
"will generate ``&lt;li&gt;ok&lt;/li&gt;`` (the content is escaped as we used"
" the ``esc`` directive)"
msgstr ""

#: ../../reference/qweb.rst:263
msgid ""
"using the result of this operation is a significant use-case for the ``raw``"
" directive."
msgstr ""

#: ../../reference/qweb.rst:267
msgid "calling sub-templates"
msgstr ""

#: ../../reference/qweb.rst:269
msgid ""
"QWeb templates can be used for top-level rendering, but they can also be "
"used from within another template (to avoid duplication or give names to "
"parts of templates) using the ``t-call`` directive::"
msgstr ""

#: ../../reference/qweb.rst:275
msgid ""
"This calls the named template with the execution context of the parent, if "
"``other_template`` is defined as::"
msgstr ""

#: ../../reference/qweb.rst:280
msgid "the call above will be rendered as ``<p/>`` (no content), but::"
msgstr ""

#: ../../reference/qweb.rst:285
msgid "will be rendered as ``<p>1</p>``."
msgstr ""

#: ../../reference/qweb.rst:287
msgid ""
"However this has the problem of being visible from outside the ``t-call``. "
"Alternatively, content set in the body of the ``call`` directive will be "
"evaluated *before* calling the sub-template, and can alter a local context::"
msgstr ""

#: ../../reference/qweb.rst:296
msgid ""
"The body of the ``call`` directive can be arbitrarily complex (not just "
"``set`` directives), and its rendered form will be available within the "
"called template as a magical ``0`` variable::"
msgstr ""

#: ../../reference/qweb.rst:305
msgid "being called thus::"
msgstr ""

#: ../../reference/qweb.rst:322 ../../reference/qweb.rst:421
msgid "Exclusive directives"
msgstr ""

#: ../../reference/qweb.rst:325
msgid "asset bundles"
msgstr ""

#: ../../reference/qweb.rst:330
msgid "\"smart records\" fields formatting"
msgstr ""

#: ../../reference/qweb.rst:332
msgid ""
"The ``t-field`` directive can only be used when performing field access "
"(``a.b``) on a \"smart\" record (result of the ``browse`` method). It is "
"able to automatically format based on field type, and is integrated in the "
"website's rich text edition."
msgstr ""

#: ../../reference/qweb.rst:337
msgid ""
"``t-field-options`` can be used to customize fields, the most common option "
"is ``widget``, other options are field- or widget-dependent."
msgstr ""

#: ../../reference/qweb.rst:341 ../../reference/qweb.rst:487
msgid "debugging"
msgstr ""

#: ../../reference/qweb.rst:349 ../../reference/qweb.rst:506
msgid "``t-debug``"
msgstr ""

#: ../../reference/qweb.rst:344
msgid ""
"invokes a debugger using PDB's ``set_trace`` API. The parameter should be "
"the name of a module, on which a ``set_trace`` method is called::"
msgstr ""

#: ../../reference/qweb.rst:349
msgid "is equivalent to ``importlib.import_module(\"pdb\").set_trace()``"
msgstr ""

#: ../../reference/qweb.rst:352 ../../reference/qweb.rst:519
msgid "Helpers"
msgstr ""

#: ../../reference/qweb.rst:355
msgid "Request-based"
msgstr ""

#: ../../reference/qweb.rst:357
msgid ""
"Most Python-side uses of QWeb are in controllers (and during HTTP requests),"
" in which case templates stored in the database (as :ref:`views "
"<reference/views/qweb>`) can be trivially rendered by calling "
":meth:`openerp.http.HttpRequest.render`:"
msgstr ""

#: ../../reference/qweb.rst:368
msgid ""
"This automatically creates a :class:`~openerp.http.Response` object which "
"can be returned from the controller (or further customized to suit)."
msgstr ""

#: ../../reference/qweb.rst:372
msgid "View-based"
msgstr ""

#: ../../reference/qweb.rst:374
msgid ""
"At a deeper level than the previous helper is the ``render`` method on "
"``ir.ui.view``:"
msgstr ""

#: ../../reference/qweb.rst:379
msgid ""
"Renders a QWeb view/template by database id or :term:`external id`. "
"Templates are automatically loaded from ``ir.ui.view`` records."
msgstr ""

#: ../../reference/qweb.rst:382
msgid "Sets up a number of default values in the rendering context:"
msgstr ""

#: ../../reference/qweb.rst:384
msgid "``request``"
msgstr ""

#: ../../reference/qweb.rst:385
msgid "the current :class:`~openerp.http.WebRequest` object, if any"
msgstr ""

#: ../../reference/qweb.rst:386
msgid "``debug``"
msgstr ""

#: ../../reference/qweb.rst:387
msgid "whether the current request (if any) is in ``debug`` mode"
msgstr ""

#: ../../reference/qweb.rst:388
msgid ":func:`quote_plus <werkzeug.urls.url_quote_plus>`"
msgstr ""

#: ../../reference/qweb.rst:389
msgid "url-encoding utility function"
msgstr ""

#: ../../reference/qweb.rst:390
msgid ":mod:`json`"
msgstr ""

#: ../../reference/qweb.rst:391 ../../reference/qweb.rst:393
#: ../../reference/qweb.rst:395
msgid "the corresponding standard library module"
msgstr ""

#: ../../reference/qweb.rst:392
msgid ":mod:`time`"
msgstr ""

#: ../../reference/qweb.rst:394
msgid ":mod:`datetime`"
msgstr ""

#: ../../reference/qweb.rst:396
msgid ""
"`relativedelta <https://labix.org/python-dateutil#head-"
"ba5ffd4df8111d1b83fc194b97ebecf837add454>`_"
msgstr ""

#: ../../reference/qweb.rst:397
msgid "see module"
msgstr ""

#: ../../reference/qweb.rst:399
msgid "``keep_query``"
msgstr ""

#: ../../reference/qweb.rst:399
msgid "the ``keep_query`` helper function"
msgstr ""

#: ../../reference/qweb.rst:401
msgid "context values to pass to QWeb for rendering"
msgstr ""

#: ../../reference/qweb.rst:402
msgid ""
"name of the Odoo model to use for rendering, can be used to expand or "
"customize QWeb locally (by creating a \"new\" qweb based on ``ir.qweb`` with"
" alterations)"
msgstr ""

#: ../../reference/qweb.rst:409 ../../reference/qweb.rst:531
msgid "API"
msgstr ""

#: ../../reference/qweb.rst:411
msgid ""
"It is also possible to use the ``ir.qweb`` model directly (and extend it, "
"and inherit from it):"
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.QWeb:1
msgid "Base QWeb rendering engine"
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.QWeb:3
msgid ""
"to customize ``t-field`` rendering, subclass ``ir.qweb.field`` and create "
"new models called :samp:`ir.qweb.field.{widget}`"
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.QWeb:5
msgid ""
"alternatively, override :meth:`~.get_converter_for` and return an arbitrary "
"model to use as field converter"
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.QWeb:8
msgid ""
"Beware that if you need extensions or alterations which could be "
"incompatible with other subsystems, you should create a local object "
"inheriting from ``ir.qweb`` and customize that."
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.QWeb.get_converter_for:1
msgid "returns a :class:`~openerp.models.Model` used to render a ``t-field``."
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.QWeb.get_converter_for:4
msgid ""
"By default, tries to get the model named :samp:`ir.qweb.field.{field_type}`,"
" falling back on ``ir.qweb.field``."
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.QWeb.get_converter_for:7
msgid "type or widget of field to render"
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.QWeb.get_widget_for:1
msgid "returns a :class:`~openerp.models.Model` used to render a ``t-esc``"
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.QWeb.get_widget_for:4
msgid "name of the widget to use, or ``None``"
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.QWeb.prefixed_methods:1
msgid ""
"Extracts all methods prefixed by ``prefix``, and returns a mapping of "
"(t-name, method) where the t-name is the method name with prefix removed and"
" underscore converted to dashes"
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.QWeb.prefixed_methods:6
msgid "dict"
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.QWeb.render:1
msgid "Renders the template specified by the provided template name"
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.QWeb.render:3
msgid "context for rendering the template"
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.QWeb.render:5
msgid ""
"if ``qwebcontext`` is a dict, loader set into the context instantiated for "
"rendering"
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.QWeb.render_tag_call_assets:1
msgid ""
"This special 't-call' tag can be used in order to aggregate/minify "
"javascript and css assets"
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.QWeb.render_tag_field:1
msgid ""
"eg: <span t-record=\"browse_record(res.partner, 1)\" t-field=\"phone\">+1 "
"555 555 8069</span>"
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.FieldConverter:1
msgid "Used to convert a t-field specification into an output HTML field."
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.FieldConverter:3
msgid ":meth:`~.to_html` is the entry point of this conversion from QWeb, it:"
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.FieldConverter:5
msgid "converts the record value to html using :meth:`~.record_to_html`"
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.FieldConverter:6
msgid ""
"generates the metadata attributes (``data-oe-``) to set on the root result "
"node"
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.FieldConverter:8
msgid "generates the root result node itself through :meth:`~.render_element`"
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.FieldConverter.attributes:1
msgid ""
"Generates the metadata attributes (prefixed by ``data-oe-`` for the root "
"node of the field conversion. Attribute values are escaped by the parent."
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.FieldConverter.attributes:5
msgid "The default attributes are:"
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.FieldConverter.attributes:7
msgid "``model``, the name of the record's model"
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.FieldConverter.attributes:8
msgid "``id`` the id of the record to which the field belongs"
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.FieldConverter.attributes:9
msgid "``field`` the name of the converted field"
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.FieldConverter.attributes:10
msgid ""
"``type`` the logical field type (widget, may not match the field's ``type``,"
" may not be any Field subclass name)"
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.FieldConverter.attributes:12
msgid ""
"``translate``, a boolean flag (``0`` or ``1``) denoting whether the field is"
" translatable"
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.FieldConverter.attributes:14
msgid "``readonly``, has this attribute if the field is readonly"
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.FieldConverter.attributes:15
msgid "``expression``, the original expression"
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.FieldConverter.attributes:17
msgid "iterable of (attribute name, attribute value) pairs."
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.FieldConverter.record_to_html:1
msgid "Converts the specified field of the browse_record ``record`` to HTML"
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.FieldConverter.render_element:1
msgid ""
"Final rendering hook, by default just calls ir.qweb's ``render_element``"
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.FieldConverter.to_html:1
msgid ""
"Converts a ``t-field`` to its HTML output. A ``t-field`` may be extended by "
"a ``t-field-options``, which is a JSON-serialized mapping of configuration "
"values."
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.FieldConverter.to_html:5
msgid ""
"A default configuration key is ``widget`` which can override the field's own"
" ``_type``."
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.FieldConverter.user_lang:1
msgid ""
"Fetches the res.lang object corresponding to the language code stored in the"
" user's context. Fallbacks to en_US if no lang is present in the context *or"
" the language code is not valid*."
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.FieldConverter.user_lang:5
msgid "res.lang browse_record"
msgstr ""

#: ../../../openerp/addons/base/ir/ir_qweb.pydocstring of
#: openerp.addons.base.ir.ir_qweb.FieldConverter.value_to_html:1
msgid "Converts a single value to its HTML version/output"
msgstr ""

#: ../../reference/qweb.rst:424
msgid "defining templates"
msgstr ""

#: ../../reference/qweb.rst:426
msgid ""
"The ``t-name`` directive can only be placed at the top-level of a template "
"file (direct children to the document root)::"
msgstr ""

#: ../../reference/qweb.rst:435
msgid ""
"It takes no other parameter, but can be used with a ``<t>`` element or any "
"other. With a ``<t>`` element, the ``<t>`` should have a single child."
msgstr ""

#: ../../reference/qweb.rst:438
msgid ""
"The template name is an arbitrary string, although when multiple templates "
"are related (e.g. called sub-templates) it is customary to use dot-separated"
" names to indicate hierarchical relationships."
msgstr ""

#: ../../reference/qweb.rst:443
msgid "template inheritance"
msgstr ""

#: ../../reference/qweb.rst:445
msgid ""
"Template inheritance is used to alter existing templates in-place, e.g. to "
"add information to templates created by an other modules."
msgstr ""

#: ../../reference/qweb.rst:448
msgid ""
"Template inheritance is performed via the ``t-extend`` directive which takes"
" the name of the template to alter as parameter."
msgstr ""

#: ../../reference/qweb.rst:451
msgid ""
"The alteration is then performed with any number of ``t-jquery`` sub-"
"directives::"
msgstr ""

#: ../../reference/qweb.rst:460
msgid ""
"The ``t-jquery`` directives takes a `CSS selector`_. This selector is used "
"on the extended template to select *context nodes* to which the specified "
"``t-operation`` is applied:"
msgstr ""

#: ../../reference/qweb.rst:465
msgid "``append``"
msgstr ""

#: ../../reference/qweb.rst:465
msgid ""
"the node's body is appended at the end of the context node (after the "
"context node's last child)"
msgstr ""

#: ../../reference/qweb.rst:468
msgid "``prepend``"
msgstr ""

#: ../../reference/qweb.rst:468
msgid ""
"the node's body is prepended to the context node (inserted before the "
"context node's first child)"
msgstr ""

#: ../../reference/qweb.rst:470 ../../reference/views.rst:100
msgid "``before``"
msgstr ""

#: ../../reference/qweb.rst:471
msgid "the node's body is inserted right before the context node"
msgstr ""

#: ../../reference/qweb.rst:472 ../../reference/views.rst:97
msgid "``after``"
msgstr ""

#: ../../reference/qweb.rst:473
msgid "the node's body is inserted right after the context node"
msgstr ""

#: ../../reference/qweb.rst:474
msgid "``inner``"
msgstr ""

#: ../../reference/qweb.rst:475
msgid "the node's body replaces the context node's children"
msgstr ""

#: ../../reference/qweb.rst:476 ../../reference/views.rst:94
msgid "``replace``"
msgstr ""

#: ../../reference/qweb.rst:477
msgid "the node's body is used to replace the context node itself"
msgstr ""

#: ../../reference/qweb.rst:484
msgid "No operation"
msgstr ""

#: ../../reference/qweb.rst:479
msgid ""
"if no ``t-operation`` is specified, the template body is interpreted as "
"javascript code and executed with the context node as ``this``"
msgstr ""

#: ../../reference/qweb.rst:482
msgid ""
"while much more powerful than other operations, this mode is also much "
"harder to debug and maintain, it is recommended to avoid it"
msgstr ""

#: ../../reference/qweb.rst:489
msgid "The javascript QWeb implementation provides a few debugging hooks:"
msgstr ""

#: ../../reference/qweb.rst:497
msgid "``t-log``"
msgstr ""

#: ../../reference/qweb.rst:492
msgid ""
"takes an expression parameter, evaluates the expression during rendering and"
" logs its result with ``console.log``::"
msgstr ""

#: ../../reference/qweb.rst:498
msgid "will print ``42`` to the console"
msgstr ""

#: ../../reference/qweb.rst:500
msgid "triggers a debugger breakpoint during template rendering::"
msgstr ""

#: ../../reference/qweb.rst:506
msgid ""
"will stop execution if debugging is active (exact condition depend on the "
"browser and its development tools)"
msgstr ""

#: ../../reference/qweb.rst:516
msgid "``t-js``"
msgstr ""

#: ../../reference/qweb.rst:509
msgid ""
"the node's body is javascript code executed during template rendering. Takes"
" a ``context`` parameter, which is the name under which the rendering "
"context will be available in the ``t-js``'s body::"
msgstr ""

#: ../../reference/qweb.rst:523
msgid ""
"(core is the ``web.core`` module) An instance of :js:class:`QWeb2.Engine` "
"with all module-defined template files loaded, and references to standard "
"helper objects ``_`` (underscore), ``_t`` (translation function) and JSON_."
msgstr ""

#: ../../reference/qweb.rst:527
msgid ""
":js:func:`core.qweb.render <QWeb2.Engine.render>` can be used to easily "
"render basic module templates"
msgstr ""

#: ../../reference/qweb.rst:535
msgid ""
"The QWeb \"renderer\", handles most of QWeb's logic (loading, parsing, "
"compiling and rendering templates)."
msgstr ""

#: ../../reference/qweb.rst:538
msgid ""
"OpenERP Web instantiates one for the user in the core module, and exports it"
" to ``core.qweb``. It also loads all the template files of the various "
"modules into that QWeb instance."
msgstr ""

#: ../../reference/qweb.rst:542
msgid "A :js:class:`QWeb2.Engine` also serves as a \"template namespace\"."
msgstr ""

#: ../../reference/qweb.rst:546
msgid ""
"Renders a previously loaded template to a String, using ``context`` (if "
"provided) to find the variables accessed during template rendering (e.g. "
"strings to display)."
msgstr ""

#: ../../reference/qweb.rst:550
msgid "the name of the template to render"
msgstr ""

#: ../../reference/qweb.rst:551
msgid "the basic namespace to use for template rendering"
msgstr ""

#: ../../reference/qweb.rst:553
msgid "String"
msgstr ""

#: ../../reference/qweb.rst:555
msgid ""
"The engine exposes an other method which may be useful in some cases (e.g. "
"if you need a separate template namespace with, in OpenERP Web, Kanban views"
" get their own :js:class:`QWeb2.Engine` instance so their templates don't "
"collide with more general \"module\" templates):"
msgstr ""

#: ../../reference/qweb.rst:563
msgid ""
"Loads a template file (a collection of templates) in the QWeb instance. The "
"templates can be specified as:"
msgstr ""

#: ../../reference/qweb.rst:568
msgid "An XML string"
msgstr ""

#: ../../reference/qweb.rst:567
msgid "QWeb will attempt to parse it to an XML document then load it."
msgstr ""

#: ../../reference/qweb.rst:572
msgid "A URL"
msgstr ""

#: ../../reference/qweb.rst:571
msgid ""
"QWeb will attempt to download the URL content, then load the resulting XML "
"string."
msgstr ""

#: ../../reference/qweb.rst:577
msgid "A ``Document`` or ``Node``"
msgstr ""

#: ../../reference/qweb.rst:575
msgid ""
"QWeb will traverse the first level of the document (the child nodes of the "
"provided root) and load any named template or template override."
msgstr ""

#: ../../reference/qweb.rst:581
msgid ""
"A :js:class:`QWeb2.Engine` also exposes various attributes for behavior "
"customization:"
msgstr ""

#: ../../reference/qweb.rst:586
msgid ""
"Prefix used to recognize directives during parsing. A string. By default, "
"``t``."
msgstr ""

#: ../../reference/qweb.rst:591
msgid ""
"Boolean flag putting the engine in \"debug mode\". Normally, QWeb intercepts"
" any error raised during template execution. In debug mode, it leaves all "
"exceptions go through without intercepting them."
msgstr ""

#: ../../reference/qweb.rst:598
msgid ""
"The jQuery instance used during template inheritance processing. Defaults to"
" ``window.jQuery``."
msgstr ""

#: ../../reference/qweb.rst:603
msgid ""
"A ``Function``. If present, called before compiling each DOM node to "
"template code. In OpenERP Web, this is used to automatically translate text "
"content and some attributes in templates. Defaults to ``null``."
msgstr ""

#: ../../reference/qweb.rst:608
msgid ""
"it is similar in that to Genshi_, although it does not use (and has no "
"support for) `XML namespaces`_"
msgstr ""

#: ../../reference/qweb.rst:611
msgid ""
"although it uses a few others, either for historical reasons or because they"
" remain better fits for the use case. Odoo 8.0 still depends on Jinja_ and "
"Mako_."
msgstr ""

#: ../../reference/reports.rst:7
msgid "QWeb Reports"
msgstr ""

#: ../../reference/reports.rst:9
msgid ""
"Reports are written in HTML/QWeb, like all regular views in Odoo. You can "
"use the usual :ref:`QWeb control flow tools <reference/qweb>`. The PDF "
"rendering itself is performed by wkhtmltopdf_."
msgstr ""

#: ../../reference/reports.rst:13
msgid ""
"If you want to create a report on a certain model, you will need to define "
"this :ref:`reference/reports/report` and the "
":ref:`reference/reports/templates` it will use. If you wish, you can also "
"specify a specific :ref:`reference/reports/paper_formats` for this report. "
"Finally, if you need access to more than your model, you can define a "
":ref:`reference/reports/custom_reports` class that gives you access to more "
"models and records in the template."
msgstr ""

#: ../../reference/reports.rst:24
msgid "Report"
msgstr ""

#: ../../reference/reports.rst:26
msgid ""
"Every report must be declared by a :ref:`report action "
"<reference/actions/report>`."
msgstr ""

#: ../../reference/reports.rst:29
msgid ""
"For simplicity, a shortcut ``<report>`` element is available to define a "
"report, rather than have to set up :ref:`the action "
"<reference/actions/report>` and its surroundings manually. That ``<report>``"
" can take the following attributes:"
msgstr ""

#: ../../reference/reports.rst:35
msgid "the generated record's :term:`external id`"
msgstr ""

#: ../../reference/reports.rst:49
msgid ""
"if set to True, the report will be stored as an attachment of the record "
"using the name generated by the ``attachment`` expression; you can use this "
"if you need your report to be generated only once (for legal reasons, for "
"example)"
msgstr ""

#: ../../reference/reports.rst:54
msgid ""
"python expression that defines the name of the report; the record is "
"acessible as the variable ``object``"
msgstr ""

#: ../../reference/reports.rst:59
msgid ""
"The paper format cannot currently be declared via the ``<report>`` shortcut,"
" it must be added afterwards using a ``<record>`` extension on the report "
"action itself::"
msgstr ""

#: ../../reference/reports.rst:67 ../../reference/reports.rst:263
msgid "Example::"
msgstr ""

#: ../../reference/reports.rst:84
msgid "Report template"
msgstr ""

#: ../../reference/reports.rst:88
msgid "Minimal viable template"
msgstr ""

#: ../../reference/reports.rst:90
msgid "A minimal template would look like::"
msgstr ""

#: ../../reference/reports.rst:105
msgid ""
"Calling ``external_layout`` will add the default header and footer on your "
"report. The PDF body will be the content inside the ``<div "
"class=\"page\">``. The template's ``id`` must be the name specified in the "
"report declaration; for example ``account.report_invoice`` for the above "
"report. Since this is a QWeb template, you can access all the fields of the "
"``docs`` objects received by the template."
msgstr ""

#: ../../reference/reports.rst:112
msgid "There are some specific variables accessible in reports, mainly:"
msgstr ""

#: ../../reference/reports.rst:114
msgid "``docs``"
msgstr ""

#: ../../reference/reports.rst:115
msgid "records for the current report"
msgstr ""

#: ../../reference/reports.rst:116
msgid "``doc_ids``"
msgstr ""

#: ../../reference/reports.rst:117
msgid "list of ids for the ``docs`` records"
msgstr ""

#: ../../reference/reports.rst:118
msgid "``doc_model``"
msgstr ""

#: ../../reference/reports.rst:119
msgid "model for the ``docs`` records"
msgstr ""

#: ../../reference/reports.rst:120
msgid "``time``"
msgstr ""

#: ../../reference/reports.rst:121
msgid "a reference to :mod:`python:time` from the Python standard library"
msgstr ""

#: ../../reference/reports.rst:123
msgid "``res.user`` record for the user printing the report"
msgstr ""

#: ../../reference/reports.rst:125
msgid "``res_company``"
msgstr ""

#: ../../reference/reports.rst:125
msgid "record for the current ``user``'s company"
msgstr ""

#: ../../reference/reports.rst:127
msgid ""
"If you wish to access other records/models in the template, you will need "
":ref:`a custom report <reference/reports/custom_reports>`."
msgstr ""

#: ../../reference/reports.rst:131
msgid "Translatable Templates"
msgstr ""

#: ../../reference/reports.rst:133
msgid ""
"If you wish to translate reports (to the language of a partner, for "
"example), you need to define two templates:"
msgstr ""

#: ../../reference/reports.rst:136
msgid "The main report template"
msgstr ""

#: ../../reference/reports.rst:137
msgid "The translatable document"
msgstr ""

#: ../../reference/reports.rst:139
msgid ""
"You can then call the translatable document from your main template with the"
" attribute ``t-lang`` set to a language code (for example ``fr`` or "
"``en_US``) or to a record field. You will also need to re-browse the related"
" records with the proper context if you use fields that are translatable "
"(like country names, sales conditions, etc.)"
msgstr ""

#: ../../reference/reports.rst:146
msgid ""
"If your report template does not use translatable record fields, re-browsing"
" the record in another language is *not* necessary and will impact "
"performances."
msgstr ""

#: ../../reference/reports.rst:149
msgid ""
"For example, let's look at the Sale Order report from the Sale module::"
msgstr ""

#: ../../reference/reports.rst:179
msgid ""
"The main template calls the translatable template with "
"``doc.partner_id.lang`` as a ``t-lang`` parameter, so it will be rendered in"
" the language of the partner. This way, each Sale Order will be printed in "
"the language of the corresponding customer. If you wish to translate only "
"the body of the document, but keep the header and footer in a default "
"language, you could call the report's external layout this way::"
msgstr ""

#: ../../reference/reports.rst:189
msgid ""
"Please take note that this works only when calling external templates, you "
"will not be able to translate part of a document by setting a ``t-lang`` "
"attribute on an xml node other than ``t-call``. If you wish to translate "
"part of a template, you can create an external template with this partial "
"template and call it from the main one with the ``t-lang`` attribute."
msgstr ""

#: ../../reference/reports.rst:197
msgid "Barcodes"
msgstr ""

#: ../../reference/reports.rst:199
msgid ""
"Barcodes are images returned by a controller and can easily be embedded in "
"reports thanks to the QWeb syntax:"
msgstr ""

#: ../../reference/reports.rst:206
msgid "More parameters can be passed as a query string"
msgstr ""

#: ../../reference/reports.rst:215
msgid "Useful Remarks"
msgstr ""

#: ../../reference/reports.rst:216
msgid ""
"Twitter Bootstrap and FontAwesome classes can be used in your report "
"template"
msgstr ""

#: ../../reference/reports.rst:218
msgid "Local CSS can be put directly in the template"
msgstr ""

#: ../../reference/reports.rst:220
msgid ""
"Global CSS can be inserted in the main report layout by inheriting its "
"template and inserting your CSS::"
msgstr ""

#: ../../reference/reports.rst:236
msgid "Paper Format"
msgstr ""

#: ../../reference/reports.rst:238
msgid ""
"Paper formats are records of ``report.paperformat`` and can contain the "
"following attributes:"
msgstr ""

#: ../../reference/reports.rst:244
msgid "``description``"
msgstr ""

#: ../../reference/reports.rst:245
msgid "a small description of your format"
msgstr ""

#: ../../reference/reports.rst:248
msgid "``format``"
msgstr ""

#: ../../reference/reports.rst:247
msgid ""
"either a predefined format (A0 to A9, B0 to B10, Legal, Letter, Tabloid,...)"
" or ``custom``; A4 by default. You cannot use a non-custom format if you "
"define the page dimensions."
msgstr ""

#: ../../reference/reports.rst:250
msgid "``dpi``"
msgstr ""

#: ../../reference/reports.rst:251
msgid "output DPI; 90 by default"
msgstr ""

#: ../../reference/reports.rst:252
msgid "``margin_top``, ``margin_bottom``, ``margin_left``, ``margin_right``"
msgstr ""

#: ../../reference/reports.rst:253
msgid "margin sizes in mm"
msgstr ""

#: ../../reference/reports.rst:254
msgid "``page_height``, ``page_width``"
msgstr ""

#: ../../reference/reports.rst:255
msgid "page dimensions in mm"
msgstr ""

#: ../../reference/reports.rst:256
msgid "``orientation``"
msgstr ""

#: ../../reference/reports.rst:257
msgid "Landscape or Portrait"
msgstr ""

#: ../../reference/reports.rst:258
msgid "``header_line``"
msgstr ""

#: ../../reference/reports.rst:259
msgid "boolean to display a header line"
msgstr ""

#: ../../reference/reports.rst:261
msgid "``header_spacing``"
msgstr ""

#: ../../reference/reports.rst:261
msgid "header spacing in mm"
msgstr ""

#: ../../reference/reports.rst:284
msgid "Custom Reports"
msgstr ""

#: ../../reference/reports.rst:286
msgid ""
"The report model has a default ``get_html`` function that looks for a model "
"named :samp:`report.{module.report_name}`. If it exists, it will use it to "
"call the QWeb engine; otherwise a generic function will be used. If you wish"
" to customize your reports by including more things in the template (like "
"records of others models, for example), you can define this model, overwrite"
" the function ``render_html`` and pass objects in the ``docargs`` "
"dictionnary:"
msgstr ""

#: ../../reference/reports.rst:311
msgid "Reports are web pages"
msgstr ""

#: ../../reference/reports.rst:313
msgid ""
"Reports are dynamically generated by the report module and can be accessed "
"directly via URL:"
msgstr ""

#: ../../reference/reports.rst:316
msgid ""
"For example, you can access a Sale Order report in html mode by going to "
"\\http://<server-address>/report/html/sale.report_saleorder/38"
msgstr ""

#: ../../reference/reports.rst:319
msgid ""
"Or you can access the pdf version at \\http://<server-"
"address>/report/pdf/sale.report_saleorder/38"
msgstr ""

#: ../../reference/security.rst:7
msgid "Security in Odoo"
msgstr ""

#: ../../reference/security.rst:9
msgid ""
"Aside from manually managing access using custom code, Odoo provides two "
"main data-driven mechanisms to manage or restrict access to data."
msgstr ""

#: ../../reference/security.rst:12
msgid ""
"Both mechanisms are linked to specific users through *groups*: a user "
"belongs to any number of groups, and security mechanisms are associated to "
"groups, thus applying security mechamisms to users."
msgstr ""

#: ../../reference/security.rst:19
msgid "Access Control"
msgstr ""

#: ../../reference/security.rst:21
msgid ""
"Managed by the ``ir.model.access`` records, defines access to a whole model."
msgstr ""

#: ../../reference/security.rst:23
msgid ""
"Each access control has a model to which it grants permissions, the "
"permissions it grants and optionally a group."
msgstr ""

#: ../../reference/security.rst:26
msgid ""
"Access controls are additive, for a given model a user has access all "
"permissions granted to any of its groups: if the user belongs to one group "
"which allows writing and another which allows deleting, they can both write "
"and delete."
msgstr ""

#: ../../reference/security.rst:31
msgid ""
"If no group is specified, the access control applies to all users, otherwise"
" it only applies to the members of the given group."
msgstr ""

#: ../../reference/security.rst:34
msgid ""
"Available permissions are creation (``perm_create``), searching and reading "
"(``perm_read``), updating existing records (``perm_write``) and deleting "
"existing records (``perm_unlink``)"
msgstr ""

#: ../../reference/security.rst:41
msgid "Record Rules"
msgstr ""

#: ../../reference/security.rst:43
msgid ""
"Record rules are conditions that records must satisfy for an operation "
"(create, read, update or delete) to be allowed. It is applied record-by-"
"record after access control has been applied."
msgstr ""

#: ../../reference/security.rst:47
msgid "A record rule has:"
msgstr ""

#: ../../reference/security.rst:49
msgid "a model on which it applies"
msgstr ""

#: ../../reference/security.rst:50
msgid ""
"a set of permissions to which it applies (e.g. if ``perm_read`` is set, the "
"rule will only be checked when reading a record)"
msgstr ""

#: ../../reference/security.rst:52
msgid ""
"a set of user groups to which the rule applies, if no group is specified the"
" rule is *global*"
msgstr ""

#: ../../reference/security.rst:54
msgid ""
"a :ref:`domain <reference/orm/domains>` used to check whether a given record"
" matches the rule (and is accessible) or does not (and is not accessible). "
"The domain is evaluated with two variables in context: ``user`` is the "
"current user's record and ``time`` is the `time module`_"
msgstr ""

#: ../../reference/security.rst:59
msgid ""
"Global rules and group rules (rules restricted to specific groups versus "
"groups applying to all users) are used quite differently:"
msgstr ""

#: ../../reference/security.rst:62
msgid ""
"Global rules are subtractive, they *must all* be matched for a record to be "
"accessible"
msgstr ""

#: ../../reference/security.rst:64
msgid ""
"Group rules are additive, if *any* of them matches (and all global rules "
"match) then the record is accessible"
msgstr ""

#: ../../reference/security.rst:67
msgid ""
"This means the first *group rule* restricts access, but any further *group "
"rule* expands it, while *global rules* can only ever restrict access (or "
"have no effect)."
msgstr ""

#: ../../reference/security.rst:71
msgid "record rules do not apply to the Administrator user"
msgstr ""

#: ../../reference/security.rst:74
msgid "although access rules do"
msgstr ""

#: ../../reference/security.rst:79
msgid "Field Access"
msgstr ""

#: ../../reference/security.rst:83
msgid ""
"An ORM :class:`~openerp.fields.Field` can have a ``groups`` attribute "
"providing a list of groups (as a comma-separated string of :term:`external "
"identifiers`)."
msgstr ""

#: ../../reference/security.rst:87
msgid ""
"If the current user is not in one of the listed groups, he will not have "
"access to the field:"
msgstr ""

#: ../../reference/security.rst:90
msgid "restricted fields are automatically removed from requested views"
msgstr ""

#: ../../reference/security.rst:91
msgid ""
"restricted fields are removed from :meth:`~openerp.models.Model.fields_get` "
"responses"
msgstr ""

#: ../../reference/security.rst:93
msgid ""
"attempts to (explicitly) read from or write to restricted fields results in "
"an access error"
msgstr ""

#: ../../reference/security.rst:102
msgid "Workflow transition rules"
msgstr ""

#: ../../reference/security.rst:104
msgid ""
"Workflow transitions can be restricted to a specific group. Users outside "
"the group can not trigger the transition."
msgstr ""

#: ../../reference/testing.rst:8
msgid "Testing Modules"
msgstr ""

#: ../../reference/testing.rst:10
msgid "Odoo provides support for testing modules using unittest2_."
msgstr ""

#: ../../reference/testing.rst:12
msgid ""
"To write tests, simply define a ``tests`` sub-package in your module, it "
"will be automatically inspected for test modules. Test modules should have a"
" name starting with ``test_`` and should be imported from "
"``tests/__init__.py``, e.g."
msgstr ""

#: ../../reference/testing.rst:26
msgid "and ``__init__.py`` contains::"
msgstr ""

#: ../../reference/testing.rst:32
msgid ""
"test modules which are not imported from ``tests/__init__.py`` will not be "
"run"
msgstr ""

#: ../../reference/testing.rst:37
msgid ""
"previously, the test runner would only run modules added to two lists "
"``fast_suite`` and ``checks`` in ``tests/__init__.py``. In 8.0 it will run "
"all imported modules"
msgstr ""

#: ../../reference/testing.rst:41
msgid ""
"The test runner will simply run any test case, as described in the official "
"`unittest documentation`_, but Odoo provides a number of utilities and "
"helpers related to testing Odoo content (modules, mainly):"
msgstr ""

#: ../../../openerp/tests/common.pydocstring of
#: openerp.tests.common.TransactionCase:1
msgid ""
"TestCase in which each test method is run in its own transaction, and with "
"its own cursor. The transaction is rolled back and the cursor is closed "
"after each test."
msgstr ""

#: ../../../openerp/tests/common.pydocstring of
#: openerp.tests.common.TransactionCase.browse_ref:1
#: ../../../openerp/tests/common.pydocstring of
#: openerp.tests.common.SingleTransactionCase.browse_ref:1
msgid "Returns a record object for the provided :term:`external identifier`"
msgstr ""

#: ../../../openerp/tests/common.pydocstring of
#: openerp.tests.common.TransactionCase.browse_ref:4
#: ../../../openerp/tests/common.pydocstring of
#: openerp.tests.common.TransactionCase.ref:4
#: ../../../openerp/tests/common.pydocstring of
#: openerp.tests.common.SingleTransactionCase.browse_ref:4
#: ../../../openerp/tests/common.pydocstring of
#: openerp.tests.common.SingleTransactionCase.ref:4
msgid ""
"fully-qualified :term:`external identifier`, in the form "
":samp:`{module}.{identifier}`"
msgstr ""

#: ../../../openerp/tests/common.pydocstring of
#: openerp.tests.common.TransactionCase.browse_ref:6
#: ../../../openerp/tests/common.pydocstring of
#: openerp.tests.common.TransactionCase.ref:6
#: ../../../openerp/tests/common.pydocstring of
#: openerp.tests.common.SingleTransactionCase.browse_ref:6
#: ../../../openerp/tests/common.pydocstring of
#: openerp.tests.common.SingleTransactionCase.ref:6
msgid "ValueError if not found"
msgstr ""

#: ../../../openerp/tests/common.pydocstring of
#: openerp.tests.common.TransactionCase.browse_ref:7
#: ../../../openerp/tests/common.pydocstring of
#: openerp.tests.common.SingleTransactionCase.browse_ref:7
msgid ":class:`~openerp.models.BaseModel`"
msgstr ""

#: ../../../openerp/tests/common.pydocstring of
#: openerp.tests.common.TransactionCase.ref:1
#: ../../../openerp/tests/common.pydocstring of
#: openerp.tests.common.SingleTransactionCase.ref:1
msgid ""
"Returns database ID for the provided :term:`external identifier`, shortcut "
"for ``get_object_reference``"
msgstr ""

#: ../../../openerp/tests/common.pydocstring of
#: openerp.tests.common.TransactionCase.ref:7
#: ../../../openerp/tests/common.pydocstring of
#: openerp.tests.common.SingleTransactionCase.ref:7
msgid "registered id"
msgstr ""

#: ../../../openerp/tests/common.pydocstring of
#: openerp.tests.common.SingleTransactionCase:1
msgid ""
"TestCase in which all test methods are run in the same transaction, the "
"transaction is started with the first test method and rolled back at the end"
" of the last."
msgstr ""

#: ../../reference/testing.rst:51
msgid ""
"By default, tests are run once right after the corresponding module has been"
" installed. Test cases can also be configured to run after all modules have "
"been installed, and not run right after the module installation:"
msgstr ""

#: ../../../openerp/tests/common.pydocstring of
#: openerp.tests.common.at_install:1
msgid ""
"Sets the at-install state of a test, the flag is a boolean specifying "
"whether the test should (``True``) or should not (``False``) run during "
"module installation."
msgstr ""

#: ../../../openerp/tests/common.pydocstring of
#: openerp.tests.common.at_install:5
msgid ""
"By default, tests are run right after installing the module, before starting"
" the installation of the next module."
msgstr ""

#: ../../../openerp/tests/common.pydocstring of
#: openerp.tests.common.post_install:1
msgid ""
"Sets the post-install state of a test. The flag is a boolean specifying "
"whether the test should or should not run after a set of module "
"installations."
msgstr ""

#: ../../../openerp/tests/common.pydocstring of
#: openerp.tests.common.post_install:5
msgid ""
"By default, tests are *not* run after installation of all modules in the "
"current installation set."
msgstr ""

#: ../../reference/testing.rst:59
msgid ""
"The most common situation is to use "
":class:`~openerp.tests.common.TransactionCase` and test a property of a "
"model in each method::"
msgstr ""

#: ../../reference/testing.rst:74
msgid "Running tests"
msgstr ""

#: ../../reference/testing.rst:76
msgid ""
"Tests are automatically run when installing or updating modules if :option"
":`--test-enable <odoo.py --test-enable>` was enabled when starting the Odoo "
"server."
msgstr ""

#: ../../reference/testing.rst:80
msgid ""
"As of Odoo 8, running tests outside of the install/update cycle is not "
"supported."
msgstr ""

#: ../../reference/translations.rst:8
msgid "Translating Modules"
msgstr ""

#: ../../reference/translations.rst:11
msgid "Exporting translatable term"
msgstr ""

#: ../../reference/translations.rst:13
msgid ""
"A number of terms in your modules are \"implicitly translatable\" as a "
"result, even if you haven't done any specific work towards translation you "
"can export your module's translatable terms and may find content to work "
"with."
msgstr ""

#: ../../reference/translations.rst:19
msgid ""
"Translations export is performed via the administration interface by logging"
" into the backend interface and opening :menuselection:`Settings --> "
"Translations --> Import / Export --> Export Translations`"
msgstr ""

#: ../../reference/translations.rst:23
msgid "leave the language to the default (new language/empty template)"
msgstr ""

#: ../../reference/translations.rst:24
msgid "select the `PO File`_ format"
msgstr ""

#: ../../reference/translations.rst:25
msgid "select your module"
msgstr ""

#: ../../reference/translations.rst:26
msgid "click :guilabel:`Export` and download the file"
msgstr ""

#: ../../reference/translations.rst:32
msgid ""
"This gives you a file called :file:`{yourmodule}.pot` which should be moved "
"to the :file:`{yourmodule}/i18n/` directory. The file is a *PO Template* "
"which simply lists translatable strings and from which actual translations "
"(PO files) can be created. PO files can be created using msginit_, with a "
"dedicated translation tool like POEdit_ or by simply copying the template to"
" a new file called :file:`{language}.po`. Translation files should be put in"
" :file:`{yourmodule}/i18n/`, next to :file:`{yourmodule}.pot`, and will be "
"automatically loaded by Odoo when the corresponding language is installed "
"(via :menuselection:`Settings --> Translations --> Load a Translation`)"
msgstr ""

#: ../../reference/translations.rst:42
msgid ""
"translations for all loaded languages are also installed or updated when "
"installing or updating a module"
msgstr ""

#: ../../reference/translations.rst:46
msgid "Implicit exports"
msgstr ""

#: ../../reference/translations.rst:48
msgid ""
"Odoo automatically exports translatable strings from \"data\"-type content:"
msgstr ""

#: ../../reference/translations.rst:50
msgid ""
"in non-QWeb views, all text nodes are exported as well as the content of the"
" ``string``, ``help``, ``sum``, ``confirm`` and ``placeholder`` attributes"
msgstr ""

#: ../../reference/translations.rst:53
msgid ""
"QWeb templates (both server-side and client-side), all text nodes are "
"exported except inside ``t-translation=\"off\"`` blocks, the content of the "
"``title``, ``alt``, ``label`` and ``placeholder`` attributes are also "
"exported"
msgstr ""

#: ../../reference/translations.rst:57
msgid ""
"for :class:`~openerp.fields.Field`, unless their model is marked with "
"``_translate = False``:"
msgstr ""

#: ../../reference/translations.rst:60
msgid "their ``string`` and ``help`` attributes are exported"
msgstr ""

#: ../../reference/translations.rst:61
msgid "if ``selection`` is present and a list (or tuple), it's exported"
msgstr ""

#: ../../reference/translations.rst:62
msgid ""
"if their ``translate`` attribute is set to ``True``, all of their existing "
"values (across all records) are exported"
msgstr ""

#: ../../reference/translations.rst:64
msgid ""
"help/error messages of :attr:`~openerp.models.Model._constraints` and "
":attr:`~openerp.models.Model._sql_constraints` are exported"
msgstr ""

#: ../../reference/translations.rst:68
msgid "Explicit exports"
msgstr ""

#: ../../reference/translations.rst:70
msgid ""
"When it comes to more \"imperative\" situations in Python code or Javascript"
" code, Odoo cannot automatically export translatable terms so they must be "
"marked explicitly for export. This is done by wrapping a literal string in a"
" function call."
msgstr ""

#: ../../reference/translations.rst:75
msgid "In Python, the wrapping function is :func:`openerp._`::"
msgstr ""

#: ../../reference/translations.rst:79
msgid ""
"In JavaScript, the wrapping function is generally :js:func:`openerp.web._t`:"
msgstr ""

#: ../../reference/translations.rst:87
msgid ""
"Only literal strings can be marked for exports, not expressions or "
"variables. For situations where strings are formatted, this means the format"
" string must be marked, not the formatted string::"
msgstr ""

#: ../../reference/views.rst:8
msgid "Views"
msgstr ""

#: ../../reference/views.rst:13
msgid "Common Structure"
msgstr ""

#: ../../reference/views.rst:15
msgid ""
"View objects expose a number of fields, they are optional unless specified "
"otherwise."
msgstr ""

#: ../../reference/views.rst:19
msgid ""
"only useful as a mnemonic/description of the view when looking for one in a "
"list of some sort"
msgstr ""

#: ../../reference/views.rst:21
msgid "``model``"
msgstr ""

#: ../../reference/views.rst:22
msgid ""
"the model linked to the view, if applicable (it doesn't for QWeb views)"
msgstr ""

#: ../../reference/views.rst:29
msgid "``priority``"
msgstr ""

#: ../../reference/views.rst:24
msgid ""
"client programs can request views by ``id``, or by ``(model, type)``. For "
"the latter, all the views for the right type and model will be searched, and"
" the one with the lowest ``priority`` number will be returned (it is the "
"\"default view\")."
msgstr ""

#: ../../reference/views.rst:29
msgid ""
"``priority`` also defines the order of application during :ref:`view "
"inheritance <reference/views/inheritance>`"
msgstr ""

#: ../../reference/views.rst:31
msgid "``arch``"
msgstr ""

#: ../../reference/views.rst:32
msgid "the description of the view's layout"
msgstr ""

#: ../../reference/views.rst:34
msgid ""
":class:`~openerp.fields.Many2many` field to the groups allowed to view/use "
"the current view"
msgstr ""

#: ../../reference/views.rst:37
msgid "``inherit_id``"
msgstr ""

#: ../../reference/views.rst:37
msgid ""
"the current view's parent view, see :ref:`reference/views/inheritance`, "
"unset by default"
msgstr ""

#: ../../reference/views.rst:42 ../../reference/views.rst:416
msgid "``mode``"
msgstr ""

#: ../../reference/views.rst:40
msgid ""
"inheritance mode, see :ref:`reference/views/inheritance`. If ``inherit_id`` "
"is unset the ``mode`` can only be ``primary``. If ``inherit_id`` is set, "
"``extension`` by default but can be explicitly set to ``primary``"
msgstr ""

#: ../../reference/views.rst:46
msgid "``application``"
msgstr ""

#: ../../reference/views.rst:45
msgid ""
"website feature defining togglable views. By default, views are always "
"applied"
msgstr ""

#: ../../reference/views.rst:51
msgid "Inheritance"
msgstr ""

#: ../../reference/views.rst:54
msgid "View matching"
msgstr ""

#: ../../reference/views.rst:56
msgid ""
"if a view is requested by ``(model, type)``, the view with the right model "
"and type, ``mode=primary`` and the lowest priority is matched"
msgstr ""

#: ../../reference/views.rst:58
msgid ""
"when a view is requested by ``id``, if its mode is not ``primary`` its "
"*closest* parent with mode ``primary`` is matched"
msgstr ""

#: ../../reference/views.rst:62
msgid "View resolution"
msgstr ""

#: ../../reference/views.rst:64
msgid ""
"Resolution generates the final ``arch`` for a requested/matched ``primary`` "
"view:"
msgstr ""

#: ../../reference/views.rst:67
msgid ""
"if the view has a parent, the parent is fully resolved then the current "
"view's inheritance specs are applied"
msgstr ""

#: ../../reference/views.rst:69
msgid "if the view has no parent, its ``arch`` is used as-is"
msgstr ""

#: ../../reference/views.rst:70
msgid ""
"the current view's children with mode ``extension`` are looked up  and their"
" inheritance specs are applied depth-first (a child view is applied, then "
"its children, then its siblings)"
msgstr ""

#: ../../reference/views.rst:74
msgid "The result of applying children views yields the final ``arch``"
msgstr ""

#: ../../reference/views.rst:77
msgid "Inheritance specs"
msgstr ""

#: ../../reference/views.rst:79
msgid "There are three types of inheritance specs:"
msgstr ""

#: ../../reference/views.rst:81
msgid ""
"An ``xpath`` element with an ``expr`` attribute. ``expr`` is an XPath_ "
"expression\\ [#hasclass]_ applied to the current ``arch``, the first node it"
" finds is the match"
msgstr ""

#: ../../reference/views.rst:84
msgid ""
"a ``field`` element with a ``name`` attribute, matches the first ``field`` "
"with the same ``name``"
msgstr ""

#: ../../reference/views.rst:86
msgid ""
"any other element, the first element with the same name and identical "
"attributes (ignoring ``position``) is matched"
msgstr ""

#: ../../reference/views.rst:89
msgid ""
"The inheritance spec may have an optional ``position`` attribute specifying "
"how the matched node should be altered:"
msgstr ""

#: ../../reference/views.rst:92
msgid "``inside`` (default)"
msgstr ""

#: ../../reference/views.rst:93
msgid "the content of the inheritance spec is appended to the matched node"
msgstr ""

#: ../../reference/views.rst:95
msgid "the content of the inheritance spec replaces the matched node"
msgstr ""

#: ../../reference/views.rst:97
msgid ""
"the content of the inheritance spec is added to the matched node's parent, "
"after the matched node"
msgstr ""

#: ../../reference/views.rst:100
msgid ""
"the content of the inheritance spec is added to the matched node's parent, "
"before the matched node"
msgstr ""

#: ../../reference/views.rst:111
msgid "``attributes``"
msgstr ""

#: ../../reference/views.rst:103
msgid ""
"the content of the inheritance spec should be ``attribute`` elements with a "
"``name`` attribute and an optional body:"
msgstr ""

#: ../../reference/views.rst:106
msgid ""
"if the ``attribute`` element has a body, a new attributed named after its "
"``name`` is created on the matched node with the ``attribute`` element's "
"text as value"
msgstr ""

#: ../../reference/views.rst:109
msgid ""
"if the ``attribute`` element has no body, the attribute named after its "
"``name`` is removed from the matched node. If no such attribute exists, an "
"error is raised"
msgstr ""

#: ../../reference/views.rst:113
msgid "A view's specs are applied sequentially."
msgstr ""

#: ../../reference/views.rst:118
msgid "Lists"
msgstr ""

#: ../../reference/views.rst:120
msgid ""
"The root element of list views is ``<tree>``\\ [#treehistory]_. The list "
"view's root can have the following attributes:"
msgstr ""

#: ../../reference/views.rst:134
msgid "``editable``"
msgstr ""

#: ../../reference/views.rst:124
msgid ""
"by default, selecting a list view's row opens the corresponding :ref:`form "
"view <reference/views/form>`. The ``editable`` attributes makes the list "
"view itself editable in-place."
msgstr ""

#: ../../reference/views.rst:128
msgid ""
"Valid values are ``top`` and ``bottom``, making *new* records appear "
"respectively at the top or bottom of the list."
msgstr ""

#: ../../reference/views.rst:131
msgid ""
"The architecture for the inline :ref:`form view <reference/views/form>` is "
"derived from the list view. Most attributes valid on a :ref:`form view "
"<reference/views/form>`'s fields and buttons are thus accepted by list views"
" although they may not have any meaning if the list view is non-editable"
msgstr ""

#: ../../reference/views.rst:142 ../../reference/views.rst:817
msgid "``default_order``"
msgstr ""

#: ../../reference/views.rst:137
msgid ""
"overrides the ordering of the view, replacing the model's default order. The"
" value is a comma-separated list of fields, postfixed by ``desc`` to sort in"
" reverse order:"
msgstr ""

#: ../../reference/views.rst:145
msgid "``colors``"
msgstr ""

#: ../../reference/views.rst:145 ../../reference/views.rst:148
msgid "replaced by ``decoration-{$name}``"
msgstr ""

#: ../../reference/views.rst:148
msgid "``fonts``"
msgstr ""

#: ../../reference/views.rst:161
msgid "``decoration-{$name}``"
msgstr ""

#: ../../reference/views.rst:151
msgid ""
"allow changing the style of a row's text based on the corresponding record's"
" attributes."
msgstr ""

#: ../../reference/views.rst:154
msgid ""
"Values are Python expressions. For each record, the expression is evaluated "
"with the record's attributes as context values and if ``true``, the "
"corresponding style is applied to the row. Other context values are ``uid`` "
"(the id of the current user) and ``current_date`` (the current date as a "
"string of the form ``yyyy-MM-dd``)."
msgstr ""

#: ../../reference/views.rst:160
msgid ""
"``{$name}`` can be ``bf`` (``font-weight: bold``), ``it`` (``font-style: "
"italic``), or any bootstrap contextual color (``danger``, ``info``, "
"``muted``, ``primary``, ``success`` or ``warning``)."
msgstr ""

#: ../../reference/views.rst:164
msgid "``create``, ``edit``, ``delete``"
msgstr ""

#: ../../reference/views.rst:164
msgid ""
"allows *dis*\\ abling the corresponding action in the view by setting the "
"corresponding attribute to ``false``"
msgstr ""

#: ../../reference/views.rst:170
msgid "``on_write``"
msgstr ""

#: ../../reference/views.rst:167
msgid ""
"only makes sense on an ``editable`` list. Should be the name of a method on "
"the list's model. The method will be called with the ``id`` of a record "
"after having created or edited that record (in database)."
msgstr ""

#: ../../reference/views.rst:171
msgid ""
"The method should return a list of ids of other records to load or update."
msgstr ""

#: ../../reference/views.rst:177 ../../reference/views.rst:191
#: ../../reference/views.rst:252 ../../reference/views.rst:1100
msgid "``string``"
msgstr ""

#: ../../reference/views.rst:173
msgid "alternative translatable label for the view"
msgstr ""

#: ../../reference/views.rst:177
msgid "not displayed anymore"
msgstr ""

#: ../../reference/views.rst:181
msgid "Possible children elements of the list view are:"
msgstr ""

#: ../../reference/views.rst:242 ../../reference/views.rst:348
msgid "``button``"
msgstr ""

#: ../../reference/views.rst:186
msgid "displays a button in a list cell"
msgstr ""

#: ../../reference/views.rst:188
msgid "``icon``"
msgstr ""

#: ../../reference/views.rst:189
msgid "icon to use to display the button"
msgstr ""

#: ../../reference/views.rst:191
msgid "if there is no ``icon``, the button's text"
msgstr ""

#: ../../reference/views.rst:192
msgid "if there is an ``icon``, ``alt`` text for the icon"
msgstr ""

#: ../../reference/views.rst:194
msgid "type of button, indicates how it clicking it affects Odoo:"
msgstr ""

#: ../../reference/views.rst:198
msgid "``workflow`` (default)"
msgstr ""

#: ../../reference/views.rst:197
msgid ""
"sends a signal to a workflow. The button's ``name`` is the workflow signal, "
"the row's record is passed as argument to the signal"
msgstr ""

#: ../../reference/views.rst:207 ../../reference/views.rst:1043
msgid "``object``"
msgstr ""

#: ../../reference/views.rst:201
msgid ""
"call a method on the list's model. The button's ``name`` is the method, "
"which is called with the current row's record id and the current context."
msgstr ""

#: ../../reference/views.rst:210
msgid ""
"load an execute an ``ir.actions``, the button's ``name`` is the database id "
"of the action. The context is expanded with the list's model (as "
"``active_model``), the current row's record (``active_id``) and all the "
"records currently loaded in the list (``active_ids``, may be just a subset "
"of the database records matching the current search)"
msgstr ""

#: ../../reference/views.rst:217 ../../reference/views.rst:219
msgid "see ``type``"
msgstr ""

#: ../../reference/views.rst:218
msgid "``args``"
msgstr ""

#: ../../reference/views.rst:227 ../../reference/views.rst:280
#: ../../reference/views.rst:310 ../../reference/views.rst:394
msgid "``attrs``"
msgstr ""

#: ../../reference/views.rst:221
msgid "dynamic attributes based on record values."
msgstr ""

#: ../../reference/views.rst:223
msgid ""
"A mapping of attributes to domains, domains are evaluated in the context of "
"the current row's record, if ``True`` the corresponding attribute is set on "
"the cell."
msgstr ""

#: ../../reference/views.rst:227
msgid ""
"Possible attributes are ``invisible`` (hides the button) and ``readonly`` "
"(disables the button but still shows it)"
msgstr ""

#: ../../reference/views.rst:234
msgid "``states``"
msgstr ""

#: ../../reference/views.rst:230
msgid ""
"shorthand for ``invisible`` ``attrs``: a list of states, comma separated, "
"requires that the model has a ``state`` field and that it is used in the "
"view."
msgstr ""

#: ../../reference/views.rst:234
msgid ""
"Makes the button ``invisible`` if the record is *not* in one of the listed "
"states"
msgstr ""

#: ../../reference/views.rst:237
msgid "merged into the view's context when performing the button's Odoo call"
msgstr ""

#: ../../reference/views.rst:240
msgid "``confirm``"
msgstr ""

#: ../../reference/views.rst:239
msgid ""
"confirmation message to display (and for the user to accept) before "
"performing the button's Odoo call"
msgstr ""

#: ../../reference/views.rst:245
msgid ""
"defines a column where the corresponding field should be displayed for each "
"record. Can use the following attributes:"
msgstr ""

#: ../../reference/views.rst:249
msgid ""
"the name of the field to display in the current model. A given name can only"
" be used once per view"
msgstr ""

#: ../../reference/views.rst:252
msgid ""
"the title of the field's column (by default, uses the ``string`` of the "
"model's field)"
msgstr ""

#: ../../reference/views.rst:256
msgid "``invisible``"
msgstr ""

#: ../../reference/views.rst:255
msgid ""
"fetches and stores the field, but doesn't display the column in the table. "
"Necessary for fields which shouldn't be displayed but are used by e.g. "
"``@colors``"
msgstr ""

#: ../../reference/views.rst:259
msgid "lists the groups which should be able to see the field"
msgstr ""

#: ../../reference/views.rst:270 ../../reference/views.rst:364
#: ../../reference/views.rst:856 ../../reference/views.rst:1133
msgid "``widget``"
msgstr ""

#: ../../reference/views.rst:261
msgid ""
"alternate representations for a field's display. Possible list view values "
"are:"
msgstr ""

#: ../../reference/views.rst:264
msgid "``progressbar``"
msgstr ""

#: ../../reference/views.rst:265
msgid "displays ``float`` fields as a progress bar."
msgstr ""

#: ../../reference/views.rst:267
msgid "``many2onebutton``"
msgstr ""

#: ../../reference/views.rst:267
msgid ""
"replaces the m2o field's value by a checkmark if the field is filled, and a "
"cross if it is not"
msgstr ""

#: ../../reference/views.rst:270
msgid "``handle``"
msgstr ""

#: ../../reference/views.rst:270
msgid ""
"for ``sequence`` fields, instead of displaying the field's value just "
"displays a dra&drop icon"
msgstr ""

#: ../../reference/views.rst:275
msgid "``sum``, ``avg``"
msgstr ""

#: ../../reference/views.rst:273
msgid ""
"displays the corresponding aggregate at the bottom of the column. The "
"aggregation is only computed on *currently displayed* records. The "
"aggregation operation must match the corresponding field's "
"``group_operator``"
msgstr ""

#: ../../reference/views.rst:278
msgid ""
"dynamic attributes based on record values. Only effects the current field, "
"so e.g. ``invisible`` will hide the field but leave the same field of other "
"records visible, it will not hide the column itself"
msgstr ""

#: ../../reference/views.rst:282
msgid ""
"if the list view is ``editable``, any field attribute from the :ref:`form "
"view <reference/views/form>` is also valid and will be used when setting up "
"the inline form view"
msgstr ""

#: ../../reference/views.rst:289
msgid "Forms"
msgstr ""

#: ../../reference/views.rst:291
msgid ""
"Form views are used to display the data from a single record. Their root "
"element is ``<form>``. They are composed of regular HTML_ with additional "
"structural and semantic components."
msgstr ""

#: ../../reference/views.rst:296
msgid "Structural components"
msgstr ""

#: ../../reference/views.rst:298
msgid ""
"Structural components provide structure or \"visual\" features with little "
"logic. They are used as elements or sets of elements in form views."
msgstr ""

#: ../../reference/views.rst:310
msgid "``notebook``"
msgstr ""

#: ../../reference/views.rst:302
msgid ""
"defines a tabbed section. Each tab is defined through a ``page`` child "
"element. Pages can have the following attributes:"
msgstr ""

#: ../../reference/views.rst:305 ../../reference/views.rst:1148
msgid "``string`` (required)"
msgstr ""

#: ../../reference/views.rst:306
msgid "the title of the tab"
msgstr ""

#: ../../reference/views.rst:307
msgid "``accesskey``"
msgstr ""

#: ../../reference/views.rst:308
msgid "an HTML accesskey_"
msgstr ""

#: ../../reference/views.rst:310
msgid "standard dynamic attributes based on record values"
msgstr ""

#: ../../reference/views.rst:325 ../../reference/views.rst:1195
msgid "``group``"
msgstr ""

#: ../../reference/views.rst:313
msgid ""
"used to define column layouts in forms. By default, groups define 2 columns "
"and most direct children of groups take a single column. ``field`` direct "
"children of groups display a label by default, and the label and the field "
"itself have a colspan of 1 each."
msgstr ""

#: ../../reference/views.rst:318
msgid ""
"The number of columns in a ``group`` can be customized using the ``col`` "
"attribute, the number of columns taken by an element can be customized using"
" ``colspan``."
msgstr ""

#: ../../reference/views.rst:322
msgid ""
"Children are laid out horizontally (tries to fill the next column before "
"changing row)."
msgstr ""

#: ../../reference/views.rst:325
msgid ""
"Groups can have a ``string`` attribute, which is displayed as the group's "
"title"
msgstr ""

#: ../../reference/views.rst:329
msgid "``newline``"
msgstr ""

#: ../../reference/views.rst:328
msgid ""
"only useful within ``group`` elements, ends the current row early and "
"immediately switches to a new row (without filling any remaining column "
"beforehand)"
msgstr ""

#: ../../reference/views.rst:332 ../../reference/views.rst:1191
msgid "``separator``"
msgstr ""

#: ../../reference/views.rst:332
msgid ""
"small horizontal spacing, with a ``string`` attribute behaves as a section "
"title"
msgstr ""

#: ../../reference/views.rst:335
msgid "``sheet``"
msgstr ""

#: ../../reference/views.rst:335
msgid ""
"can be used as a direct child to ``form`` for a narrower and more responsive"
" form layout"
msgstr ""

#: ../../reference/views.rst:339
msgid "``header``"
msgstr ""

#: ../../reference/views.rst:338
msgid ""
"combined with ``sheet``, provides a full-width location above the sheet "
"itself, generally used to display workflow buttons and status widgets"
msgstr ""

#: ../../reference/views.rst:342
msgid "Semantic components"
msgstr ""

#: ../../reference/views.rst:344
msgid ""
"Semantic components tie into and allow interaction with the Odoo system. "
"Available semantic components are:"
msgstr ""

#: ../../reference/views.rst:348
msgid ""
"call into the Odoo system, similar to :ref:`list view buttons "
"<reference/views/list/button>`"
msgstr ""

#: ../../reference/views.rst:351
msgid ""
"renders (and allow edition of, possibly) a single field of the current "
"record. Possible attributes are:"
msgstr ""

#: ../../reference/views.rst:355
msgid "the name of the field to render"
msgstr ""

#: ../../reference/views.rst:357
msgid ""
"fields have a default rendering based on their type (e.g. "
":class:`~openerp.fields.Char`, :class:`~openerp.fields.Many2one`). The "
"``widget`` attributes allows using a different rendering method and context."
msgstr ""

#: ../../reference/views.rst:367
msgid "``options``"
msgstr ""

#: ../../reference/views.rst:367
msgid ""
"JSON object specifying configuration option for the field's widget "
"(including default widgets)"
msgstr ""

#: ../../reference/views.rst:382 ../../reference/views.rst:819
msgid "``class``"
msgstr ""

#: ../../reference/views.rst:370
msgid "HTML class to set on the generated element, common field classes are:"
msgstr ""

#: ../../reference/views.rst:372
msgid "``oe_inline``"
msgstr ""

#: ../../reference/views.rst:373
msgid "prevent the usual line break following fields"
msgstr ""

#: ../../reference/views.rst:374
msgid "``oe_left``, ``oe_right``"
msgstr ""

#: ../../reference/views.rst:375
msgid "floats_ the field to the corresponding direction"
msgstr ""

#: ../../reference/views.rst:376
msgid "``oe_read_only``, ``oe_edit_only``"
msgstr ""

#: ../../reference/views.rst:377
msgid "only displays the field in the corresponding form mode"
msgstr ""

#: ../../reference/views.rst:379
msgid "``oe_no_button``"
msgstr ""

#: ../../reference/views.rst:379
msgid ""
"avoids displaying the navigation button in a "
":class:`~openerp.fields.Many2one`"
msgstr ""

#: ../../reference/views.rst:382
msgid "``oe_avatar``"
msgstr ""

#: ../../reference/views.rst:382
msgid ""
"for image fields, displays images as \"avatar\" (square, 90x90 maximum size,"
" some image decorations)"
msgstr ""

#: ../../reference/views.rst:385
msgid "only displays the field for specific users"
msgstr ""

#: ../../reference/views.rst:392
msgid "``on_change``"
msgstr ""

#: ../../reference/views.rst:387
msgid ""
"calls the specified method when this field's value is edited, can generate "
"update other fields or display warnings for the user"
msgstr ""

#: ../../reference/views.rst:392
msgid "Use :func:`openerp.api.onchange` on the model"
msgstr ""

#: ../../reference/views.rst:395
msgid "dynamic meta-parameters based on record values"
msgstr ""

#: ../../reference/views.rst:397 ../../reference/views.rst:1138
#: ../../reference/views.rst:1151
msgid "``domain``"
msgstr ""

#: ../../reference/views.rst:397
msgid ""
"for relational fields only, filters to apply when displaying existing "
"records for selection"
msgstr ""

#: ../../reference/views.rst:400
msgid ""
"for relational fields only, context to pass when fetching possible values"
msgstr ""

#: ../../reference/views.rst:402
msgid "``readonly``"
msgstr ""

#: ../../reference/views.rst:402
msgid ""
"display the field in both readonly and edition mode, but never make it "
"editable"
msgstr ""

#: ../../reference/views.rst:405
msgid "``required``"
msgstr ""

#: ../../reference/views.rst:405
msgid ""
"generates an error and prevents saving the record if the field doesn't have "
"a value"
msgstr ""

#: ../../reference/views.rst:408
msgid "``nolabel``"
msgstr ""

#: ../../reference/views.rst:408
msgid ""
"don't automatically display the field's label, only makes sense if the field"
" is a direct child of a ``group`` element"
msgstr ""

#: ../../reference/views.rst:412
msgid "``placeholder``"
msgstr ""

#: ../../reference/views.rst:411
msgid ""
"help message to display in *empty* fields. Can replace field labels in "
"complex forms. *Should not* be an example of data as users are liable to "
"confuse placeholder text with filled fields"
msgstr ""

#: ../../reference/views.rst:415
msgid ""
"for :class:`~openerp.fields.One2many`, display mode (view type) to use for "
"the field's linked records. One of ``tree``, ``form``, ``kanban`` or "
"``graph``. The default is ``tree`` (a list display)"
msgstr ""

#: ../../reference/views.rst:418 ../../reference/views.rst:1161
msgid "``help``"
msgstr ""

#: ../../reference/views.rst:419
msgid "tooltip displayed for users when hovering the field or its label"
msgstr ""

#: ../../reference/views.rst:421
msgid "``filename``"
msgstr ""

#: ../../reference/views.rst:421
msgid ""
"for binary fields, name of the related field providing the name of the file"
msgstr ""

#: ../../reference/views.rst:425
msgid "``password``"
msgstr ""

#: ../../reference/views.rst:424
msgid ""
"indicates that a :class:`~openerp.fields.Char` field stores a password and "
"that its data shouldn't be displayed"
msgstr ""

#: ../../reference/views.rst:432
msgid "Business Views guidelines"
msgstr ""

#: ../../reference/views.rst:436
msgid ""
"Business views are targeted at regular users, not advanced users.  Examples "
"are: Opportunities, Products, Partners, Tasks, Projects, etc."
msgstr ""

#: ../../reference/views.rst:442
msgid "In general, a business view is composed of"
msgstr ""

#: ../../reference/views.rst:444
msgid "a status bar on top (with technical or business flow),"
msgstr ""

#: ../../reference/views.rst:445
msgid "a sheet in the middle (the form itself),"
msgstr ""

#: ../../reference/views.rst:446
msgid "a bottom part with History and Comments."
msgstr ""

#: ../../reference/views.rst:448
msgid "Technically, the new form views are structured as follows in XML::"
msgstr ""

#: ../../reference/views.rst:457
msgid "The Status Bar"
msgstr ""

#: ../../reference/views.rst:459
msgid ""
"The purpose of the status bar is to show the status of the current record "
"and the action buttons."
msgstr ""

#: ../../reference/views.rst:466
msgid "The Buttons"
msgstr ""

#: ../../reference/views.rst:468
msgid ""
"The order of buttons follows the business flow. For instance, in a sale "
"order, the logical steps are:"
msgstr ""

#: ../../reference/views.rst:471
msgid "Send the quotation"
msgstr ""

#: ../../reference/views.rst:472
msgid "Confirm the quotation"
msgstr ""

#: ../../reference/views.rst:473
msgid "Create the final invoice"
msgstr ""

#: ../../reference/views.rst:474
msgid "Send the goods"
msgstr ""

#: ../../reference/views.rst:476
msgid ""
"Highlighted buttons (in red by default) emphasize the logical next step, to "
"help the user. It is usually the first active button. On the other hand, "
":guilabel:`cancel` buttons *must* remain grey (normal).  For instance, in "
"Invoice the button :guilabel:`Refund` must never be red."
msgstr ""

#: ../../reference/views.rst:481
msgid ""
"Technically, buttons are highlighted by adding the class \"oe_highlight\"::"
msgstr ""

#: ../../reference/views.rst:486
msgid "The Status"
msgstr ""

#: ../../reference/views.rst:488
msgid ""
"Uses the ``statusbar`` widget, and shows the current state in red. States "
"common to all flows (for instance, a sale order begins as a quotation, then "
"we send it, then it becomes a full sale order, and finally it is done) "
"should be visible at all times but exceptions or states depending on "
"particular sub-flow should only be visible when current."
msgstr ""

#: ../../reference/views.rst:500
msgid ""
"The states are shown following the order used in the field (the list in a "
"selection field, etc). States that are always visible are specified with the"
" attribute ``statusbar_visible``."
msgstr ""

#: ../../reference/views.rst:504
msgid ""
"``statusbar_colors`` can be used to give a custom color to specific states."
msgstr ""

#: ../../reference/views.rst:513
msgid "The Sheet"
msgstr ""

#: ../../reference/views.rst:515
msgid "All business views should look like a printed sheet:"
msgstr ""

#: ../../reference/views.rst:520
msgid ""
"Elements inside a ``<form>`` or ``<page>`` do not define groups, elements "
"inside them are laid out according to normal HTML rules. They content can be"
" explicitly grouped using ``<group>`` or regular ``<div>`` elements."
msgstr ""

#: ../../reference/views.rst:523
msgid ""
"By default, the element ``<group>`` defines two columns inside, unless an "
"attribute ``col=\"n\"`` is used.  The columns have the same width (1/n th of"
" the group's width). Use a ``<group>`` element to produce a column of "
"fields."
msgstr ""

#: ../../reference/views.rst:526
msgid ""
"To give a title to a section, add a ``string`` attribute to a ``<group>`` "
"element::"
msgstr ""

#: ../../reference/views.rst:530
msgid "this replaces the former use of ``<separator string=\"XXX\"/>``."
msgstr ""

#: ../../reference/views.rst:531
msgid ""
"The ``<field>`` element does not produce a label, except as direct children "
"of a ``<group>`` element\\ [#backwards-compatibility]_.  Use :samp:`<label "
"for=\"{field_name}>` to produce a label of a field."
msgstr ""

#: ../../reference/views.rst:536
msgid "Sheet Headers"
msgstr ""

#: ../../reference/views.rst:538
msgid ""
"Some sheets have headers with one or more fields, and the labels of those "
"fields are only shown in edit mode."
msgstr ""

#: ../../reference/views.rst:544 ../../reference/views.rst:650
msgid "View mode"
msgstr ""

#: ../../reference/views.rst:545 ../../reference/views.rst:649
msgid "Edit mode"
msgstr ""

#: ../../reference/views.rst:551
msgid ""
"Use HTML text, ``<div>``, ``<h1>``, ``<h2>``… to produce nice headers, and "
"``<label>`` with the class ``oe_edit_only`` to only display the field's "
"label in edit mode. The class ``oe_inline`` will make fields inline (instead"
" of blocks): content following the field will be displayed on the same line "
"rather than on the line below it. The form above is produced by the "
"following XML::"
msgstr ""

#: ../../reference/views.rst:568
msgid "Button Box"
msgstr ""

#: ../../reference/views.rst:570
msgid ""
"Many relevant actions or links can be displayed in the form. For example, in"
" Opportunity form, the actions \"Schedule a Call\" and \"Schedule a "
"Meeting\" have an important place in the use of the CRM. Instead of placing "
"them in the \"More\" menu, put them directly in the sheet as buttons (on the"
" top) to make them more visible and more easily accessible."
msgstr ""

#: ../../reference/views.rst:579
msgid ""
"Technically, the buttons are placed inside a ``<div>`` to group them as a "
"block on the top of the sheet."
msgstr ""

#: ../../reference/views.rst:590
msgid "Groups and Titles"
msgstr ""

#: ../../reference/views.rst:592
msgid ""
"A column of fields is now produced with a ``<group>`` element, with an "
"optional title."
msgstr ""

#: ../../reference/views.rst:605
msgid ""
"It is recommended to have two columns of fields on the form. For this, "
"simply put the ``<group>`` elements that contain the fields inside a top-"
"level ``<group>`` element."
msgstr ""

#: ../../reference/views.rst:609
msgid ""
"To make :ref:`view extension <reference/views/inheritance>` simpler, it is "
"recommended to put a ``name`` attribute on ``<group>`` elements, so new "
"fields can easily be added at the right place."
msgstr ""

#: ../../reference/views.rst:614
msgid "Special Case: Subtotals"
msgstr ""

#: ../../reference/views.rst:616
msgid "Some classes are defined to render subtotals like in invoice forms:"
msgstr ""

#: ../../reference/views.rst:631
msgid "Placeholders and Inline Fields"
msgstr ""

#: ../../reference/views.rst:633
msgid ""
"Sometimes field labels make the form too complex. One can omit field labels,"
" and instead put a placeholder inside the field. The placeholder text is "
"visible only when the field is empty. The placeholder should tell what to "
"place inside the field, it *must not* be an example as they are often "
"confused with filled data."
msgstr ""

#: ../../reference/views.rst:639
msgid ""
"One can also group fields together by rendering them \"inline\" inside an "
"explicit block element like ``<div>``. This allows grouping semantically "
"related fields as if they were a single (composite) fields."
msgstr ""

#: ../../reference/views.rst:643
msgid ""
"The following example, taken from the *Leads* form, shows both placeholders "
"and inline fields (zip and city)."
msgstr ""

#: ../../reference/views.rst:673
msgid "Images"
msgstr ""

#: ../../reference/views.rst:675
msgid ""
"Images, like avatars, should be displayed on the right of the sheet.  The "
"product form looks like:"
msgstr ""

#: ../../reference/views.rst:681
msgid "The form above contains a <sheet> element that starts with:"
msgstr ""

#: ../../reference/views.rst:688
msgid "Tags"
msgstr ""

#: ../../reference/views.rst:690
msgid ""
"Most :class:`~openerp.fields.Many2many` fields, like categories, are better "
"rendered as a list of tags. Use the widget ``many2many_tags`` for this:"
msgstr ""

#: ../../reference/views.rst:701
msgid "Configuration forms guidelines"
msgstr ""

#: ../../reference/views.rst:703
msgid ""
"Examples of configuration forms: Stages, Leave Type, etc.  This concerns all"
" menu items under Configuration of each application (like "
"Sales/Configuration)."
msgstr ""

#: ../../reference/views.rst:709
msgid "no header (because no state, no workflow, no button)"
msgstr ""

#: ../../reference/views.rst:710 ../../reference/views.rst:735
msgid "no sheet"
msgstr ""

#: ../../reference/views.rst:713
msgid "Dialog forms guidelines"
msgstr ""

#: ../../reference/views.rst:715
msgid "Example: \"Schedule a Call\" from an opportunity."
msgstr ""

#: ../../reference/views.rst:720
msgid ""
"avoid separators (the title is already in the popup title bar, so another "
"separator is not relevant)"
msgstr ""

#: ../../reference/views.rst:722
msgid ""
"avoid cancel buttons (user generally close the popup window to get the same "
"effect)"
msgstr ""

#: ../../reference/views.rst:724
msgid "action buttons must be highlighted (red)"
msgstr ""

#: ../../reference/views.rst:725
msgid ""
"when there is a text area, use a placeholder instead of a label or a "
"separator"
msgstr ""

#: ../../reference/views.rst:727
msgid "like in regular form views, put buttons in the <header> element"
msgstr ""

#: ../../reference/views.rst:730
msgid "Configuration Wizards guidelines"
msgstr ""

#: ../../reference/views.rst:732
msgid "Example: Settings / Configuration / Sales."
msgstr ""

#: ../../reference/views.rst:734
msgid "always in line (no popup)"
msgstr ""

#: ../../reference/views.rst:736
msgid "keep the cancel button (users cannot close the window)"
msgstr ""

#: ../../reference/views.rst:737
msgid "the button \"Apply\" must be red"
msgstr ""

#: ../../reference/views.rst:743
msgid "Graphs"
msgstr ""

#: ../../reference/views.rst:745
msgid ""
"The graph view is used to visualize aggregations over a number of records or"
" record groups. Its root element is ``<graph>`` which can take the following"
" attributes:"
msgstr ""

#: ../../reference/views.rst:750
msgid ""
"one of ``bar`` (default), ``pie`` and ``line``, the type of graph to use"
msgstr ""

#: ../../reference/views.rst:753
msgid "``stacked``"
msgstr ""

#: ../../reference/views.rst:752
msgid ""
"only used for ``bar`` charts. If present and set to ``True``, stacks bars "
"within a group"
msgstr ""

#: ../../reference/views.rst:755
msgid ""
"The only allowed element within a graph view is ``field`` which can have the"
" following attributes:"
msgstr ""

#: ../../reference/views.rst:760 ../../reference/views.rst:836
msgid "``name`` (required)"
msgstr ""

#: ../../reference/views.rst:759
msgid ""
"the name of a field to use in a graph view. If used for grouping (rather "
"than aggregating)"
msgstr ""

#: ../../reference/views.rst:763
msgid ""
"indicates whether the field should be used as a grouping criteria or as an "
"aggregated value within a group. Possible values are:"
msgstr ""

#: ../../reference/views.rst:768
msgid "``row`` (default)"
msgstr ""

#: ../../reference/views.rst:767
msgid ""
"groups by the specified field. All graph types support at least one level of"
" grouping, some may support more. For pivot views, each group gets its own "
"row."
msgstr ""

#: ../../reference/views.rst:770
msgid "``col``"
msgstr ""

#: ../../reference/views.rst:771
msgid "only used by pivot tables, creates column-wise groups"
msgstr ""

#: ../../reference/views.rst:773
msgid "``measure``"
msgstr ""

#: ../../reference/views.rst:773
msgid "field to aggregate within a group"
msgstr ""

#: ../../reference/views.rst:778
msgid "``interval``"
msgstr ""

#: ../../reference/views.rst:776
msgid ""
"on date and datetime fields, groups by the specified interval (``day``, "
"``week``, ``month``, ``quarter`` or ``year``) instead of grouping on the "
"specific datetime (fixed second resolution) or date (fixed day resolution)."
msgstr ""

#: ../../reference/views.rst:782
msgid ""
"graph view aggregations are performed on database content, non-stored "
"function fields can not be used in graph views"
msgstr ""

#: ../../reference/views.rst:786
msgid "Pivots"
msgstr ""

#: ../../reference/views.rst:788
msgid ""
"The pivot view is used to visualize aggregations as a `pivot table`_. Its "
"root element is ``<pivot>`` which can take the following attributes:"
msgstr ""

#: ../../reference/views.rst:791
msgid "``disable_linking``"
msgstr ""

#: ../../reference/views.rst:792
msgid "Set to ``True`` to remove table cell's links to list view."
msgstr ""

#: ../../reference/views.rst:794
msgid "``display_quantity``"
msgstr ""

#: ../../reference/views.rst:794
msgid "Set to ``true`` to display the Quantity column by default."
msgstr ""

#: ../../reference/views.rst:796
msgid ""
"The elements allowed within a pivot view are the same as for the graph view."
msgstr ""

#: ../../reference/views.rst:801
msgid "Kanban"
msgstr ""

#: ../../reference/views.rst:803
msgid ""
"The kanban view is a `kanban board`_ visualisation: it displays records as "
"\"cards\", halfway between a :ref:`list view <reference/views/list>` and a "
"non-editable :ref:`form view <reference/views/form>`. Records may be grouped"
" in columns for use in workflow visualisation or manipulation (e.g. tasks or"
" work-progress management), or ungrouped (used simply to visualize records)."
msgstr ""

#: ../../reference/views.rst:809
msgid ""
"The root element of the Kanban view is ``<kanban>``, it can use the "
"following attributes:"
msgstr ""

#: ../../reference/views.rst:814 ../../reference/views.rst:1017
msgid "``default_group_by``"
msgstr ""

#: ../../reference/views.rst:813
msgid ""
"whether the kanban view should be grouped if no grouping is specified via "
"the action or the current research. Should be the name of the field to group"
" by when no grouping is otherwise specified"
msgstr ""

#: ../../reference/views.rst:817
msgid ""
"cards sorting order used if the user has not already sorted the records (via"
" the list view)"
msgstr ""

#: ../../reference/views.rst:820
msgid "adds HTML classes to the root HTML element of the Kanban view"
msgstr ""

#: ../../reference/views.rst:826
msgid "``quick_create``"
msgstr ""

#: ../../reference/views.rst:822
msgid ""
"whether it should be possible to create records without switching to the "
"form view. By default, ``quick_create`` is enabled when the Kanban view is "
"grouped, and disabled when not."
msgstr ""

#: ../../reference/views.rst:826
msgid ""
"Set to ``true`` to always enable it, and to ``false`` to always disable it."
msgstr ""

#: ../../reference/views.rst:828
msgid "Possible children of the view element are:"
msgstr ""

#: ../../reference/views.rst:831
msgid ""
"declares fields to aggregate or to use in kanban *logic*. If the field is "
"simply displayed in the kanban view, it does not need to be pre-declared."
msgstr ""

#: ../../reference/views.rst:834
msgid "Possible attributes are:"
msgstr ""

#: ../../reference/views.rst:837
msgid "the name of the field to fetch"
msgstr ""

#: ../../reference/views.rst:841
msgid "``sum``, ``avg``, ``min``, ``max``, ``count``"
msgstr ""

#: ../../reference/views.rst:839
msgid ""
"displays the corresponding aggregation at the top of a kanban column, the "
"field's value is the label of the aggregation (a string). Only one aggregate"
" operation per field is supported."
msgstr ""

#: ../../reference/views.rst:896
msgid "``templates``"
msgstr ""

#: ../../reference/views.rst:844
msgid ""
"defines a list of :ref:`reference/qweb` templates. Cards definition may be "
"split into multiple templates for clarity, but kanban views *must* define at"
" least one root template ``kanban-box``, which will be rendered once for "
"each record."
msgstr ""

#: ../../reference/views.rst:849
msgid ""
"The kanban view uses mostly-standard :ref:`javascript qweb "
"<reference/qweb/javascript>` and provides the following context variables:"
msgstr ""

#: ../../reference/views.rst:852
msgid "``instance``"
msgstr ""

#: ../../reference/views.rst:853
msgid "the current :ref:`reference/javascript/client` instance"
msgstr ""

#: ../../reference/views.rst:855
msgid ""
"the current :js:class:`KanbanRecord`, can be used to fetch some meta-"
"information. These methods are also available directly in the template "
"context and don't need to be accessed via ``widget``"
msgstr ""

#: ../../reference/views.rst:859
msgid ""
"an object with all the requested fields as its attributes. Each field has "
"two attributes ``value`` and ``raw_value``, the former is formatted "
"according to current user parameters, the latter is the direct value from a "
":meth:`~openerp.models.Model.read` (except for date and datetime fields that"
" are `formatted according to user's locale "
"<https://github.com/odoo/odoo/blob/8.0/addons/web_kanban/static/src/js/kanban.js#L900>`_)"
msgstr ""

#: ../../reference/views.rst:896
msgid "``read_only_mode``"
msgstr ""

#: ../../reference/views.rst:866
msgid "self-explanatory"
msgstr ""

#: ../../reference/views.rst:0
msgid "buttons and fields"
msgstr ""

#: ../../reference/views.rst:871
msgid ""
"While most of the Kanban templates are standard :ref:`reference/qweb`, the "
"Kanban view processes ``field``, ``button`` and ``a`` elements specially:"
msgstr ""

#: ../../reference/views.rst:874
msgid ""
"by default fields are replaced by their formatted value, unless they match "
"specific kanban view widgets"
msgstr ""

#: ../../reference/views.rst:879
msgid ""
"buttons and links with a ``type`` attribute become perform Odoo-related "
"operations rather than their standard HTML function. Possible types are:"
msgstr ""

#: ../../reference/views.rst:884
msgid "``action``, ``object``"
msgstr ""

#: ../../reference/views.rst:883
msgid ""
"standard behavior for :ref:`Odoo buttons <reference/views/list/button>`, "
"most attributes relevant to standard Odoo buttons can be used."
msgstr ""

#: ../../reference/views.rst:886
msgid "``open``"
msgstr ""

#: ../../reference/views.rst:887
msgid "opens the card's record in the form view in read-only mode"
msgstr ""

#: ../../reference/views.rst:888
msgid "``edit``"
msgstr ""

#: ../../reference/views.rst:889
msgid "opens the card's record in the form view in editable mode"
msgstr ""

#: ../../reference/views.rst:891
msgid "deletes the card's record and removes the card"
msgstr ""

#: ../../reference/views.rst:899
msgid "Javascript API"
msgstr ""

#: ../../reference/views.rst:903
msgid ""
":js:class:`Widget` handling the rendering of a single record to a card. "
"Available within its own rendering as ``widget`` in the template context."
msgstr ""

#: ../../reference/views.rst:909
msgid ""
"Converts a color segmentation value to a kanban color class "
":samp:`oe_kanban_color_{color_index}`. The built-in CSS provides classes up "
"to a ``color_index`` of 9."
msgstr ""

#: ../../reference/views.rst:915
msgid ""
"Converts a color segmentation value to a color index (between 0 and 9 by "
"default). Color segmentation values can be either numbers or strings."
msgstr ""

#: ../../reference/views.rst:920
msgid "Generates the URL to the specified field as an image access."
msgstr ""

#: ../../reference/views.rst:922
msgid "model hosting the image"
msgstr ""

#: ../../reference/views.rst:923
msgid "name of the field holding the image data"
msgstr ""

#: ../../reference/views.rst:924
msgid "identifier of the record contaning the image to display"
msgstr ""

#: ../../reference/views.rst:925
msgid ""
"caching duration (in seconds) of the browser default should be overridden. "
"``0`` disables caching entirely"
msgstr ""

#: ../../reference/views.rst:928
msgid "an image URL"
msgstr ""

#: ../../reference/views.rst:932
msgid ""
"clips text beyond the specified size and appends an ellipsis to it. Can be "
"used to display the initial part of potentially very long fields (e.g. "
"descriptions) without the risk of unwieldy cards"
msgstr ""

#: ../../reference/views.rst:939
msgid "Calendar"
msgstr ""

#: ../../reference/views.rst:941
msgid ""
"Calendar views display records as events in a daily, weekly or monthly "
"calendar. Their root element is ``<calendar>``. Available attributes on the "
"calendar view are:"
msgstr ""

#: ../../reference/views.rst:945 ../../reference/views.rst:1002
msgid "``date_start`` (required)"
msgstr ""

#: ../../reference/views.rst:946
msgid "name of the record's field holding the start date for the event"
msgstr ""

#: ../../reference/views.rst:949 ../../reference/views.rst:1009
msgid "``date_stop``"
msgstr ""

#: ../../reference/views.rst:948
msgid ""
"name of the record's field holding the end date for the event, if "
"``date_stop`` is provided records become movable (via drag and drop) "
"directly in the calendar"
msgstr ""

#: ../../reference/views.rst:955 ../../reference/views.rst:1011
msgid "``date_delay``"
msgstr ""

#: ../../reference/views.rst:952
msgid ""
"alternative to ``date_end``, provides the duration of the event instead of "
"its end date"
msgstr ""

#: ../../reference/views.rst:959
msgid "``color``"
msgstr ""

#: ../../reference/views.rst:958
msgid ""
"name of a record field to use for *color segmentation*. Records in the same "
"color segment are allocated the same highlight color in the calendar, colors"
" are allocated semi-randomly."
msgstr ""

#: ../../reference/views.rst:962
msgid "``event_open_popup``"
msgstr ""

#: ../../reference/views.rst:962
msgid ""
"opens the event in a dialog instead of switching to the form view, enabled "
"by default"
msgstr ""

#: ../../reference/views.rst:966
msgid "``quick_add``"
msgstr ""

#: ../../reference/views.rst:965
msgid ""
"enables quick-event creation on click: only asks the user for a ``name`` and"
" tries to create a new event with just that and the clicked event time. "
"Falls back to a full form dialog if the quick creation fails"
msgstr ""

#: ../../reference/views.rst:969
msgid "``display``"
msgstr ""

#: ../../reference/views.rst:969
msgid ""
"format string for event display, field names should be within brackets ``[``"
" and ``]``"
msgstr ""

#: ../../reference/views.rst:974
msgid "``all_day``"
msgstr ""

#: ../../reference/views.rst:972
msgid ""
"name of a boolean field on the record indicating whether the corresponding "
"event is flagged as day-long (and duration is irrelevant)"
msgstr ""

#: ../../reference/views.rst:994
msgid "Gantt"
msgstr ""

#: ../../reference/views.rst:996
msgid "Gantt views appropriately display Gantt charts (for scheduling)."
msgstr ""

#: ../../reference/views.rst:998
msgid ""
"The root element of gantt views is ``<gantt/>``, it has no children but can "
"take the following attributes:"
msgstr ""

#: ../../reference/views.rst:1002
msgid ""
"name of the field providing the start datetime of the event for each record."
msgstr ""

#: ../../reference/views.rst:1005
msgid ""
"name of the field providing the end duration of the event for each record. "
"Can be replaced by ``date_delay``. One (and only one) of ``date_stop`` and "
"``date_delay`` must be provided."
msgstr ""

#: ../../reference/views.rst:1009
msgid ""
"If the field is ``False`` for a record, it's assumed to be a \"point event\""
" and the end date will be set to the start date"
msgstr ""

#: ../../reference/views.rst:1012
msgid "name of the field providing the duration of the event"
msgstr ""

#: ../../reference/views.rst:1014
msgid "``progress``"
msgstr ""

#: ../../reference/views.rst:1014
msgid ""
"name of a field providing the completion percentage for the record's event, "
"between 0 and 100"
msgstr ""

#: ../../reference/views.rst:1017
msgid "name of a field to group tasks by"
msgstr ""

#: ../../reference/views.rst:1033
msgid "Diagram"
msgstr ""

#: ../../reference/views.rst:1035
msgid ""
"The diagram view can be used to display directed graphs of records. The root"
" element is ``<diagram>`` and takes no attributes."
msgstr ""

#: ../../reference/views.rst:1038
msgid "Possible children of the diagram view are:"
msgstr ""

#: ../../reference/views.rst:1051
msgid "``node`` (required, 1)"
msgstr ""

#: ../../reference/views.rst:1041
msgid "Defines the nodes of the graph. Its attributes are:"
msgstr ""

#: ../../reference/views.rst:1044
msgid "the node's Odoo model"
msgstr ""

#: ../../reference/views.rst:1047
msgid "``shape``"
msgstr ""

#: ../../reference/views.rst:1046
msgid ""
"conditional shape mapping similar to colors and fonts in :ref:`the list view"
" <reference/views/list>`. The only valid shape is ``rectangle`` (the default"
" shape is an ellipsis)"
msgstr ""

#: ../../reference/views.rst:1051
msgid "``bgcolor``"
msgstr ""

#: ../../reference/views.rst:1050
msgid ""
"same as ``shape``, but conditionally maps a background color for nodes. The "
"default background color is white, the only valid alternative is ``grey``."
msgstr ""

#: ../../reference/views.rst:1067
msgid "``arrow`` (required, 1)"
msgstr ""

#: ../../reference/views.rst:1054
msgid "Defines the directed edges of the graph. Its attributes are:"
msgstr ""

#: ../../reference/views.rst:1056
msgid "``object`` (required)"
msgstr ""

#: ../../reference/views.rst:1057
msgid "the edge's Odoo model"
msgstr ""

#: ../../reference/views.rst:1059
msgid "``source`` (required)"
msgstr ""

#: ../../reference/views.rst:1059
msgid ""
":class:`~openerp.fields.Many2one` field of the edge's model pointing to the "
"edge's source node record"
msgstr ""

#: ../../reference/views.rst:1062
msgid "``destination`` (required)"
msgstr ""

#: ../../reference/views.rst:1062
msgid ""
":class:`~openerp.fields.Many2one` field of the edge's model pointing to the "
"edge's destination node record"
msgstr ""

#: ../../reference/views.rst:1067 ../../reference/views.rst:1072
msgid "``label``"
msgstr ""

#: ../../reference/views.rst:1065
msgid ""
"Python list of attributes (as quoted strings). The corresponding "
"attributes's values will be concatenated and displayed as the edge's label"
msgstr ""

#: ../../reference/views.rst:1070
msgid ""
"Explanatory note for the diagram, the ``string`` attribute defines the "
"note's content. Each ``label`` is output as a paragraph in the diagram "
"header, easily visible but without any special emphasis."
msgstr ""

#: ../../reference/views.rst:1077
msgid "Search"
msgstr ""

#: ../../reference/views.rst:1079
msgid ""
"Search views are a break from previous view types in that they don't display"
" *content*: although they apply to a specific model, they are used to filter"
" other view's content (generally aggregated views e.g. "
":ref:`reference/views/list` or :ref:`reference/views/graph`). Beyond that "
"difference in use case, they are defined the same way."
msgstr ""

#: ../../reference/views.rst:1085
msgid ""
"The root element of search views is ``<search>``. It takes no attributes."
msgstr ""

#: ../../reference/views.rst:1089
msgid "Possible children elements of the search view are:"
msgstr ""

#: ../../reference/views.rst:1092
msgid ""
"fields define domains or contexts with user-provided values. When search "
"domains are generated, field domains are composed with one another and with "
"filters using **AND**."
msgstr ""

#: ../../reference/views.rst:1096
msgid "Fields can have the following attributes:"
msgstr ""

#: ../../reference/views.rst:1099
msgid "the name of the field to filter on"
msgstr ""

#: ../../reference/views.rst:1101
msgid "the field's label"
msgstr ""

#: ../../reference/views.rst:1110
msgid "``operator``"
msgstr ""

#: ../../reference/views.rst:1103
msgid ""
"by default, fields generate domains of the form :samp:`[({name}, {operator},"
" {provided_value})]` where ``name`` is the field's name and "
"``provided_value`` is the value provided by the user, possibly filtered or "
"transformed (e.g. a user is expected to provide the *label* of a selection "
"field's value, not the value itself)."
msgstr ""

#: ../../reference/views.rst:1109
msgid ""
"The ``operator`` attribute allows overriding the default operator, which "
"depends on the field's type (e.g. ``=`` for float fields but ``ilike`` for "
"char fields)"
msgstr ""

#: ../../reference/views.rst:1118
msgid "``filter_domain``"
msgstr ""

#: ../../reference/views.rst:1113
msgid ""
"complete domain to use as the field's search domain, can use a ``self`` "
"variable to inject the provided value in the custom domain. Can be used to "
"generate significantly more flexible domains than ``operator`` alone (e.g. "
"searches on multiple fields at once)"
msgstr ""

#: ../../reference/views.rst:1118
msgid ""
"If both ``operator`` and ``filter_domain`` are provided, ``filter_domain`` "
"takes precedence."
msgstr ""

#: ../../reference/views.rst:1121
msgid ""
"allows adding context keys, including the user-provided value (which as for "
"``domain`` is available as a ``self`` variable). By default, fields don't "
"generate domains."
msgstr ""

#: ../../reference/views.rst:1125
msgid ""
"the domain and context are inclusive and both are generated if if a "
"``context`` is specified. To only generate context values, set "
"``filter_domain`` to an empty list: ``filter_domain=\"[]\"``"
msgstr ""

#: ../../reference/views.rst:1130
msgid "make the field only available to specific users"
msgstr ""

#: ../../reference/views.rst:1132
msgid ""
"use specific search widget for the field (the only use case in standard Odoo"
" 8.0 is a ``selection`` widget for :class:`~openerp.fields.Many2one` fields)"
msgstr ""

#: ../../reference/views.rst:1136
msgid ""
"if the field can provide an auto-completion (e.g. "
":class:`~openerp.fields.Many2one`), filters the possible completion results."
msgstr ""

#: ../../reference/views.rst:1189
msgid "``filter``"
msgstr ""

#: ../../reference/views.rst:1141
msgid ""
"a filter is a predefined toggle in the search view, it can only be enabled "
"or disabled. Its main purposes are to add data to the search context (the "
"context passed to the data view for searching/filtering), or to append new "
"sections to the search filter."
msgstr ""

#: ../../reference/views.rst:1146
msgid "Filters can have the following attributes:"
msgstr ""

#: ../../reference/views.rst:1149
msgid "the label of the filter"
msgstr ""

#: ../../reference/views.rst:1151
msgid ""
"an Odoo :ref:`domain <reference/orm/domains>`, will be appended to the "
"action's domain as part of the search domain"
msgstr ""

#: ../../reference/views.rst:1154
msgid ""
"a Python dictionary, merged into the action's domain to generate the search "
"domain"
msgstr ""

#: ../../reference/views.rst:1157
msgid ""
"logical name for the filter, can be used to :ref:`enable it by default "
"<reference/views/search/defaults>`, can also be used as :ref:`inheritance "
"hook <reference/views/inheritance>`"
msgstr ""

#: ../../reference/views.rst:1161
msgid ""
"a longer explanatory text for the filter, may be displayed as a tooltip"
msgstr ""

#: ../../reference/views.rst:1164
msgid "makes a filter only available to specific users"
msgstr ""

#: ../../reference/views.rst:1170
msgid ""
"Sequences of filters (without non-filters separating them) are treated as "
"inclusively composited: they will be composed with ``OR`` rather than the "
"usual ``AND``, e.g."
msgstr ""

#: ../../reference/views.rst:1179
msgid ""
"if both filters are selected, will select the records whose ``state`` is "
"``draft`` or ``done``, but"
msgstr ""

#: ../../reference/views.rst:1188
msgid ""
"if both filters are selected, will select the records whose ``state`` is "
"``draft`` **and** ``delay`` is below 15."
msgstr ""

#: ../../reference/views.rst:1192
msgid "can be used to separates groups of filters in simple search views"
msgstr ""

#: ../../reference/views.rst:1194
msgid ""
"can be used to separate groups of filters, more readable than ``separator`` "
"in complex search views"
msgstr ""

#: ../../reference/views.rst:1200
msgid "Search defaults"
msgstr ""

#: ../../reference/views.rst:1202
msgid ""
"Search fields and filters can be configured through the action's ``context``"
" using :samp:`search_default_{name}` keys. For fields, the value should be "
"the value to set in the field, for filters it's a boolean value. For "
"instance, assuming ``foo`` is a field and ``bar`` is a filter an action "
"context of:"
msgstr ""

#: ../../reference/views.rst:1214
msgid ""
"will automatically enable the ``bar`` filter and search the ``foo`` field "
"for *acro*."
msgstr ""

#: ../../reference/views.rst:1222
msgid ""
"QWeb views are standard :ref:`reference/qweb` templates inside a view's "
"``arch``. They don't have a specific root element."
msgstr ""

#: ../../reference/views.rst:1225
msgid ""
"A QWeb view can only contain a single template\\ [#template_inherit]_, and "
"the template's name *must* match the view's complete (including module name)"
" :term:`external id`."
msgstr ""

#: ../../reference/views.rst:1229
msgid ""
":ref:`reference/data/template` should be used as a shortcut to define QWeb "
"views."
msgstr ""

#: ../../reference/views.rst:1232
msgid "for backwards compatibility reasons"
msgstr ""

#: ../../reference/views.rst:1233
msgid ""
"an extension function is added for simpler matching in QWeb views: "
"``hasclass(*classes)`` matches if the context node has all the specified "
"classes"
msgstr ""

#: ../../reference/views.rst:1236
msgid ""
"for historical reasons, it has its origin in tree-type views later "
"repurposed to a more table/list-type display"
msgstr ""

#: ../../reference/views.rst:1238
msgid ""
"or no template if it's an inherited view, then :ref:`it should only contain "
"xpath elements <reference/views/inheritance>`"
msgstr ""

#: ../../reference/workflows.rst:4
msgid "Workflows"
msgstr ""

#: ../../reference/workflows.rst:6
msgid ""
"In Odoo, a workflow is a technical artefact to manage a set of \"things to "
"do\" associated to the records of a model. The workflow provides a higher-"
"level way to organize tasks to perform with or on a record."
msgstr ""

#: ../../reference/workflows.rst:10
msgid ""
"More specifically, a workflow is a directed graph where the nodes are called"
" \"activities\" and the arcs are called \"transitions\"."
msgstr ""

#: ../../reference/workflows.rst:13
msgid ""
"Activities define work that should be done within the Odoo server, such as "
"changing the state of some records, or sending emails."
msgstr ""

#: ../../reference/workflows.rst:15
msgid ""
"Transitions control how the workflow progresses from activity to activity."
msgstr ""

#: ../../reference/workflows.rst:17
msgid ""
"In the definition of a workflow, one can attach conditions, signals, and "
"triggers to transitions, so that the behavior of the workflow depends on "
"user actions (such as clicking on a button), changes to records, or "
"arbitrary Python code."
msgstr ""

#: ../../reference/workflows.rst:22
msgid "All in all, Odoo's workflow system provides:"
msgstr ""

#: ../../reference/workflows.rst:24
msgid "a description of the evolution of a record (document) over time"
msgstr ""

#: ../../reference/workflows.rst:25
msgid "automatic actions based on various and flexible conditions"
msgstr ""

#: ../../reference/workflows.rst:26
msgid "management of company roles and validation steps"
msgstr ""

#: ../../reference/workflows.rst:27
msgid "management of interactions between objects"
msgstr ""

#: ../../reference/workflows.rst:28
msgid "a visual representation of document flows through their lifecycle"
msgstr ""

#: ../../reference/workflows.rst:30
msgid "For instance, a basic order could have the following flow:"
msgstr ""

#: ../../reference/workflows.rst:39
msgid ""
"Orders start in the *Draft* state, can be *Confirmed* by a user, and then "
"either shipped (*Closed*) or *Canceled*."
msgstr ""

#: ../../reference/workflows.rst:42
msgid ""
"A company using Odoo may want to add discount support to orders, where sales"
" staff has discretionary discounting powers up to 15%, but manager "
"validation is required for discounts beyond 15%. The workflow can be altered"
" online to add the relevant steps without editing Python or XML files:"
msgstr ""

#: ../../reference/workflows.rst:50
msgid ""
"Because Activities can perform arbitrary actions, the *Validation* can "
"automatically send a validation request to the relevant employee."
msgstr ""

#: ../../reference/workflows.rst:53
msgid ""
"the order view needs to be modified to add an *Accept Discount* button for "
"managers"
msgstr ""

#: ../../reference/workflows.rst:57
msgid "Basics"
msgstr ""

#: ../../reference/workflows.rst:59
msgid ""
"Defining a workflow with data files is straightforward: a record "
"\"workflow\" is given together with records for the activities and the "
"transitions. For instance, here is a simple sequence of two activities "
"defined in XML"
msgstr ""

#: ../../reference/workflows.rst:91
msgid ""
"A worfklow is always defined with respect to a particular model (the model "
"is given by the attribute ``osv`` on the model ``workflow``). Methods "
"specified in the activities or transitions will be called on that model."
msgstr ""

#: ../../reference/workflows.rst:95
msgid ""
"In the example code above, a workflow called \"test_workflow\" is created. "
"It is made up of two activies, named \"a\" and \"b\", and one transition, "
"going from \"a\" to \"b\"."
msgstr ""

#: ../../reference/workflows.rst:99
msgid ""
"The first activity has its attribute ``flow_start`` set to ``True`` so that "
"Odoo knows where to start the workflow traversal after it is instanciated. "
"Because ``on_create`` is set to True on the workflow record, the workflow is"
" instanciated for each newly created record. (Otherwise, the workflow should"
" be instanciated by other means, such as from some module Python code.)"
msgstr ""

#: ../../reference/workflows.rst:105
msgid ""
"When the workflow is instanciated, it begins with activity \"a\". That "
"activity is of kind ``function``, which means that the action ``print_a()`` "
"is a method call on the model ``test.workflow`` (the usual ``cr, uid, ids, "
"context`` arguments are passed for you)."
msgstr ""

#: ../../reference/workflows.rst:110
msgid ""
"The transition between \"a\" and \"b\" does not specify any condition. This "
"means that the workflow instance immediately goes from \"a\" to \"b\" after "
"\"a\" has been processed, and thus also processes activity \"b\"."
msgstr ""

#: ../../reference/workflows.rst:115
msgid "Activities"
msgstr ""

#: ../../reference/workflows.rst:117
msgid ""
"While the transitions can be seen as the control structures of the "
"workflows, activities are where everything happens, from changing record "
"states to sending email."
msgstr ""

#: ../../reference/workflows.rst:121
msgid ""
"Different kinds of activities exist: ``Dummy``, ``Function``, ``Subflow``, "
"and ``Stop all``, each doing different things when the activity is "
"processed. In addition to their kind, activies have other properties, "
"detailed in the next sections."
msgstr ""

#: ../../reference/workflows.rst:127
msgid "Flow start and flow stop"
msgstr ""

#: ../../reference/workflows.rst:129
msgid ""
"The attribute ``flow_start`` is a boolean value specifying whether the "
"activity is processed when the workflow is instanciated. Multiple activities"
" can have their attribute ``flow_start`` set to ``True``. When instanciating"
" a workflow for a record, Odoo simply processes all of them, and evaluate "
"all their outgoing transitions afterwards."
msgstr ""

#: ../../reference/workflows.rst:135
msgid ""
"The attribute ``flow_stop`` is a boolean value specifying whether the "
"activity stops the workflow instance. A workflow instance is considered "
"completed when all its activities with the attribute ``flow_stop`` set to "
"``True`` are completed."
msgstr ""

#: ../../reference/workflows.rst:140
msgid ""
"It is important for Odoo to know when a workflow instance is completed. A "
"workflow can have an activity that is actually another workflow (called a "
"subflow); that activity is completed when the subflow is completed."
msgstr ""

#: ../../reference/workflows.rst:145
msgid "Subflow"
msgstr ""

#: ../../reference/workflows.rst:147
msgid ""
"An activity can embed a complete workflow, called a subflow (the embedding "
"workflow is called the parent workflow). The workflow to instanciate is "
"specified by attribute ``subflow_id``."
msgstr ""

#: ../../reference/workflows.rst:151
msgid ""
"In the GUI, that attribute can not be set unless the kind of the activity is"
" ``Subflow``."
msgstr ""

#: ../../reference/workflows.rst:154
msgid ""
"The activity is considered completed (and its outgoing transitions ready to "
"be evaluated) when the subflow is completed (see attribute ``flow_stop`` "
"above)."
msgstr ""

#: ../../reference/workflows.rst:158
msgid "Sending a signal from a subflow"
msgstr ""

#: ../../reference/workflows.rst:160
msgid ""
"When a workflow is embedded in an activity (as a subflow) of a workflow, the"
" sublow can send a signal from its own activities to the parent workflow by "
"giving a signal name in the attribute ``signal_send``. Odoo processes those "
"activities by sending the value of ``signal_send`` prefixed by \"subflow.\""
"  to the parent workflow instance."
msgstr ""

#: ../../reference/workflows.rst:166
msgid ""
"In other words, it is possible to react and get transitions in the parent "
"workflow as activities are executed in the sublow."
msgstr ""

#: ../../reference/workflows.rst:170
msgid "Server actions"
msgstr ""

#: ../../reference/workflows.rst:172
msgid ""
"An activity can run a \"Server Action\" by specifying its ID in the "
"attribute ``action_id``."
msgstr ""

#: ../../reference/workflows.rst:176
msgid "Python action"
msgstr ""

#: ../../reference/workflows.rst:178
msgid ""
"An activity can execute some Python code, given by the attribute ``action``."
" The evaluation environment is the same as the one explained in the section "
"`Conditions`_."
msgstr ""

#: ../../reference/workflows.rst:183
msgid "Split mode"
msgstr ""

#: ../../reference/workflows.rst:185
msgid ""
"After an activity has been processed, Odoo evaluates its transition to reach"
" the next activity in the flow."
msgstr ""

#: ../../reference/workflows.rst:188
msgid ""
"However if an activity has more than one transition, Odoo must decide which "
"activity or activities to follow."
msgstr ""

#: ../../reference/workflows.rst:194
msgid "This choice is controlled by the ``split_mode`` attribute:"
msgstr ""

#: ../../reference/workflows.rst:197 ../../reference/workflows.rst:222
msgid "``XOR`` (default)"
msgstr ""

#: ../../reference/workflows.rst:197
msgid ""
"By default, Odoo will use the first transition (in ``sequence`` order) whose"
" condition is satisfied. All other transitions are ignored."
msgstr ""

#: ../../reference/workflows.rst:201
msgid "``OR``"
msgstr ""

#: ../../reference/workflows.rst:200
msgid ""
"In ``OR`` mode, all transitions with a satisfied condition are traversed "
"simultanously. Transitions not yet valid will be ignored, even if they "
"become valid later."
msgstr ""

#: ../../reference/workflows.rst:205 ../../reference/workflows.rst:226
msgid "``AND``"
msgstr ""

#: ../../reference/workflows.rst:204
msgid ""
"In ``AND`` mode, Odoo will wait until *all* transitions are satisfied, and "
"will traverse all of them (much like the ``OR`` mode)."
msgstr ""

#: ../../reference/workflows.rst:207
msgid ""
"Both ``OR`` and ``AND`` mode will lead to activities being active in the "
"same workflow."
msgstr ""

#: ../../reference/workflows.rst:211
msgid "Join mode"
msgstr ""

#: ../../reference/workflows.rst:213
msgid ""
"Just like outgoing transition conditions can be combined together to decide "
"whether they can be traversed or not, incoming transitions can be combined "
"together to decide if and when an activity may be processed."
msgstr ""

#: ../../reference/workflows.rst:220
msgid "The ``join_mode`` attribute controls that behavior:"
msgstr ""

#: ../../reference/workflows.rst:223
msgid ""
"Any incoming transition enables the activity and starts its processing."
msgstr ""

#: ../../reference/workflows.rst:225
msgid ""
"The activity is enabled and processed only once *all* incoming transitions "
"have been traversed."
msgstr ""

#: ../../reference/workflows.rst:229
msgid "Kinds"
msgstr ""

#: ../../reference/workflows.rst:231
msgid "An activity's kind defines the type of work an activity can perform."
msgstr ""

#: ../../reference/workflows.rst:234
msgid "Dummy (``dummy``, default)"
msgstr ""

#: ../../reference/workflows.rst:234
msgid ""
"Do nothing at all, or call a server action. Often used as dispatch or gather"
" \"hubs\" for transitions."
msgstr ""

#: ../../reference/workflows.rst:236
msgid "Function (``function``)"
msgstr ""

#: ../../reference/workflows.rst:237
msgid "Run some python code, execute a server action."
msgstr ""

#: ../../reference/workflows.rst:238
msgid "Stop all (``stopall``)"
msgstr ""

#: ../../reference/workflows.rst:239
msgid "Completely stops the workflow instance and marks it as completed."
msgstr ""

#: ../../reference/workflows.rst:248
msgid "Subflow (``subflow``)"
msgstr ""

#: ../../reference/workflows.rst:241
msgid ""
"Starts executing an other workflow, once that workflow is completed the "
"activity is done processing."
msgstr ""

#: ../../reference/workflows.rst:244
msgid ""
"By default, the subflow is instanciated for the same record as the parent "
"workflow. It is possible to change that behavior by providing Python code "
"that returns a record ID (of the same data model as the subflow). The "
"embedded subflow instance is then the one of the given record."
msgstr ""

#: ../../reference/workflows.rst:251
msgid "Transitions"
msgstr ""

#: ../../reference/workflows.rst:253
msgid ""
"Transitions provide the control structures to orchestrate a workflow. When "
"an activity is completed, the workflow engine tries to get across "
"transitions departing from the completed activity, towards the next "
"activities. In their simplest form (as in the example above), they link "
"activities sequentially: activities are processed as soon as the activities "
"preceding them are completed."
msgstr ""

#: ../../reference/workflows.rst:260
msgid ""
"Instead of running all activities in one fell swoop, it is also possible to "
"wait on transitions, going through them only when some criteria are met. The"
" criteria are the conditions, the signals, and the triggers. They are "
"detailed in the following sections."
msgstr ""

#: ../../reference/workflows.rst:266
msgid "Conditions"
msgstr ""

#: ../../reference/workflows.rst:268
msgid ""
"When an activity has been completed, its outgoing transitions are inspected "
"to determine whether it is possible for the workflow instance to proceed "
"through them and reach the next activities. When only a condition is defined"
" (i.e., no signal or trigger is defined), the condition is evaluated by "
"Odoo, and if it evaluates to ``True``, the worklfow instance progresses "
"through the transition.  If the condition is not met, it will be reevaluated"
" every time the associated record is modified, or by an explicit method call"
" to do it."
msgstr ""

#: ../../reference/workflows.rst:276
msgid ""
"By default, the attribute ``condition`` (i.e., the expression to be "
"evaluated) is just \"True\", which trivially evaluates to ``True``. Note "
"that the condition may be several lines long; in that case, the value of the"
" last one determines whether the transition can be taken."
msgstr ""

#: ../../reference/workflows.rst:281
msgid ""
"In the condition evaluation environment, several symbols are conveniently "
"defined (in addition to the Odoo ``safe_eval`` environment):"
msgstr ""

#: ../../reference/workflows.rst:284
msgid "all the model column names, and"
msgstr ""

#: ../../reference/workflows.rst:285
msgid "all the browse record's attributes."
msgstr ""

#: ../../reference/workflows.rst:290
msgid "Signals"
msgstr ""

#: ../../reference/workflows.rst:292
msgid ""
"In addition to a condition, a transition can specify a signal name. When "
"such a signal name is present, the transition is not taken directly, even if"
" the condition evaluates to ``True``. Instead the transition blocks, waiting"
" to be woken up."
msgstr ""

#: ../../reference/workflows.rst:297
msgid ""
"In order to wake up a transition with a defined signal name, the signal must"
" be sent to the workflow instance. A common way to send a signal is to use a"
" button in the user interface, using the element ``<button/>`` with the "
"signal name as the attribute ``name`` of the button. Once the button is "
"clicked, the signal is sent to the workflow instance of the current record."
msgstr ""

#: ../../reference/workflows.rst:303
msgid ""
"The condition is still evaluated when the signal is sent to the workflow "
"instance."
msgstr ""

#: ../../reference/workflows.rst:307
msgid "Triggers"
msgstr ""

#: ../../reference/workflows.rst:309
msgid ""
"With conditions that evaluate to ``False``, transitions are not taken (and "
"thus the activity it leads to is not processed immediately). Still, the "
"workflow instance can get new chances to progress across that transition by "
"providing so-called triggers. The idea is that when the condition is not "
"satisfied, triggers are recorded in database. Later, it is possible to wake "
"up specifically the workflow instances that installed those triggers, "
"offering them to reevaluate their transition conditions. This mechanism "
"makes it cheaper to wake up workflow instances by targetting just a few of "
"them (those that have installed the triggers) instead of all of them."
msgstr ""

#: ../../reference/workflows.rst:319
msgid ""
"Triggers are recorded in database as record IDs (together with the model "
"name) and refer to the workflow instance waiting for those records. The "
"transition definition provides a model name (attribute ``trigger_model``) "
"and a Python expression (attribute ``trigger_expression``) that evaluates to"
" a list of record IDs in the given model. Any of those records can wake up "
"the workflow instance they are associated with."
msgstr ""

#: ../../reference/workflows.rst:326
msgid "triggers are not re-installed whenever the transition is re-tried."
msgstr ""
